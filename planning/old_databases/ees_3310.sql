--
-- File generated with SQLiteStudio v3.2.1 on Sun Aug 22 19:08:47 2021
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: base_mods
CREATE TABLE base_mods (
    [key] TEXT,
    mod   INTEGER
);

INSERT INTO base_mods (
                          [key],
                          mod
                      )
                      VALUES (
                          'cancelled',
                          100
                      );

INSERT INTO base_mods (
                          [key],
                          mod
                      )
                      VALUES (
                          'make_up',
                          200
                      );


-- Table: calendar
CREATE TABLE calendar (
    cal_id    INTEGER,
    date      DATE,
    cancelled INTEGER,
    makeup    INTEGER,
    cal_ref   INTEGER
);

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1001,
                         '2022-01-10',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1002,
                         '2022-01-12',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1003,
                         '2022-01-14',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1004,
                         '2022-01-19',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1005,
                         '2022-01-21',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1006,
                         '2022-01-24',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1007,
                         '2022-01-26',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1008,
                         '2022-01-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1009,
                         '2022-01-31',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1010,
                         '2022-02-02',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1011,
                         '2022-02-04',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1012,
                         '2022-02-07',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1013,
                         '2022-02-09',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1014,
                         '2022-02-11',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1015,
                         '2022-02-14',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1016,
                         '2022-02-16',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1017,
                         '2022-02-18',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1018,
                         '2022-02-21',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1019,
                         '2022-02-23',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1020,
                         '2022-02-25',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1021,
                         '2022-02-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1022,
                         '2022-03-09',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1023,
                         '2022-03-11',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1024,
                         '2022-03-14',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1025,
                         '2022-03-16',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1026,
                         '2022-03-18',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1027,
                         '2022-03-21',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1028,
                         '2022-03-23',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1029,
                         '2022-03-25',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1030,
                         '2022-03-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1031,
                         '2022-03-30',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1032,
                         '2022-04-01',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1033,
                         '2022-04-04',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1034,
                         '2022-04-06',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1035,
                         '2022-04-08',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1036,
                         '2022-04-11',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1037,
                         '2022-04-13',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1038,
                         '2022-04-15',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1039,
                         '2022-04-18',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1040,
                         '2022-04-20',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1041,
                         '2022-04-22',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         1042,
                         '2022-04-25',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         2001,
                         NULL,
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3001,
                         '2022-01-10',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3002,
                         '2022-01-24',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3003,
                         '2022-01-31',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3004,
                         '2022-02-07',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3005,
                         '2022-02-14',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3006,
                         '2022-02-21',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3007,
                         '2022-02-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3008,
                         '2022-03-14',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3009,
                         '2022-03-21',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3010,
                         '2022-03-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3011,
                         '2022-04-04',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3012,
                         '2022-04-11',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3013,
                         '2022-04-18',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         3014,
                         '2022-04-25',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4001,
                         '2022-01-19',
                         0,
                         0,
                         3001
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4002,
                         '2022-01-31',
                         0,
                         0,
                         3002
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4003,
                         '2022-02-07',
                         0,
                         0,
                         3003
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4004,
                         '2022-02-14',
                         0,
                         0,
                         3004
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4005,
                         '2022-02-21',
                         0,
                         0,
                         3005
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4006,
                         '2022-02-28',
                         0,
                         0,
                         3006
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4007,
                         '2022-03-07',
                         0,
                         0,
                         3007
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4008,
                         '2022-03-21',
                         0,
                         0,
                         3008
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4010,
                         '2022-03-28',
                         0,
                         0,
                         3010
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4011,
                         '2022-04-04',
                         0,
                         0,
                         3011
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4051,
                         '2022-04-11',
                         0,
                         0,
                         2001
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4101,
                         '2022-01-26',
                         0,
                         0,
                         4001
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4102,
                         '2022-02-07',
                         0,
                         0,
                         4002
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4103,
                         '2022-02-14',
                         0,
                         0,
                         4003
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4104,
                         '2022-02-21',
                         0,
                         0,
                         4004
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4105,
                         '2022-02-28',
                         0,
                         0,
                         4005
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4106,
                         '2022-03-07',
                         0,
                         0,
                         4006
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         4151,
                         NULL,
                         0,
                         0,
                         4051
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         5001,
                         '2022-02-28',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         5002,
                         '2022-05-01',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         5003,
                         '2022-05-03',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         7001,
                         '2022-01-24',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         7002,
                         '2022-03-04',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         7003,
                         NULL,
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         7004,
                         '2022-04-25',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         7008,
                         NULL,
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         6001,
                         '2022-01-17',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         6002,
                         '2022-03-02',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         6003,
                         '2022-03-04',
                         0,
                         0,
                         NULL
                     );

INSERT INTO calendar (
                         cal_id,
                         date,
                         cancelled,
                         makeup,
                         cal_ref
                     )
                     VALUES (
                         6004,
                         '2022-03-06',
                         0,
                         0,
                         NULL
                     );


-- Table: classes
CREATE TABLE classes (
    class_id          INTEGER,
    class_key         TEXT    PRIMARY KEY,
    class_title       TEXT,
    class_description TEXT
);

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        1,
                        'INTRO',
                        'Introduction',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        2,
                        'INTRO_CLIMATE_CHANGE',
                        'What is Climate Change?',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        3,
                        'ENERGY_BALANCE',
                        'Energy Balance and Climate',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        4,
                        'LAYER_GREENHOUSE',
                        'Greenhouse Effect',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        5,
                        'SPECTRAL_GREENHOUSE',
                        'Greenhouse Gases',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        6,
                        'VERTICAL_STRUCTURE',
                        'Vertical Structure of the Atmosphere',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        7,
                        'GREENHOUSE_REVIEW',
                        'Review of Greenhouse Effect',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        8,
                        'FEEDBACKS',
                        'Feedbacks',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        9,
                        'OCEAN_BIOSPHERE_FEEDBACKS',
                        'Ocean and Biosphere Feedbacks',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        10,
                        'OCEAN_BREATHES',
                        'The Carbon Cycle: Ocean and Biosphere',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        11,
                        'ROCKS_BREATHE',
                        'The Carbon Cycle: Mineral Weathering',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        12,
                        'PERTURBED_CARBON',
                        'Perturbing the Carbon Cycle',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        13,
                        'PALEO_PROXIES',
                        'Climates of the Past',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        15,
                        'PLEISTOCENE',
                        'The Pleistocene Ice Ages',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        14,
                        'CLIMATE_REVIEW',
                        'Review',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        16,
                        'CLIMATE_MODELS',
                        'Climate Models',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        17,
                        'FUTURE_CLIMATES',
                        'Future Climate Change',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        NULL,
                        'REVIEW_FOR_MIDTERM',
                        'Catching up and Review',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        NULL,
                        'MIDTERM_EXAM',
                        NULL,
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        20,
                        'UNCERTAINTY',
                        'Uncertainty about Future Climates',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        21,
                        'CLIMATE_IMPACTS_1',
                        'How Will Climate Change Affect Our Lives? (Part 1)',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        22,
                        'CLIMATE_IMPACTS_2',
                        'How Will Climate Change Affect Our Lives? (Part 2)',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        23,
                        'POLICY_MYTHS',
                        'Policy Myths',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        24,
                        'KAYA_IDENTITY',
                        'The Kaya Identity: Energy Use, Efficiency, and Conservation',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        25,
                        'BOTTOM_UP_DECARBONIZATION',
                        'Reducing Carbon Emissions: Bottom-Up Approaches',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        26,
                        'TOP_DOWN_DECARBONIZATION',
                        'Reducing Carbon Emissions: Top-Down Approaches',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        27,
                        'COST_OF_MITIGATION',
                        'The Cost of Reducing Emissions',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        28,
                        'POLICY_GOALS',
                        'Goals of Climate Policy',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        29,
                        'COSTS_AND_BENEFITS',
                        'Costs and Benefits',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        30,
                        'SOCIAL_COST_OF_CARBON',
                        'Pricing Carbon',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        31,
                        'CARBON_PRICING_INSTRUMENTS',
                        'Carbon Pricing Instruments',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        32,
                        'DISCOUNTING',
                        'Discounting and the Value of Time',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        33,
                        'LIMITS_OF_ECON',
                        'The Limits of Economic Approaches',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        34,
                        'RENEWABLE_ENERGY',
                        'The Case for Renewable Energy',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        35,
                        'NUCLEAR_ENERGY',
                        'The Case for Nuclear Energy',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        36,
                        'GEOENGINEERING_SOLAR_RADIATION',
                        'Geoengineering: Solar Radiation Management',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        37,
                        'GEOENGINEERING_CARBON_CAPTURE',
                        'Geoengineering: Carbon Dioxide Management',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        38,
                        'PRAGMATIC_POLICIES',
                        'Pragmatism and Climate Policy',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        39,
                        'GLOBAL_WARMING_GRIDLOCK',
                        'Global Warming Gridlock',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        40,
                        'BEYOND_GRIDLOCK',
                        'Beyond Gridlock: Second-Best Policies',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        41,
                        'OBSTACLES_PERSPECTIVES',
                        'Obstacles and Perspectives',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        42,
                        'SEMESTER_REVIEW',
                        'Review',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        18,
                        'CLIMATE_FALLACIES',
                        'Identifying Fallacies about Climate Change',
                        NULL
                    );

INSERT INTO classes (
                        class_id,
                        class_key,
                        class_title,
                        class_description
                    )
                    VALUES (
                        19,
                        'CRANKY_UNCLE_GAME',
                        'Climate Fallacies Game',
                        NULL
                    );


-- Table: due_dates
CREATE TABLE due_dates (
    due_id     INTEGER,
    due_key    TEXT    PRIMARY KEY,
    due_desc   INTEGER,
    due_action TEXT,
    due_type   TEXT
);

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          1,
                          'INTRO_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          2,
                          'DATA_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          3,
                          'MODTRAN_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'CLOUD_LAPSE_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          6,
                          'GEOCARB_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          8,
                          'PROJECT_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'PROJECT_PRESENTATIONS',
                          NULL,
                          'presentation',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          10,
                          'DECARB_BOTTOM_UP_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'DECARB_TOP_DOWN_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          11,
                          'DECARB_COUNTRY_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'LAYER_MODEL_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          101,
                          'SOL_INTRO',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'SOL_LAYER_MODEL',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          102,
                          'SOL_DATA',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          103,
                          'SOL_MODTRAN',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'LAYER_MODEL_HW',
                          NULL,
                          'homework',
                          'homework'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'SOL_LAYER_MODEL_HW',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          104,
                          'SOL_LAPSE_CLOUD',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          106,
                          'SOL_GEOCARB',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          4,
                          'LAPSE_CLOUD_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          5,
                          'FEEDBACK_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'PLEISTOCENE_REPORT',
                          NULL,
                          'report',
                          'lab'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          105,
                          'SOL_FEEDBACK',
                          NULL,
                          'publish',
                          'solution'
                      );

INSERT INTO due_dates (
                          due_id,
                          due_key,
                          due_desc,
                          due_action,
                          due_type
                      )
                      VALUES (
                          NULL,
                          'SOL_PLEISTOCENE',
                          NULL,
                          'publish',
                          'solution'
                      );


-- Table: events
CREATE TABLE events (
    event_id  INTEGER,
    event     TEXT,
    event_key TEXT    PRIMARY KEY
);

INSERT INTO events (
                       event_id,
                       event,
                       event_key
                   )
                   VALUES (
                       2,
                       'Midterm deficiencies due',
                       'MIDTERM_DEFICIENCIES'
                   );

INSERT INTO events (
                       event_id,
                       event,
                       event_key
                   )
                   VALUES (
                       4,
                       'Last day of class',
                       'LAST_DAY_OF_CLASS'
                   );

INSERT INTO events (
                       event_id,
                       event,
                       event_key
                   )
                   VALUES (
                       3,
                       'In-class reading day',
                       'IN_CLASS_READING_DAY'
                   );

INSERT INTO events (
                       event_id,
                       event,
                       event_key
                   )
                   VALUES (
                       1,
                       'Discrepancy reports due',
                       'DISCREPANCY_REPORTS'
                   );


-- Table: exams
CREATE TABLE exams (
    exam_id  INTEGER,
    exam_key TEXT    PRIMARY KEY,
    exam     TEXT
);

INSERT INTO exams (
                      exam_id,
                      exam_key,
                      exam
                  )
                  VALUES (
                      1,
                      'MIDTERM_EXAM',
                      'Midterm Exam'
                  );

INSERT INTO exams (
                      exam_id,
                      exam_key,
                      exam
                  )
                  VALUES (
                      2,
                      'FINAL_EXAM',
                      'Final Exam'
                  );

INSERT INTO exams (
                      exam_id,
                      exam_key,
                      exam
                  )
                  VALUES (
                      3,
                      'ALT_FINAL_EXAM',
                      'Alternate Final Exam'
                  );


-- Table: holidays
CREATE TABLE holidays (
    holiday_id   INTEGER,
    holiday_name TEXT,
    holiday_key  TEXT    PRIMARY KEY
);

INSERT INTO holidays (
                         holiday_id,
                         holiday_name,
                         holiday_key
                     )
                     VALUES (
                         1,
                         'Martin Luther King, Jr. Day',
                         'MLK_DAY'
                     );

INSERT INTO holidays (
                         holiday_id,
                         holiday_name,
                         holiday_key
                     )
                     VALUES (
                         2,
                         'Spring Break',
                         'SPRING_BREAK'
                     );

INSERT INTO holidays (
                         holiday_id,
                         holiday_name,
                         holiday_key
                     )
                     VALUES (
                         4,
                         'Thanksgiving Break',
                         'THANKSGIVING_BREAK'
                     );

INSERT INTO holidays (
                         holiday_id,
                         holiday_name,
                         holiday_key
                     )
                     VALUES (
                         3,
                         'Fall Break',
                         'FALL_BREAK'
                     );


-- Table: homework_assignments
CREATE TABLE homework_assignments (
    hw_id          INTEGER PRIMARY KEY,
    hw_grp_key     TEXT,
    hw_due_key     TEXT,
    hw_title       TEXT,
    hw_slug        TEXT,
    hw_is_numbered INTEGER,
    hw_type        TEXT,
    med_hw_type    TEXT,
    short_hw_type  TEXT
);

INSERT INTO homework_assignments (
                                     hw_id,
                                     hw_grp_key,
                                     hw_due_key,
                                     hw_title,
                                     hw_slug,
                                     hw_is_numbered,
                                     hw_type,
                                     med_hw_type,
                                     short_hw_type
                                 )
                                 VALUES (
                                     1,
                                     'LAYER_MODEL',
                                     'LAYER_MODEL_HW',
                                     'Energy Balance and Layer Models',
                                     'layer_models',
                                     1,
                                     'Homework',
                                     'Homework',
                                     'HW'
                                 );


-- Table: homework_groups
CREATE TABLE homework_groups (
    hw_grp_id    INTEGER,
    hw_grp_key   TEXT    PRIMARY KEY,
    hw_grp_order INTEGER
);

INSERT INTO homework_groups (
                                hw_grp_id,
                                hw_grp_key,
                                hw_grp_order
                            )
                            VALUES (
                                1,
                                'LAYER_MODEL',
                                1
                            );


-- Table: homework_items
CREATE TABLE homework_items (
    hw_item_id         INTEGER PRIMARY KEY,
    hw_grp_key         TEXT,
    short_homework     TEXT,
    homework           TEXT,
    homework_notes     TEXT,
    undergraduate_only INTEGER,
    graduate_only      INTEGER,
    hw_break_before    INTEGER,
    hw_prologue        INTEGER,
    hw_epilogue        INTEGER
);

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               100,
                               'LAYER_MODEL',
                               NULL,
                               NULL,
                               '```{r setup, include=FALSE}
# This section sets up some options on knitr for processing the RMarkdown file
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)
```
```{r initialize, include=FALSE}
# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md and make_layer_diagram.
# 
library(tidyverse)
library(stringr)

source("_scripts/format_md.R")
source("_scripts/layer_diagram.R")
```
# Instructions

The exercises from Chapter 3, below, are not to do for the lab
but are homework exercises. You have a choice:

* You can do the exercises out of the book like regular homework and
  turn them in at the beginning of class on Wednesday, Sept. 5.

* You can do them using RMarkdown and turn them by submitting them 
  electronically on GitHub by the start of class on Wednesday, Sept. 5.
  
    To submit the homework electronically, 
  
    * Accept the assignment on GitHub Classroom at <https://classroom.github.com/a/mExzWHyQ>
    * Clone a local copy of the file repository from github.
    * In your local repository, answer the exercises in the template
      `homework_01.Rmd`.
    * When you are done, knit your `.Rmd` file into a PDF or DOCX (Microsoft Word) file.
    * Use git to commit your changes (including the edits to `homework_01.Rmd`
      and the new PDF or DOCX file) to your local git repository.
    * Push the changes from your local git repository to github.

         The last changes that you push before the due date (start of class
         on Wednesday, Sept. 5) will be graded.

It is your choice how to do them. Either way is acceptable and will get equal
credit.

# Exercises from Chapter 3

For the following exercises, use the following numbers:

* I~solar~ = 1350 W/m^2^
* $\sigma = 5.67 \times 10^{-8}$
* $\alpha = 0.30$
* $\varepsilon = 1.0$

```{r layer_model_constants}
I_solar = 1350
alpha = 0.30
sigma = 5.67E-8
epsilon = 1
```

## Worked Example for One-Layer Atmosphere

> **A One-Layer Model.** 

```{r one_layer_figure, fig.cap = "An energy diagram for a planet with one pane of glass for an atmosphere. The intensity of heat from visible light is $(1 - \\alpha) I_{solar} / 4$."}
make_layer_diagram(1)
```

> a) Write the energy budgets for the atmospheric layer, for the ground, and for
> the Earth as a whole.

**Answer:** Start at the top, at the boundary to sapce, and work downward:

* At the boundary to space, $I_{1,up} = (1 - \alpha) I_{solar} / 4$.

* At the atmospheric layer, $I_{1,up} + I_{1,down} = I_{ground,up}$

* At the ground, $(1 - \alpha) I_{solar} + I_{1,down} = I_{ground,up}$

We also know that

* $I_{1,up} = I_{1,down} = \varepsilon \sigma T_{1}^4$

* $I_{ground,up} = \sigma T_{ground}^4$


> b) Manipulate the budget for the Earth as a whole to obtain the temperature 
> T~1~ of the atmospheric layer. Does this part of the exercise seem familiar in 
> any way? Does the term ring any bells?

**Answer:** 

$$(1 - \alpha) I_{solar} / 4 = I_{1,up} = \sigma T_{1}^4$$

$$(1 - \alpha) I_{solar} / 4 \varepsilon \sigma = T_{1}^4$$

$$T_{1} = \sqrt[4]{\frac{(1 - \alpha) I_{solar}}{4 \varepsilon \sigma}}$$

This is familiar, because it''s the same as the formula for the bare-rock temperature.

Here is R code to calculate $I_{\text{1,up}}$ and $T_1$:

```{r layer_1_temperature}
I_1_up = (1 - alpha) * I_solar / 4
T_1 = (I_1_up / (epsilon * sigma))^0.25
```

From the algebraic solution, we expect T~1~ to be `r format_md(((1 - alpha) * I_solar / (4 * epsilon * sigma))^0.25, digits = 3)` K.
From the R code above, we get T~1~ = `r format_md(T_1, digits = 3)` K.

> c) Now insert the value you found for T~1~ into the budget for atmospheric 
> layer 1 to obtain the temperature of the ground, T~ground~.

**Answer:** 

* $I_{ground} = I_{1,up} + I_{1,down} = 2 \times I_{1,up}$
* $\varepsilon \sigma T_{ground}^4 = 2 \varepsilon \sigma T_{1}^4$
* $T_{ground}^4 = 2 T_{1}^4$
* $T_{ground} = \sqrt[4]{2} \times T_{1}$

And here is R code to calculate $I_{\text{1,down}}$, $I_{\text{ground}}$, and $T_{\text{ground}}$:

```{r ground_temperature}
I_1_down = I_1_up
I_ground = I_1_up + I_1_down
T_ground = (I_ground / (epsilon * sigma))^0.25
```

From the algebraic solution, we get T~ground~ = `r format_md(2^0.25 * T_1, digits = 3)` K and from the R code above, we get T~ground~ = `r format_md(T_ground, digits = 3)` K.

## Exercise 3.1 (Grad. students only)

> **The moon with no heat transport.** The Layer Model assumes that the 
> temperature of the body in space is all the same. This is not really very 
> accurate, as you know that it is colder at the poles than it is at the equator. 
> For a bare rock with no atmosphere or ocean, like the moon, the situation is 
> even worse because fluids like air and water are how heat is carried around on
> the planet. So let us make the other extreme assumption, that there is no heat 
> transport on a bare rock like the moon. Assume for comparability that the 
> albedo of this world is 0.30, same as Earth''s.
>
> What is the equilibrium temperature of the surface of the moon, on the equator, 
> at local noon, when the sun is directly overhead? (Hint: First figure out the 
> intensity of the local solar radiation I~solar~)

```{r ex_3_1_a}
# Put your R code here to answer the question
```

**Answer:** put your answer here ...

> What is the equilibrium temperature on the dark side of the moon?

```{r ex_3_1_b}
# Put your R code here to answer the question
```

**Answer:** put your answer here ...

## Exercise 3.2

> **A Two-Layer Model.** Insert another atmospheric layer into the model, just 
> like the first one. The layer is transparent to visible light but a blackbody 
> for infrared.

```{r two_layer_figure, fig.cap = "An energy diagram for a planet with two panes of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{solar} / 4$."}
make_layer_diagram(2)
```

> a) Write the energy budgets for both atmospheric layers, for the ground, and 
> for the Earth as a whole, like we did for the One-Layer Model.

**Answer:** put your energy budgets here...

> b) Manipulate the budget for the Earth as a whole to obtain the temperature 
> T~2~ of the top atmospheric layer, labeled Atmospheric Layer 2 in the figure 
> above. Does this part of the exercise seem familiar in any way? Does the term 
> ring any bells?

```{r ex_3_2_b}
# Put your R code here to answer the question
```

**Answer:** put the temperature T~2~ here...

> c) Insert the value you found for T~2~ into the energy budget for layer 2, and 
> solve for the temperature of layer 1 in terms of layer 2. How much bigger is 
> T~1~ than T~2~?

```{r ex_3_2_c}
# Put your R code here to answer the question
```

**Answer:** put the temperature T~1~ here....

> d) Now insert the value you found for T~1~ into the budget for atmospheric 
> layer 1 to obtain the temperature of the ground, T~ground~. Is the greenhouse 
> effect stronger or weaker because of the second layer?

```{r ex_3_2_d}
# Put your R code here to answer the question
```

**Answer:** put your answer here...

## Exercise 3.3

```{r nuclear_winter_diagram, fig.cap="An energy diagram for a planet with an opaque pane of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{solar} / 4$."}
make_nuclear_winter_diagram()
```

> **Nuclear Winter.** Let us go back to the One-Layer Model but change it so 
> that the atmospheric layer absorbs visible light rather than allowing it to 
> pass through (See the figure above). This could happen if the upper atmosphere 
> were filled with dust. For simplicity, assume that the albedo of the Earth 
> remains the same, even though in the real world it might change with a dusty 
> atmosphere.>  What is the temperature of the ground in this case?

```{r ex_3_3}
# Put your R code here to answer this question.
```

**Answer:** put your answer here ...
',
                               0,
                               0,
                               0,
                               1,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               101,
                               'LAYER_MODEL',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 3, Exercises 2 & 3.',
                               NULL,
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               102,
                               'LAYER_MODEL',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 3, Exercise 1',
                               NULL,
                               0,
                               1,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               199,
                               'LAYER_MODEL',
                               NULL,
                               NULL,
                               'There is a typo in the book. In Ch. 2, Ex. 2, a dietary Calorie is \SI{4200}{\joule}, not \SI{4.2}{\joule}.',
                               0,
                               0,
                               0,
                               0,
                               1
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               201,
                               'MODTRAN',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 4, Ex. 1 & 3.',
                               NULL,
                               1,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               202,
                               'MODTRAN',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 4, Ex. 1--3.',
                               NULL,
                               0,
                               1,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               299,
                               'MODTRAN',
                               NULL,
                               NULL,
                               'For these exercises, you will use the on-line computer model <%MODTRAN%>, which you can find at \ArcherURL{}. The URL given in the textbook is outdated, so use this link instead.

A helpful feature of the model is that when you start it out, before changing methane or <%COO%> you can press the button "Save this run to background," and then when you change something, the model will report how the upward infrared heat flux changed. By default, the model starts up with settings for the tropical atmosphere. For these exercises I want you to set the Locality to "1976 U.S. Standard Atmosphere." Then you can save the run to background and change the concentrations of greenhouse gases as the exercises direct you to.',
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               301,
                               'LAPSE_RATE',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 5, Ex. 1--2',
                               '
* These two exercises use two different models. In both models, you adjust parameters to achieve radiative balance (where the heat going out equals the heat coming in), but you adjust different parameters in each model, and each model has a different way for you to tell whether the earth is at radiative equilibrium.

    * The \RRTM full-spectrum model is a radiative-convective model that considers the impact of lapse rate on the radiative balance. You can adjust the amount of sunlight hitting the earth, the albedo, the surface temperature, the lapse rate, and other parameters including the amount of cloud cover at different altitudes. The model then divides the atmosphere into many layers and at each layer, it calculates the amount of heat going up and down in the form of shortwave radiation (sunlight) and longwave radiation emitted by the earth and the atmosphere. The model also reports about the balance of heat going up and down at the top of the atmosphere. Your goal is to adjust parameters until the model reports that "If the earth has these properties \dots then it loses as much energy as it gains."  You can also move your mouse over the yellow and purple arrows, which represent shortwave and longwave radiation, respectively, and the computer will show you the amount of heat flowing up or down (in watts per square meter) for that kind of radiation.
    * The <%MODTRAN%> model ignores shortwave light and only considers longwave (infrared) light emitted by the earth''s surface and atmosphere. When you start it up, you pick a locality (for this exercise, use "1976 U.S. Standard Atmosphere" just as you did for the exercises in Chapter 4) and the model will initialize to conditions of radiative balance at that locality (for the 1976 U.S. standard atmosphere, this is \SI{260.18}{W/m^2}). You can then adjust all sorts of parameters (the concentrations of different gases, the conditions of clouds or rain, and the temperature of the ground), and the model will calculate the new upward longwave heat flux at the altitude you specify.  You want to make a note of the upward IR heat flux for the default conditions before you start changing things, and then when you change parameters, such as the amount of <%COO%> in the atmosphere, you can adjust the ground temperature until the upward IR heat flux returns to its initial value.

* For Exercise 1, use the \RRTM full-spectrum model, at \href{http://climatemodels.uchicago.edu/rrtm/}{\nolinkurl{climatemodels.uchicago.edu/rrtm/}}. For this model, you set the lapse rate, <%COO%> concentration, etc., and the model automatically calculates the imbalance between $I_{\text{in}}$ and $I_{\text{out}}$. You can then adjust the surface temperature until the model reports, "\dots{} then it loses as much energy as it gains."
* There''s a typo in exercise 2(a):
The Stefan-Boltzmann constant should be\\
$$\sigma = \SI{5.67E-8}{\watt/\meter^2\kelvin^4}\quad\text{($10^{-8}$, not $10^8$).}$$
* For exercise 2, use the <%MODTRAN%> model. Choose "1976 U.S. Standard Atmosphere" for Location and keep the altitude at its default value of \SI{70}{km}. How would you calculate the skin altitude from this model?
* When exercise 2(d) asks you to add cirrus clouds, use the "NOAA Cirrus model."

',
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               400,
                               'FEEDBACK',
                               NULL,
                               NULL,
                               'These exercises are based on the exercises in _<%MEDIUM_ARCHER%>_ Ch. 7,  but the web interfaces for the models have changed a lot since the book was written and you can''t do the exercises the way they''re written in the book.
I have written these exercises instead to give you a chance to apply the same concepts.


1.[Exercise \#1:]
    Use the <%MODTRAN%> model with the "1976 U.S. Standard Atmosphere" and vary the clouds. 
    Note that this model does not consider incoming shortwave light, and therefore it ignores the albedo effect of clouds. It only calculates the effect of the clouds on outgoing longwave light for a given surface temperature. One way to think about this is that it looks at the effect the clouds have at night.
[a)]
      \setlength{\parskip}{1ex}
    1. Run the model three times: First with clear skies, then with "Altostratus: Cloud Base \SI{2.4}{\kilo\meter} Top \SI{3.0}{\kilo\meter}," and finally with "Stratus: Cloud Base \SI{.33}{\kilo\meter} Top \SI{1.0}{\kilo\meter}."
        Describe the change in \(I_{\text{out}}\) for each type of clouds:

        * Is the effect warming or cooling?
        * Which type of cloud has the bigger effect on $I_{\text{out}}$?
        * Why do you see the difference between the two types of clouds?

%
    1.  Starting set the altitude to zero and select "Looking up." When you are looking up, the model reports the longwave radiation coming down to the surface from the atmosphere and hitting the earth''s surface. This heat is in addition to whatever heat the earth gets from shortwave solar radiation.

        For simplicity, think of this as the conditions at night, when the sun is not shining: without sunlight, the temperature of the ground will be determined by balancing the outgoing heat with the heat radiated downward by the warm atmosphere and clouds.

        First, note the downward longwave heat flux ($I_{\text{down}}$) with clear sky (no clouds or rain). Then turn on altostratus clouds and note the change in $I_{\text{down}}$. Next, turn on stratus clouds and note the change in $I_{\text{down}}$.

        Answer the following questions:

        * How does \(I_{\text{down}}\) change when you add clouds?
        * Do the clouds have a heating or cooling effect? Why?
        * Which clouds have a greater heating or cooling effect? Why?


1.[Exercise \#2:] Use the \RRTM model.
[a)]
      \setlength{\parskip}{1ex}
    1. First set the model to its default parameters. It should report,
          "If the earth has these properties \dots then it loses as much energy as it gains."
          Move your mouse over the arrows at the top and bottom of the graph. The orange arrows are shortwave (mostly visible) light, and the purple arrows are longwave (far-infrared) radiation. How much shortwave and longwave light is absorbed by the ground (the downward arrows at the bottom) and how much of each is emitted to space (the upward arrows at the top)?
    1. Next, add 100% high clouds (set "High cloud (fraction)" to 1.0). Record the total gain or loss of of heat, and the amount of shortwave and longwave radiation absorbed by the surface and emitted to space. Clouds affect both longwave and shortwave heat fluxes. Which kind of radiation changed more?
    1. Now do the same thing for low clouds: set "High cloud (fraction)" to zero and "Low cloud (fraction)" to 1.0. Which kind of radiation changed more, compared to the no-cloud condition?
    1. With the low cloud fraction still set to 1.0 (100%), change the drop radius from \SIrange{10}{8}{\micro\meter}. How does this change the heat flux?
    1. Now set the cloud fraction to zero and double the <%COO%>. How does this change the heat flux? How does the effect of doubling <%COO%> compare to the effect of changing the droplet size for the low clouds? You can see how important it is to get the cloud droplet size right in climate models!

1. [Exercise \#3:] The "climate sensitivity" ($\Delta T_{\text{2x}}$) refers to the change in temperature when you double the amount of <%COO%> in the atmosphere. Here, we will examine how the water vapor feedback affects climate sensitivity.
[a)]
    1. Run the \RRTM model with the default parameters. Write down the ground temperature.
            \medskip

            Next, double <%COO%> and note the change in energy balance. At the
            beginning of the exercise, the earth was in radiative equilibrium. Changing <%COO%> disturbed
            this equilibrium and produced a radiative imbalance where $I_{\text{out}} \neq I_{\text{in}}$.
            Adjust the surface temperature to bring the earth back into balance.
            \medskip


        * What is the new temperature?
        * How much did the earth warm or cool? This temperature change for doubling <%COO%> is what we call the **climate sensitivity**,
                    or $\Delta T_{2\times<%COO%>}$.

%
    1. Set <%COO%> back to the default value (400 ppm) and set relative humidity to zero. This turns off the water vapor feedback.
            Adjust the surface temperature offset until the earth loses as much energy as it gains.
            Write down this temperature.
            \medskip

            Now double the <%COO%> and adjust the surface temperature to bring the heat back into balance.

        * How much did the temperature change?

%
    1. Compare the climate sensitivity with zero relative humidity to the sensitivity with
            the default value of 80% relative humidity. The difference is the effect of water vapor feedback.

        * What was the amplification factor of the water vapor feedback
                (the ratio of the climate sensitivity $\Delta T_{2\times<%COO%>}$ with water vapor
                feedback to $\Delta T_{2\times<%COO%>}$ without it)?


%
1. [Exercise \#4 (Graduate students only):] Repeat exercise 3, but using the <%MODTRAN%> model instead of \RRTM.
[a)]
    1. Set the model to the 1976 U.S. Standard atmosphere, <%COO%> to 400 ppm, and the water vapor scale to 1. Click on "Save This Run to Background."

        * Note the upward IR heat flux.
        * Double the <%COO%> concentration.
        * Adjust the ground temperature offset and set "Holding Fixed" to "Relative Humidity." (the "Holding Fixed" option will not appear until you change the ground temperature offset) Adjust the ground temperature offset until the upward IR heat flux returns to its original value. The change in temperature is the climate sensitivity including water-vapor feedback.

    1. Now return <%COO%> to 400 ppm and set the water vapor scale to 0. This takes all the water out of the atmosphere so there is no water vapor feedback. Check that your locality is still "1976 U.S. Standard Atmosphere.

        * Adjust the ground temperature offset until the upward IR heat flux returns to the value it had at the beginning of part (a).
        * Double the <%COO%> concentration.
        * Adjust the ground temperature offset until you restore the upward IR heat flux to its original value.

          The difference in ground temperature offset from 400 to 800 ppm is the climate sensitivity
          with no water vapor feedback.
    1. What is the amplifying factor of water vapor feedback? How does the amplifying factor you calculated with <%MODTRAN%> compare to the value you calcuated with \RRTM?


',
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               401,
                               'FEEDBACK',
                               NULL,
                               'Exercises 1--3 from the exercises below.',
                               NULL,
                               1,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               402,
                               'FEEDBACK',
                               NULL,
                               'Exercises 1--4 from the exercises below.',
                               NULL,
                               0,
                               1,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               501,
                               'CARBON_CYCLE',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 8, Ex. 1--2, Ch. 10, Ex. 1, and the <%SLUGULATOR%> exercise below.',
                               NULL,
                               1,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               502,
                               'CARBON_CYCLE',
                               NULL,
                               '_<%SHORT_ARCHER%>_, Ch. 8, Ex. 1--3, Ch. 10, Ex. 1, and the <%SLUGULATOR%> exercise below.',
                               NULL,
                               0,
                               1,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               503,
                               'CARBON_CYCLE',
                               NULL,
                               'Do the following exercise (call it 10.4): Using the <%SLUGULATOR%> model at \href{http://climatemodels.uchicago.edu/slugulator/}{\nolinkurl{climatemodels.uchicago.edu/slugulator/}}, compare the impact of
    methane and <%COO%> on timescales of 1, 10, 25, 50, 100, 500, and 1000 years.

The <%SLUGULATOR%> model simulates releasing a large amount of <%COO%> and methane and then calculates what happens over time. At time zero, the concentration of each gas is the natural level from shortly before the industrial revolution: 280 ppm of <%COO%> and 1.6 ppm of methane. At one year, a large amount of each gas is released instantly (after this, there are no further emissions of either gas).
[a)]
1. Run the model using the default model input parameters, setting the left graph to "Concentrations" and the right graph to "Surface T Anomaly".  Set the time scale on the bottom to show 10 years.

Move your mouse over the graphs to measure the exact values (a "tooltip" will pop up next to the cursor telling the time in years and the value of the line on the graph: concentration of <%COO%> or methane, or the warming due to that gas). Be aware that on the concentration graph, the concentration of <%COO%> is plotted against the left axis while methane is plotted against the right axis.

What happens to the concentrations of methane and carbon dioxide? Why does the concentration of <%COO%> continue to rise after the first year, when methane is falling?
1. What is the warming due to methane at 1 year and at 10 years? What is the warming due to <%COO%> at 1 and 10 years? (Use the mouse to examine the time-dependent temperature plotted on the graphs, not the "Time-integrated temperature" in the table at the top of the page). Calculate the ratio of methane-warming to <%COO%>-warming at each time.
1. Change the time scale to show 25, 50, 100, 500, and 1000 years. Make a table showing the warming due to each gas and the ratio of methane-warming to <%COO%>-warming at 1, 10, 25, 50, 100, 500, and 1000 years.
1. Plot the ratio of methane-warming to <%COO%>-warming over time.
1. Why does the ratio change with time?
1. Generating electricity by burning natural gas (methane) releases much less <%COO%> than generating the same amount of electricity by burning coal. "Fracking" has dramatically lowered the cost of natural gas, so many people think this will let us reduce <%COO%> emissions significantly by shutting down coal-fired generating plants and replacing them with natural-gas generation. However, gas wells that use fracking may also leak a lot of methane. Comment on what the significance of this homework exercise is to the debate over whether fracking will help or hurt the problem of global warming.
',
                               'The <%GEOCARB%> model has two time periods: First, it runs for 5 million years with the "Spinup" settings in order to bring the carbon cycle and climate into a steady state. Then, at time zero, it abruptly changes the parameters to the "Simulation" settings and also dumps a "spike" of <%COO%> into the atmosphere and runs for another 2 million years with the new parameters to see how the climate and carbon cycle adjust to the new parameters and the <%COO%> spike.

Notice that some of the graphs show short-time behavior (the first 100,000 years after the transition) and some show the long-time behavior (two million years after the transition).

The quantities that are graphed include:

1.[pCO2] is the concentration of <%COO%> in the atmosphere, in parts per million.
1.[WeatC] is the amount of <%COO%> weathered from carbonate rocks and moved to the oceans.
1.[BurC] is the amount of carbonate converted into limestone and buried on the ocean floor.
1.[WeatS] is the amount of \silica weathered from silicate rocks and moved to the oceans.
1.[Degas] is the amount of <%COO%> released to the atmosphere by volcanic activity.
1.[tco2] is the total <%COO%> dissolved in the ocean, adding all its forms: 
\[\text{tco2} = [CO2] + [H2CO3] + [{HCO3}-] + [CO3^2-].\]
1.[alk] is the ocean alkalinity: the total amount of acid (\hplus) necessary to neutralize the carbonate and bicarbonate in the ocean. The detailed definition is complicated, but to a good approximation, \(\text{alk} = [HCO3^-] + 2 [CO3^2-]\).  This is not crucial for this homework assignment.
1.[CO3] is the concentration of dissolved carbonate ions (<%CARBONATE%>) in the ocean, in moles per cubic meter.
1.[d13Cocn] is the change in the fraction of the carbon-13 (^{13}C) isotope relative to the more common carbon-12 (^{12}C) isotope in the various forms of carbon dissolved in the ocean water.
1.[d13Catm] is the change in the fraction of ^{13}C relative to ^{12}C in atmospheric <%COO%>.
1.[Tatm] is the average air temperature.
1.[Tocn] is the average water temperature of the oceans.

In this homework, you mostly just look at \text{p}CO2, but in exercise 2 in chapter 8, you also have to look at the weathering.
%
% Sometimes you can only see the green line on a graph that has two variables. If this is true, the red line is hidden behind the green line and the two quantities are equal.
%

### Details about the assignment:

1.[Chapter 8, \#1:] Run the model with "Transition <%COO%> spike" set to zero and change the <%COO%> degassing rate in the "Simulation" box. Examine how changing in the degassing rate affects the atmospheric concentration of <%COO%>\, the time it takes to equilibrate (how can you tell when the atmospheric <%COO%> has reached equilibrium?), and how weathering changes to produce this new equilibrium.
1.[Chapter 8, \#2:]
%**Important: instead of 500 million years ago, do the calculations for 300 million years ago. The model outputs confusing results for 500 million years ago and 300 million years ago gives more reasonable numbers.**

    * First, run the simulation with the transition spike set to zero, the degassing rate set to 7.5 in both the spin-up and the simulation and the  "Geologic setting" set to 0 (meaning the present).
    * Then press "Save model run to background," which lets you compare this run to a different run.
    * Next, run the model with the geologic setting at 500 million years ago. The sun was substantially dimmer then. How did this affect
% the temperature and
\text{p}CO2? The original run that you saved (present-day conditions) is labeled as "Alt" in the graphs and the current model run is shown without the "Alt" label. The simulation is supposed to reflect a steady state, so if you see \text{p}CO2 changing, take a careful look at how much it changes during the two million years the graphs cover (it should not change very much, if at all). How does the average value of \text{p}CO2 compare to today? Why is there such a difference?

1.[Chapter 10, \#1:]Run the model with $\text{year} = 0$, degassing set to 7.5 for both the spin-up and the simulation, and a spike of 1000. If you want, feel free to run it more times with different values for the spike. You''re looking for how long it takes \text{p}CO2 to level out and how long it takes \text{p}CO2 to return to its original value (before time zero).
',
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               601,
                               'DECARBONIZATION_1',
                               NULL,
                               'The first part of the decarbonization homework (posted on Blackboard).',
                               NULL,
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               602,
                               'DECARBONIZATION_2',
                               NULL,
                               'The second part of the decarbonization homework (posted on Blackboard).',
                               NULL,
                               0,
                               0,
                               0,
                               0,
                               0
                           );

INSERT INTO homework_items (
                               hw_item_id,
                               hw_grp_key,
                               short_homework,
                               homework,
                               homework_notes,
                               undergraduate_only,
                               graduate_only,
                               hw_break_before,
                               hw_prologue,
                               hw_epilogue
                           )
                           VALUES (
                               603,
                               'ROLE_PLAY',
                               NULL,
                               'The worksheet on market-based solutions to reducing greenhouse gas emissions (posted on Blackboard together with the reading handout on market-based solutions).',
                               NULL,
                               0,
                               0,
                               0,
                               0,
                               0
                           );


-- Table: homework_solutions
CREATE TABLE homework_solutions (
    sol_id       INTEGER PRIMARY KEY,
    sol_grp_key  TEXT,
    sol_pub_key  TEXT,
    sol_title    TEXT,
    sol_filename TEXT,
    sol_pdf_url  TEXT,
    sol_markdown TEXT
);

INSERT INTO homework_solutions (
                                   sol_id,
                                   sol_grp_key,
                                   sol_pub_key,
                                   sol_title,
                                   sol_filename,
                                   sol_pdf_url,
                                   sol_markdown
                               )
                               VALUES (
                                   151,
                                   'LAYER_MODEL',
                                   'SOL_LAYER_MODEL_HW',
                                   'Chapter 3 Homework Answers',
                                   'answers',
                                   '/files/homework_solutions/hw_01/homework_01_answers.pdf',
                                   '```{r setup, include=FALSE}
# This section sets up some options on knitr for processing the RMarkdown file
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)
```
```{r initialize, include=FALSE}
# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md and make_layer_diagram.
# 
library(tidyverse)
library(stringr)

source("_scripts/format_md.R")
source("_scripts/layer_diagram.R")
```
# Instructions

The exercises from Chapter 3, below, are not to do for the lab
but are homework exercises. You have a choice:

* You can do the exercises out of the book like regular homework and
  turn them in at the beginning of class on Wednesday, Sept. 5.

* You can do them using RMarkdown and turn them by submitting them 
  electronically on GitHub by the start of class on Wednesday, Sept. 5.
  
    To submit the homework electronically, 
  
    * Clone a local copy of the file repository from github.
    * In your local repository, answer the exercises in the template
      `homework_01.Rmd`.
    * When you are done, knit your `.Rmd` file into a PDF or DOCX (Microsoft Word) file.
    * Use git to commit your changes (including the edits to `homework_01.Rmd`
      and the new PDF or DOCX file) to your local git repository.
    * Push the changes from your local git repository to github.

         The last changes that you push before the due date (start of class
         on Wednesday, Sept. 5) will be graded.

It is your choice how to do them. Either way is acceptable and will get equal
credit.

# Exercises from Chapter 3

For the following exercises, use the following numbers:

* I~solar~ = 1350 W/m^2^
* $\sigma = 5.67 \times 10^{-8}$
* $\alpha = 0.30$
* $\varepsilon = 1.0$

```{r layer_model_constants}
I_solar = 1350
alpha = 0.30
sigma = 5.67E-8
epsilon = 1
```

## Worked Example for One-Layer Atmosphere

> **A One-Layer Model.** 

```{r one_layer_figure, fig.align="center", fig.pos="htb", fig.cap = "An energy diagram for a planet with one pane of glass for an atmosphere. The intensity of heat from visible light is $(1 - \\alpha) I_{\\text{solar}} / 4$."}
make_layer_diagram(1)
```

> a) Write the energy budgets for the atmospheric layer, for the ground, and for
> the Earth as a whole.

**Answer:** Start at the top, at the boundary to space, and work downward:

* At the boundary to space, $I_{1,\text{up}} = (1 - \alpha) I_{\text{solar}} / 4$.

* At the atmospheric layer, $I_{1,\text{up}} + I_{1,\text{down}} = I_{\text{ground},\text{up}}$

* At the ground, $(1 - \alpha) I_{\text{solar}} + I_{1,\text{down}} = I_{\text{ground},\text{up}}$

We also know that

* $I_{1,\text{up}} = I_{1,\text{down}} = \varepsilon \sigma T_{1}^4$

* $I_{\text{ground},\text{up}} = \sigma T_{\text{ground}}^4$


> b) Manipulate the budget for the Earth as a whole to obtain the temperature 
> T~1~ of the atmospheric layer. Does this part of the exercise seem familiar in 
> any way? Does the term ring any bells?

**Answer:** 

$$(1 - \alpha) I_{\text{solar}} / 4 = I_{1,\text{up}} = \sigma T_{1}^4$$

$$(1 - \alpha) I_{\text{solar}} / 4 \varepsilon \sigma = T_{1}^4$$

$$T_{1} = \sqrt[4]{\frac{(1 - \alpha) I_{\text{solar}}}{4 \varepsilon \sigma}}$$

This is familiar, because it''s the same as the formula for the bare-rock temperature.

Here is R code to calculate $I_{\text{1,up}}$ and $T_1$:

```{r layer_1_temperature}
I_1_up = (1 - alpha) * I_solar / 4
T_1 = (I_1_up / (epsilon * sigma))^0.25
```

From the algebraic solution, we expect T~1~ to be `r format_md(((1 - alpha) * I_solar / (4 * epsilon * sigma))^0.25, digits = 3)` K.
From the R code above, we get T~1~ = `r format_md(T_1, digits = 3)` K.

> c) Now insert the value you found for T~1~ into the budget for atmospheric 
> layer 1 to obtain the temperature of the ground, T~ground~.

**Answer:** 

* $I_{\text{ground}} = I_{1,\text{up}} + I_{1,\text{down}} = 2 \times I_{1,\text{up}}$
* $\varepsilon \sigma T_{\text{ground}}^4 = 2 \varepsilon \sigma T_{1}^4$
* $T_{\text{ground}}^4 = 2 T_{1}^4$
* $T_{\text{ground}} = \sqrt[4]{2} \times T_{1}$

And here is R code to calculate $I_{\text{1,down}}$, $I_{\text{ground}}$, and $T_{\text{ground}}$:

```{r ground_temperature}
I_1_down = I_1_up
I_ground = I_1_up + I_1_down
T_ground = (I_ground / (epsilon * sigma))^0.25
```

From the algebraic solution, we get T~ground~ = `r format_md(2^0.25 * T_1, digits = 3)` K and from the R code above, we get T~ground~ = `r format_md(T_ground, digits = 3)` K.

## Exercise 3.1 (Grad. students only)

> **The moon with no heat transport.** The Layer Model assumes that the 
> temperature of the body in space is all the same. This is not really very 
> accurate, as you know that it is colder at the poles than it is at the equator. 
> For a bare rock with no atmosphere or ocean, like the moon, the situation is 
> even worse because fluids like air and water are how heat is carried around on
> the planet. So let us make the other extreme assumption, that there is no heat 
> transport on a bare rock like the moon. Assume for comparability that the 
> albedo of this world is 0.30, same as Earth''s.
>
> What is the equilibrium temperature of the surface of the moon, on the equator, 
> at local noon, when the sun is directly overhead? (Hint: First figure out the 
> intensity of the local solar radiation I~solar~)



**Answer:** Since the moon has no heat transport, we can consider
I~in~ and I~out~ at the point where the sun is directly overhead, without
worrying about averaging over all of the surface area of the moon.
This means that instead of 
$$ I_{\text{in}} = \frac{(1 - \alpha) I_{\text{solar}}}{4}, $$
we use
$$ I_{\text{in}} = (1 - \alpha) I_{\text{solar}}, $$

so

$$
\begin{aligned}
I_{\text{out}} &= I_{\text{in}} \\
\varepsilon \sigma T_{\text{moon}}^4 &= (1 - \alpha) I_{\text{solar}} \\
T_{\text{moon}}^4 &= \frac{(1 - \alpha) I_{\text{solar}}}{\varepsilon \sigma} \\
T_{\text{moon}} &= \sqrt[4]{\frac{(1 - \alpha) I_{\text{solar}}}{\varepsilon \sigma}} \\
\end{aligned}
$$

```{r ex_3_1_a}
I_solar = 1350 # W / m^2
albedo = 0.3
emissivity = 1
T_moon = ( (1 - albedo) * I_solar / (emissivity * sigma) )^0.25
```

T~moon~ is `r format_md(T_moon, digits = 2)` Kelvin.

> What is the equilibrium temperature on the dark side of the moon?

**Answer:** 

On the dark side of the moon I~solar~ is zero, so we expect the temperature to be zero.

```{r ex_3_1_b}
I_solar_dark = 0
T_dark_side = ( (1 - albedo) * I_solar_dark / (emissivity * sigma) )^0.25
```

T~dark-side~ = `r format_md(T_dark_side, digits = 2)` Kelvin.

In fact, outer space has a radiation that corresponds to  black body with a 
temperature of around 3 Kelvin. This radiation is heat left over from the 
big bang, almost 14 billion years ago.
Scientists call the the "Cosmic Microwave Background Radiation," and it 
means that empty deep space behaves as though it has a temperature of 3 K.
Thus, in our example we would really expect the dark side of the moon to 
have a temperature of around 3 K.

The real dark side of the moon is cold, but not this cold. 

* First, the moon orbits around the earth, so each side gets sunlight for half 
  of each month and is in darkness for half of each month, so even when it''s 
  dark, the surface still has some leftover heat from the last time it was in 
  the sun (it takes a long time to cool all the way from 
  `r format_md(T_moon, digits = 2)` K to 
  `r format_md(T_dark_side, digits = 2)` K). 
* Second, there is a small, but nonzero, flow of heat through the solid moon 
  (this is thermal conduction), so heat does travel from the bright side to the
  dark side. 

These phenomena make the dark side of the moon much warmer than 3 Kelvin, but 
it is still bitterly cold there.

However, the homework explicitly told you to ignore these details, so for the 
purposes of this homework exercise, the correct answer is zero Kelvin.

## Exercise 3.2

> **A Two-Layer Model.** Insert another atmospheric layer into the model, just 
> like the first one. The layer is transparent to visible light but a blackbody 
> for infrared.

```{r two_layer_figure, fig.align="center", fig.pos="htb", fig.cap = "An energy diagram for a planet with two panes of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{\\text{solar}} / 4$."}
make_layer_diagram(2)
```

> a) Write the energy budgets for both atmospheric layers, for the ground, and 
> for the Earth as a whole, like we did for the One-Layer Model.

**Answer:** 


First, we balance the flow of heat up and down at the imaginary boundary between
the atmosphere and outer space.:

$$
\begin{aligned}
I_{2,\text{up}} &= (1 - \alpha) I_{\text{solar}} / 4 \\
\end{aligned}
$$

The top layer of the atmosphere (layer 2) behaves exactly the way it did in the one-layer
model:

$$
\begin{aligned}
I_{2,\text{in}} &= I_{2,\text{out}} \\
I_{1,\text{up}} &= I_{2,\text{up}} + I_{2,\text{down}} = 2 I_{2,\text{up}} \\
\end{aligned}
$$

($I_{2,\text{up}} = I_{2,\text{down}}$ because both are determined by the 
temperature of layer 2, $T_2$, and the Stefan-Boltzmann equation.)

This is essentially the same equation we used for the heat balance of the 
atmosphere in the one-layer model.


The heat-balance for the lower layer of the atmosphere is a little more
complicated because there are two sources of heat in:

$$
\begin{aligned}
I_{1,\text{in}} &= I_{1,\text{out}} \\
I_{\text{ground},\text{up}} +  I_{2,\text{down}} &= I_{1,\text{up}} + I_{1,\text{down}} = 2 I_{1,\text{up}} \\
\end{aligned}
$$

Finally, the heat balance for the ground is

$$
\begin{aligned}
I_{\text{ground},\text{in}} &= I_{\text{ground},\text{out}} \\
\frac{(1 - \alpha ) I_{\text{solar}}}{4} + I_{\text{1},\text{down}} &=
I_{2,\text{up}} + I_{2,\text{down}}  = 2 I_{2,\text{up}} \\
\end{aligned}
$$


> b) Manipulate the budget for the Earth as a whole to obtain the temperature 
> T~2~ of the top atmospheric layer, labeled Atmospheric Layer 2 in the figure 
> above. Does this part of the exercise seem familiar in any way? Does the term 
> ring any bells?

**Answer:** 

$$
\begin{aligned}
I_{2,\text{up}} &= \frac{(1 - \alpha) I_{\text{solar}}}{4} \\
\sigma T_2^4 &= \frac{(1 - \alpha) I_{\text{solar}}}{4} \\
T_2^4 &= \frac{(1 - \alpha) I_{\text{solar}}}{4 \sigma} \\
T_2 &= \sqrt[4]{\frac{(1 - \alpha) I_{\text{solar}}}{4 \sigma}} \\
\end{aligned}
$$



```{r ex_3_2_b}
T_2 = ( (1 - albedo) * I_solar / (4 * sigma) )^0.25
```
This is just like the one-layer model, and we get the same bare-rock temperature for the top of the atmosphere:
T~2~ = `r format_md(T_2, digits = 2)` Kelvin.

> c) Insert the value you found for T~2~ into the energy budget for layer 2, and 
> solve for the temperature of layer 1 in terms of layer 2. How much bigger is 
> T~1~ than T~2~?

**Answer:** 

$$
\begin{aligned}
I_{2,\text{in}} &= I_{2,\text{out}} \\
I_{1,\text{up}} &= I_{2,\text{up}} + I_{2,\text{down}} = 2 I_{2,\text{up}} \\
\sigma T_1^4 &= 2 \sigma T_2^4 \\
T_1^4 &= 2 T_2^4 \\
T_1 &= \sqrt[4]{2}~T_2 \\
\end{aligned}
$$



```{r ex_3_2_c}
T_1 = 2^0.25 * T_2
```

This gives layer 1 the same temperature that the ground had in the one-layer model: 
T~1~ = `r format_md(T_1, digits = 2)`, 
which is $\sqrt[4]{2} = `r format_md(2^0.25, digits = 3)`$ times bigger than T~2~.

> d) Now insert the value you found for T~1~ into the budget for atmospheric 
> layer 1 to obtain the temperature of the ground, T~ground~. Is the greenhouse 
> effect stronger or weaker because of the second layer?


**Answer:** 

This gets a little more complicated:

$$
\begin{aligned}
I_{1,\text{in}} &= I_{1,\text{out}} \\
I_{\text{ground},\text{up}} +  I_{2,\text{down}} &= I_{1,\text{up}} + I_{1,\text{down}} = 2 I_{1,\text{up}} \\
\sigma T_{\text{ground}}^4 + \sigma T_2^4 &= 2 \sigma T_1^4 \\
T_{\text{ground}}^4 + T_2^4 &= 2 T_1^4 \\
T_{\text{ground}}^4 &= 2 T_1^4 - T_2^4 \\
\end{aligned}
$$
But $T_1^4 = 2 T_2^4$, so 
$$
\begin{aligned}
T_{\text{ground}}^4 &= 4 T_2^4 - T_2^4 = 3 T_2^4 \\
T_{\text{ground}} &= \sqrt[4]{3}~T_2^4 \\
\end{aligned}
$$


```{r ex_3_2_d}
T_ground = 3^0.25 * T_2
```

Thus, the ground temperature in the two-layer model is 
`r format_md(T_ground, digits = 2)` Kelvin.
This is `r format_md(T_ground - T_1, digits=1)` Kelvin hotter than the 
ground was in the one-layer model, so adding another layer made the greenhouse
effect stronger.

## Exercise 3.3

```{r nuclear_winter_diagram, fig.align="center", fig.pos="htb", fig.cap="An energy diagram for a planet with an opaque pane of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{\\text{solar}} / 4$."}
make_nuclear_winter_diagram()
```

> **Nuclear Winter.** Let us go back to the One-Layer Model but change it so 
> that the atmospheric layer absorbs visible light rather than allowing it to 
> pass through (See the figure above). This could happen if the upper atmosphere 
> were filled with dust. For simplicity, assume that the albedo of the Earth 
> remains the same, even though in the real world it might change with a dusty 
> atmosphere.>  What is the temperature of the ground in this case?

**Answer:**

We start, as always, by balancing the energy. Just as in all of the other 
layer models, the temperature of the top layer of the atmosphere 
(the dusty layer) is the basic bare-rock temperature (because the dust doesn''t 
change the albedo in this problem).

$$
\begin{aligned}
I_{\text{atm},\text{up}} &= \frac{(1 - \alpha) I_{\text{solar}}}{4} \\
\sigma T_1^4 &= \frac{(1 - \alpha) I_{\text{solar}}}{4} \\
T_1^4 &= \frac{(1 - \alpha) I_{\text{solar}}}{4 \sigma} \\
T_1 &= \sqrt[4]{\frac{(1 - \alpha) I_{\text{solar}}}{4 \sigma}} \\
\end{aligned}
$$

What''s new is that when we balance the heat flow in the dusty atmosphere, we 
have:

$$
\begin{aligned}
I_{\text{atm},\text{in}} &= I_{\text{atm},\text{out}} \\
\frac{((1 - \alpha) I_{\text{solar}}}{4} + I_{\text{ground},\text{up}} &= 
I_{\text{atm},\text{up}} + I_{\text{atm},\text{down}} = 2 I_{\text{atm},\text{up}} \\
\end{aligned}
$$
We could just put numbers in and solve for $T_{\text{ground}}$, but if we remember
that 
$$
\frac{ (1 - \alpha) I_{\text{solar}} }{4} = I_{\text{atm},\text{up}}
$$
we can substitute
$$
\begin{aligned}
I_{\text{atm},\text{up}} + I_{\text{ground},\text{up}} &= 2 I_{\text{atm},\text{up}} \\
I_{\text{ground},\text{up}} &= I_{\text{atm},\text{up}} \\
\sigma T_{\text{ground}}^4 &= \sigma T_{\text{atm}}^4 \\
T_{\text{ground}} &= T_{\text{atm}} \\
\end{aligned}
$$

```{r ex_3_3}
T_atm = ( (1 - albedo) * I_solar / (4 * sigma) )^0.25
T_ground = T_atm
```

So the ground temperature will be `r format_md(T_ground, digits = 2)` K, 
the same as the temperature of the atmosphere, which is the bare-rock
temperature, so there is no greenhouse effect.

'
                               );


-- Table: homework_topics
CREATE TABLE homework_topics (
    hw_grp_key TEXT,
    hw_topic   TEXT
);

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'LAYER_MODEL',
                                'Energy-Balance and Layer Models'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'MODTRAN',
                                'The Greenhouse Effect'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'LAPSE_RATE',
                                'Vertical Structure of the Atmosphere'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'FEEDBACK',
                                'Climate Feedback Exercises'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'CARBON_CYCLE',
                                'Carbon-Cycle'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'DECARBONIZATION_1',
                                'Decarbonization Homework Part 1: Top-Down'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'DECARBONIZATION_2',
                                'Decarbonization Homework Part 2: Bottom-Up'
                            );

INSERT INTO homework_topics (
                                hw_grp_key,
                                hw_topic
                            )
                            VALUES (
                                'CARBON_TRADING',
                                'Emissions Trading Exercises'
                            );


-- Table: lab_assignments
CREATE TABLE lab_assignments (
    lab_id             INTEGER PRIMARY KEY,
    lab_grp_key        TEXT,
    lab_title          TEXT,
    lab_description    TEXT,
    uses_gh_classroom  BOOLEAN,
    lab_assignment_url TEXT,
    report_due_key     TEXT,
    presentation_key   TEXT
);

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                1,
                                'INTRO',
                                'Introduction to Reproducible Research',
                                'This lab will introduce the principles of reproducible research and the tools we will use to perform the tasks of reproducible research.

Before you come to class Monday, please set up a free account on GitHub, as described in "Introduction to Git and GitHub Classroom." After you sign up on GitHub will probably also want to register on GitHub as a student (<https://education.github.com/students>), to get a bunch of free extra features.',
                                1,
                                'https://classroom.github.com/a/HAQ5sVjp',
                                'INTRO_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                2,
                                'DATA',
                                'Working with climate data',
                                'This lab will introduce working with climate data using R and RMarkdown. We will download temperature and CO~2~ measurements from scientific archives of climate data and practice producing tables of measurements, making plots of the measurements, and analyzing the series of measurements to determine the trends over time (rates of increase or decrease).',
                                1,
                                'https://classroom.github.com/a/JdVW2eeC',
                                'DATA_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                3,
                                'MODTRAN',
                                'Infrared light in the atmosphere',
                                'This lab will use the MODTRAN computer model to simulate the transmission of 
different wavelengths of infrared light through the atmosphere and explore the 
effect that different greenhouse gases have on infrared light and the earth''s 
temperature.

There are two files for this lab.

1. Start by reading `lab-03-instructions.pdf`, which describes things you need
to know for this lab (about the R functions for working with the MODTRAN model
and the data that it produces, as well as some useful R functions that we will
use in procesing and graphing data for this lab.)

This file also has the exercises you will do for this lab.

2. When you come to lab, you will work through the exercises, and you will
edit the file `lab-03-exercises.Rmd` to write your answers and show your
work.

## Instructions:

* Accept this assignment.
* Clone a local copy of the file repository from github to your
  own computer.
* In your local repository, answer the exercises in the template
  `lab-03-exercises.Rmd`.
* When you are done, knit your `.Rmd` files into Word or PDF files.
* Use git to stage the files (including the `.Rmd` files
  and the new Word or PDF files) and commit the changes to your 
  local git repository.
* Push the changes from your local git repository to github.

  The last changes that you push before the due date will be graded.

I advise using git to commit changes frequently as you work and push those 
commits to github.

I also advise knitting your answers frequently to make sure that they 
knit correctly.
',
                                1,
                                'https://classroom.github.com/a/p_q5Tals',
                                'MODTRAN_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                4,
                                'FEEDBACK',
                                'Clouds and Climate Feedbacks',
                                'This lab will explore clouds and feedbacks in the climate system.',
                                1,
                                'https://classroom.github.com/a/DHSukcMP',
                                'FEEDBACK_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                5,
                                'LAPSE_CLOUD',
                                'Convection and Clouds',
                                'This lab will explore the role of convection (the vertical motion of air) in the atmosphere, clouds, and their effects on climate.

Three things to note:

* Because of a mixup on my part, I inadvertently briefly made the answers 
  available, so to keep things fair for everyone, I have posted my answers for 
  everyone to see.
* Because of the in-class reading days on Feb. 23--24, I did not want to make 
  this lab due during or right before or after those reading days, so it will 
  be due Monday March 1. Lab 5 will also be due Mar 1., so you will have to get 
  them both in by then, but between the answers being available and the extra 
  week for this lab, I hope this will give you a lot more flexibility in getting 
  the assignments done.
* One big piece of this lab is to use RMarkdown to write a report that really 
  integrates text with code and graphics and tables that are generated by 
  RMarkdown. Use the fact that you can easily check your answers to the specific 
  questions to give you some freedom to think about how you want to present your 
  answers. Don''t just copy and paste from my answers, but think about how you 
  would use RMarkdown to present your answers in your own way.
',
                                1,
                                'https://classroom.github.com/a/f3FG1c56',
                                'LAPSE_CLOUD_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                6,
                                'GEOCARB',
                                'The Geochemical Carbon Cycle',
                                'This lab will use the GEOCARB model to explore the geochemical carbon cycle. We will trace what happens following a large release of carbon dioxide into the atmosphere.',
                                1,
                                'https://classroom.github.com/a/sveGSj_k',
                                'GEOCARB_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                7,
                                'PRE_PROJECT',
                                'Preparing for Independent Projects',
                                'Everyone is feeling a lot of stress and fatigue at this point in the semester, so I have decided to give everyone a week off from new lab assignments.

Starting next week, you will start an independent lab project where you will spend a couple of weeks developing an independent project to look at a new question about climate science. This question can involve looking more deeply into something that you studied in a previous lab, or it can be something new. 

For this week, your assignment is to propose an independent project. **Your proposal will be due Friday March 12 by the end of the day, on Brightspace.** The proposal only needs to be a couple of paragraphs describing what you want to study and what kinds of data (model output, or archived climate data that you will download from the internet).

Lab on Monday March 8 will be used to discuss possible project topics and Mr. de Wet and I will be available to give you feedback and help you think about where you will get data to carry out the project.',
                                0,
                                NULL,
                                'FORMAL_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                8,
                                'PROJECT',
                                'Using RMarkdown for Formal Reports',
                                'In this lab, you and a partner will begin to develop your own projects. During the lab session, we will discuss more details about using RMarkdown to write formal lab reports.',
                                1,
                                'https://classroom.github.com/a/c2o8gyj8',
                                'FORMAL_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                9,
                                'PROJECT_CONT',
                                'Continuing to Work on Formal Report',
                                'You and your partner will continue to work on your group projects. Lab attendance is optional today, but Ms. Best and I will be available in the lab classroom to answer questions and discuss your projects.',
                                1,
                                'https://classroom.github.com/a/c2o8gyj8',
                                'FORMAL_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                10,
                                'DECARB_BOTTOM_UP',
                                'Decarbonizing the World''s Energy Supply: Bottom-Up Approaches',
                                'You will use the Kaya identity to analyze challenges to decarbonizing the world''s energy supply, following the "bottom-up" approach that we read about in <%MEDIUM_PIELKE%>.',
                                1,
                                'https://classroom.github.com/a/haP_LMMu',
                                'DECARB_BOTTOM_UP_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                11,
                                'DECARB_COUNTRY_PROJECT',
                                'Project: Decarbonization Policy for a Country',
                                'Either individually or with a partner, you will pick a country and begin working on a policy analysis for reducing its greenhouse gas emissions.
',
                                1,
                                'https://classroom.github.com/a/WHOnbUnz',
                                'DECARB_COUNTRY_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                12,
                                'ROLE_PLAY',
                                'Role-Playing Emissions Regulations',
                                'This week, we will do something very different. We will role-play different kinds of greenhouse gas emissions regulations: 

* "**Command-and-Control**," in which the EPA mandates the maximum emissions for each company, 
* "**Cap and Trade**," in which the EPA mandates the total emissions, and gives each company a certain number of permits, but the companies can buy and sell permits,
* "**Emissions Tax**," in which the EPA imposes a tax on each ton of emissions, and then reduces other taxes to keep the total government revenue constant.

Students will play different roles: some will act as government regulators at the Environmental Protection Agency and others will act as managers of different companies that must balance their desire to make money against the environmental damage from the pollution they emit.

There is no report to complete for this lab.  Full credit will be given for showing up and participating in the lab exercise. For people who cannot come to lab, there will be a short homework assignment you can complete to get credit for this lab.',
                                0,
                                NULL,
                                NULL,
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                13,
                                'DECARB_COUNTRY_PROJECT_CONT',
                                'Continuing Work on the Decarbonization Policy Analysis',
                                'Lab attendence is optional today. Mr. de Wet and I will be there to answer questions and discuss your projects with you.',
                                1,
                                NULL,
                                'DECARB_COUNTRY_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                14,
                                'DECARB_COUNTRY_PROJECT_CONT_2',
                                'Continuing Work on the Decarbonization Policy Analysis',
                                'Lab attendence is optional today. Mr. de Wet and I will be there to answer questions and discuss your projects with you.',
                                1,
                                NULL,
                                'DECARB_COUNTRY_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                100,
                                'PROJECT_PRESENTATIONS',
                                'Group Project Presentations',
                                'You and your partners will give a presentation about your project in lab
today. 

You should have received an email invitation to join a shared folder 
"EES-3310-5310-Lab-Presentations"" on 
[vanderbilt.box.com](https://vanderbilt.box.com). 
Please accept this invitation and upload your presentation to the 
"Independent-Project" folder inside the "EES-3310-5310-Lab-Presentations"
folder before lab on Monday.

The final report will be due Wednesday Oct. 17. Turn in your final report
by committing and pushing your RMarkdown project to GitHub, including a final 
version of the report knitted to a PDF or Word document.
',
                                1,
                                NULL,
                                'FORMAL_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                104,
                                'CLOUD_LAPSE',
                                'Clouds and Convection',
                                'This lab will explore two different phenomena: First, we will explore the effect that clouds have on infrared transmission and the climate and second we will explore the role of the lapse rate and convection in modifying the greenhouse effect.',
                                1,
                                NULL,
                                'CLOUD_LAPSE_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                107,
                                'PLEISTOCENE',
                                'Pleistocene Ice Ages',
                                'This lab will examine data on carbon dioxide and temperature during the pleistocene ice ages.',
                                1,
                                NULL,
                                'PLEISTOCENE_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                110,
                                'DECARB_COUNTRY',
                                'Decarbonizing the World''s Energy Supply: Top-Down Approaches',
                                'This week, you will continue analyzing decarbonization policy, but this time you will use what''s called a "top-down" approach in which you assume the rates of growth of population and the economy from macroeconomic models, and then figure out what rate of decarbonization is implied by various policy goals.

Note that the due date for the report is in two weeks, not one week.',
                                1,
                                NULL,
                                'DECARB_COUNTRY_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                115,
                                'RMARKDOWN_FOR_REPORTS',
                                'RMarkdown for Reports',
                                'In this lab, we will discuss using RMarkdown for writing papers and formal lab reports. You will also have time to continue working on your projects and get help from Mr. de Wet and Prof. Gilligan',
                                1,
                                NULL,
                                'FORMAL_REPORT',
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                116,
                                'ENERGY_GAME',
                                'Energetic: A Clean Energy Game',
                                'We will split into groups and play a board game that simulates converting New York City to using clean energy',
                                0,
                                NULL,
                                NULL,
                                NULL
                            );

INSERT INTO lab_assignments (
                                lab_id,
                                lab_grp_key,
                                lab_title,
                                lab_description,
                                uses_gh_classroom,
                                lab_assignment_url,
                                report_due_key,
                                presentation_key
                            )
                            VALUES (
                                117,
                                'CRANKY_UNCLE',
                                'Cranky Uncle Game: Responding to Climate Skeptics',
                                'We will play an interactive game about identifying the fallacies in common arguments by climate skeptics',
                                0,
                                NULL,
                                NULL,
                                NULL
                            );


-- Table: lab_groups
CREATE TABLE lab_groups (
    lab_grp_id    INTEGER,
    lab_grp_key   TEXT    PRIMARY KEY ON CONFLICT IGNORE,
    lab_grp_order INTEGER
);

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           1,
                           'INTRO',
                           1
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           2,
                           'DATA',
                           2
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           3,
                           'MODTRAN',
                           3
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'CLOUD_LAPSE',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           6,
                           'GEOCARB',
                           6
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           8,
                           'PROJECT',
                           8
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           10,
                           'DECARB_BOTTOM_UP',
                           10
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'DECARB_TOP_DOWN',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           12,
                           'ROLE_PLAY',
                           12
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           11,
                           'DECARB_COUNTRY_PROJECT',
                           11
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           13,
                           'DECARB_COUNTRY_PROJECT_CONT',
                           13
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           9,
                           'PROJECT_CONT',
                           9
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'ENERGY_GAME',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'RMARKDOWN_FOR_REPORTS',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'CRANKY_UNCLE',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           5,
                           'FEEDBACK',
                           5
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           4,
                           'LAPSE_CLOUD',
                           4
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           NULL,
                           'PLEISTOCENE',
                           NULL
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           14,
                           'DECARB_COUNTRY_PROJECT_CONT_2',
                           14
                       );

INSERT INTO lab_groups (
                           lab_grp_id,
                           lab_grp_key,
                           lab_grp_order
                       )
                       VALUES (
                           7,
                           'PRE_PROJECT',
                           7
                       );


-- Table: lab_items
CREATE TABLE lab_items (
    lab_item_id           INTEGER PRIMARY KEY ON CONFLICT FAIL,
    lab_grp_key           TEXT,
    lab_document_title    TEXT,
    doc_author            TEXT,
    doc_filename          TEXT,
    lab_document_pdf_url  TEXT,
    bibliography          TEXT,
    lab_document_markdown TEXT
);

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          101,
                          'INTRO',
                          'Introduction to EES 3310/5310 Labs',
                          'Jonathan Gilligan',
                          'overview',
                          '/files/lab_docs/lab_01/lab_01_overview.pdf',
                          NULL,
                          '# Overview of EES 3310/5310 Labs

The laboratories in this course are computational. My goals for the laboratory section are:

1. Learn about best practices for _reproducible research_ and get experience applying tools and methods for making 
   sure that your research is reliable, reproducible, and trustworthy.
   We will focus on research about climate science and climate and energy policy, but the methods and tools we will
   use are widely used in all kinds of research in natural and social sciences and also in the private sector.
2. Get experience working with real data: download and analyze data and report the results of your analysis.
3. Get experience working with computer models of different aspects of the climate system. Learn how to use models
   to do science, how to analyze and interpret the results of model simulations, and how to write reports about
   research using computational models.

## General Policies

* There will be **two** web resources for each lab: 
    * **Documentation** that describes the lab and tells you what you need to do to prepare and what you will do in the 
      lab class.
    * **An assignment** that provides a template you will use in carrying out the lab and writing it up. The assignment
      will consist of a web link for you to click on to accept the assignment in GitHub Classroom. After you accept
      the assignment, GitHub Classroom will copy the assignment into your own GitHub Classroom account.
      You will then clone the assignment from GitHub to your own computer or a computer in the lab classroom to work
      on it.

    Both the documentation and the assignment will be posted to the course web site at 
    <https://ees3310.jgilligan.org/schedule/> at least one week before the lab class.
* **Before** coming to lab:
    * Be sure to read the documentation for that week''s lab.
    * Accept the assignment on GitHub Classroom (click on the Assignment link in the course web site). If you will be
      bringing your own computer to the lab, you may want to clone the assignment onto your own computer before you
      come to lab, but that''s not strictly necessary. If you will be using one of the computers in the lab classroom,
      you can clone the assignment when you log in at the beginning of class.
      
* In the first lab, on January 25, Mr. de Wet will explain all of the different software we will be using and will
  walk you through all the steps of using Git to work with your assignments.
   
## Schedule for the Semester

The semester is divided roughly in half. 

### First Half of the Semester:

In the first half, the readings, class sessions, and laboratories will focus 
on understanding the science of how the earth''s climate system works and how human perturbations to the environment may
affect the climate. 

The weekly labs during the first half of the semester will initiially focus on exercises from the book 
_Global Warming: Understanding the Forecast_ 
and then from March 15-28 you will work on using the reproducible research methods to write up a polished
report from one of the previous labs, and this report will be due before you come to lab on March 29.

### Second Half of the Semester

Starting on March 29, you will shift gears and apply the tools you have learned to analyzing policy. 
Specifically, you will analyze data on the economies and energy use of different countries around
the world and use these to compare different policy options for reducing greenhouse gas emissions. 
The labs will begin with exercises that follow the analyses you will be reading about in the book, _The Climate Fix_, and then 
you will perform a detailed analysis of policy options for a country of your choice to make a transition
to a cleaner energy supply.

You will write up a formal report on the country you choose, which will be due on May 1. The last two lab sessions on Apri. 19 and 26 
will be informal times for you to work on this report and ask questions from Prof. Gilligan and Mr. de Wet.

# Online Laboratory

In previous semesters, the lab met in a computer classroom in Stevenson Center or Wilson Hall. However, it is impossible to maintain 
safe distancing in those classrooms during the COVID pandemic, so the lab will be online. We will hold a synchronous lab session on 
Monday afternoons from 2:10--5:00, via Zoom. The links are posted on Brightspace. 

We will also record the lab sessions so that you can watch them asynchronously, and all the instructions for the labs are posted to the
course web site at <https://ees3310.jgilligan.org>.

You will need a computer for the labs. All of the software we will be using is free and open source, and it runs on Windows, MacOS, and Linux,
so no matter what kind of computer you have, you will be able to do the lab work.

# Software Tools

We will use four principal software tools for this class. All four are free and available for Windows, MacOS, and 
Linux. Detailed instructions for downloading and installing them are available on the course web site at
<https://ees3310.jgilligan.org/tools/>:

1. R: statistical analysis software (be sure to get the latest version, 4.0.3)
2. RStudio: a user-friendly interface to R, which makes it much easier to use (be sure to get the latest version, 1.4)
3. Git: a tool for keeping track of revisions in computer code and documents and coordinating working together with
   other people on a project.
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          102,
                          'INTRO',
                          'Introduction to Reproducible Research',
                          'Jonathan Gilligan',
                          'reproducible_research',
                          '/files/lab_docs/lab_01/reproducible_research.pdf',
                          'reproducible-research.bib',
                          '# Why Do We Need Reproducible Research?

In the October 2020, the UK Public Health Service discovered that it had failed to 
include almost 16,000 confirmed cases of coronavirus in its daily reports for the
week of Sept. 25--Oct. 2 [@clough_covid_2020]. This caused the service to fail to warn people in close 
contact with the people who had tested positive, and it prevented the health 
service from seeing that there had been a surge of new cases in the northwest of
the country, including the cities of Liverpool and Manchester.

The cause of this fiasco was the public health service''s decision to use Excel 
spreadsheets to count cases. When lab test results were transferred to Excel,
the total number of cases exceeded the maximum number of rows that Excel
could handle, and Excel ignored all the extra rows (with almost 16,000 
confirmed positive test results).

In the spring of 2012, Bruno Iksil, a securities trader at 
the investment bank JPMorgan, Chase, & Company who was also known by the
nickname "The London Whale" for his aggressive trades, made a series of
costly mistakes that cost JPM-Chase $6.2 billion. [@hurtado_london_2015]
Iksil was attempting to manage the financial risk of a portfolio of investments.
However, an analyst on Iksil''s team had calculated the volatility (a measure of 
financial riskiness) of his portfolio using an Excel spreadsheet and made a subtle
error in a mathematical formula, dividing by the sum of two numbers instead of 
the average. That error caused Iksill to underestimate risk by a factor of 2,
and thus to expose JPM-Chase to far more risk than he realized with his enormous 
trades. [@kwak_importance_2013]

Two years earlier, 
Carmen Reinhart and Kenneth Rogoff,
two highly respected academic economists published an influential 
research paper on the effect of government debt on economic growth. 
[@reinhart_growth_2010] This paper 
concluded that when government debt exceeds 90% of GDP, the country''s economic
growth is likely to abruptly come to a halt, and even slide into recession.
This paper was used to justify harsh austerity measures throughout Europe, where
nations were struggling to recover from the 2008 global economic meltdown,
and was cited by Paul Ryan as justification for his proposals to dramatically 
cut federal spending in the U.S.

Thomas Herndon, a graduate student in economics at the University of Massachusetts,
was skeptical about this research, but Reinhart and Rogoff''s paper did not 
explain all the details of their data and analysis. Finally, in 2013, Reinhart
and Rogoff gave Herndon copies of the spreadsheets they had used in their analysis.
Herndon found three glaring errors in the spreadsheet, and after he fixed the
errors, there was no sudden slowdown of economic growth. 
[@krudy_how_2013; @bailey_reinhart-rogoff_2013; @kwak_importance_2013]

Such errors are not unique to economic research. In the past two years, errors 
in spreadsheet formulas led to the retraction of papers in prominent journals
of environmental science, medicine, and biology. 
[@stern_think_2017; @palus_doing_2016; @ferguson_teflon_2015]

In 2015, a major study of air pollution associated with "fracking" in natural
gas wells was retracted when the authors discovered a major error in an Excel
spreadsheet that they used for data analysis. [@chawla_authors_2016]

Spreadsheets are not the only source of major errors in scientific publications.
Poor statistical practices have led to what has come to be called a "crisis of
replication" in psychology and medicine and concern that many 
published scientific results are incorrect.

Of particular concern is the fact that major problems are being discovered in
clinical medical research. One recent review of 5,000 papers in eight top medical
journals found that almost 100 had major inaccuracies.

## Scientific Errors in Climate Science

Scientific errors have had significant impact in climate science
In the 1990s, John Christy and Roy Spencer, 
a pair of prominent climate scientists at the University of Alabama at Huntsville
(UAH),
were analyzing satellite measurements of microwave emissions from the earth''s 
atmosphere and using them to calculate the temperature of different layers of
the atmosphere. They reported the surprising result that whereas measurements of
temperatures at the earth''s surface, made with thermometers at meteorological
monitoring stations, consistently showed a large warming trend, the satellite
measurements found that the lower troposphere was cooling off. Christy and Spencer
claimed that their satellite measurements were more accurate than the thermometer
measurements taken at the surface and challenged scientific findings that global
warming was taking place. Controversy about the disagreement between the satellite
measurements and the surface measurements raged for years, and was the subject of
a book-length report from the National Academy of Sciences. [@nrc_reconciling_2000]

A rival team of scientists at the company Remote Sensing Systems (RSS) looked into 
the matter and conducted its own analysis of the satellite temperature records.
Christy and Spencer would not release the computer code they used to analyze
the satellite record to the public, so other scientists could not check it for
errors. However, the independent analysis by scientists at RSS revealed a number
of serious errors in the UAH analysis, including a place where the UAH team
mistakenly added two numbers instead of subtracting one from the other (an easy
mistake to make in programming, and one that might have been caught years earlier
if the code had been available for public inspection). 
[@wentz_effects_1998; @mears_effect_2005; @christy_tropospheric_2007] In the end, 
the UAH team released corrections to their satellite temperature measurements, 
and the corrected record agreed well with other measurements, including those by 
thermometers at the surface and weather balloons. The years of controversy over 
whether the lower troposphere was cooling turned out to be mostly the result of 
computer programming errors.

### The Move toward Open Climate Science

In 2009, a leak of thousands of emails by a number of climate scientists led to
a scandal known as "Climategate," in which prominent climate scientists were 
accused of doctoring their data and analysis. Investigations conclusively cleared 
them of any misdeeds, and it turned out that the things they were accused of doing 
in secret had in fact been clearly reported in published papers years before the 
scandal. However, the damage to the reputation of the scientists and the public''s
trust in climate science taught the climate science community the importance of
being completely open with data, methods, and computer code. 

Since then, climate scientists have moved significantly toward adopting principles
of openness. Today, pretty much all major climate data sets are available for free
on the internet. Computer code used for important analysis, including the source
code to many of the major global climate models, is publicly available (although
much of it is not much use unless you have a supercomputer to run it on).

Making all the data and code available helps win trust by convincing the public that
climate scientists do not have anything to hide. It also facilitates faster scientific
progress by allowing scientists more easily to build on one another''s work, 
and it makes it easier to find and correct errors. A good list of major sources
of climate data and computer code is available at 
<http://www.realclimate.org/index.php/data-sources/>.
The R Open Science Project (<https://ropensci.org/>) maintains a number of sophisticated open-source 
scientific projects that cover many fields, such as biology and climate science.
A retired engineer and amateur climate scientist, D. Kelly O''Day, maintains 
a blog (<https://rclimate.wordpress.com/>) where he shares R scripts to download, 
analyze, and graph climate data.

## The Big Picture

For the most part, science works. Advances in all fields of science have led to 
deep understanding of nature, and have led to technological breakthroughs that
drive our economy, enable us to live much longer and healthier lives, and 
otherwise improve the quality of our lives.

Nonetheless, even if only a few percent of major scientific research papers are
wrong, this has potential to mislead us about which medicines or medical procedures
are safe and which are dangerous, about which government policies are likely to 
be effective, and in the private sector, can lead companies to make 
financially disastrous mistakes.

### Reproducible Research

Two important principles in science, which should prevent these errors,
are that research should be _transparent_
and _reproducible_: Research reports should describe the procedures clearly and
in enough detail that other scientists know exactly what was done. And scientists
who repeat the research procedures, as described in the reports, should find
similar results, within the limits of experimental uncertainty.

However, as the anecdotes above, and hundreds of similar reports of problems in
research reveal, too often even well-meaning scientists fall short of providing
enough detail about their methods for other scientists to understand their work
and catch errors, and it is often difficult to truly reproduce previously 
published research.

To address these problems, the scientific community is increasingly embracing the
principles of what has come to be called **reproducible research**.

Federal funding agencies, scientific journals, and scientific societies now call
for authors to reveal all the details of their experiments and analysis, and
must share the data and computer codes they used to perform the analyses described
in their publications.

Whether you are doing research in basic science, such as quantum physics, 
conducting clinical trials to assess the effectiveness and safety of new drugs
and medical procedures, investigating climate change, analyzing economic policy,
or working for a private company to study financial risks and opportunities, 
it will be important for you to be able to do your research accurately, to 
communicate the details clearly with your co-workers and your bosses, and
to be able to return to your old research reports and vouch for all the details of
what you did.

Whether you find yourself working in pure academic research, in public policy, 
or for private industry, the tools of reproducible research will help you do these
things effectively.

# What is Reproducible Research?

_Reproducible research_ seeks to make scientific research completely reproducible
by documenting every decision a researcher made in the course of collecting and
analyzing data. At the simplest level, this would mean that when a scientist
submits a paper to a research journal, she would include all the data and a clear
description of the analysis.

However, a written description of the analysis process might inadvertently omit crucial 
steps, or the researcher might describe what she thought she did, but might have
made errors in her actual analysis.

In the example of Reinhart and Rogoff''s paper on debt and economic growth, the two
economists described what they thought they had done, but they were unaware that
their spreadsheet contained errors. For three years after they published the paper,
the errors remained buried in their spreadsheets but other economists only knew the
written descriptions of the analysis that appeared in their paper and could not
examine the spreadsheet for themselves.

Thus, reproducible research calls for researchers to share not only their data, 
but also any spreadsheets, computer programs, or scripts they used to perform
the analysis. This will allow other researchers to catch errors where the actual
analysis procedure does not match the description in the published report, just
as Thomas Herndon was able to do when he obtained Reinhart and Rogoff''s spreadsheets.

## Scripts versus Spreadsheets

In principle, this should suffice, but in practice it turns out that auditing a
spreadsheet is very difficult. When you open a spreadsheet in Excel, you see
a grid of text and numbers, but the formulas used in calculating the values of
certain cells from other cells are largely invisible and it is difficult to 
read and audit every formula in a spreadsheet that contains thousands of cells.

Thus, the scientific community has become increasingly mistrustful of spreadsheets
and prefers data analysis tools that use scripts to conduct the analysis.
Scripts (basically, short computer programs) are written in a textual form that 
is straightforward for a knowledgeable person to read and understand.
Consistency checks to catch errors are much easier to implement in scripts than
in spreadsheets.

In the labs for EES 3310 and 5310, we will be using scripts for the R statistical
analysis program to analyze climate data and the output of climate models.
In the course of the semester, you will become increasingly familiar with the ideas
of using analysis scripts to promote reproducible research.

## From the Analysis to the Manuscript

Even when analysis is performed correctly, it can be difficult to transcribe
every number correctly into the manuscript of a research report. When I (Professor Gilligan)
was in graduate school, one of my professors told me a cautionary tale from early in 
his career: Three prominent physicists were attempting a very difficult calculation in
quantum electrodynamics. To guard against errors, each of the three performed the 
calculation independently and then they compared their results. They were very excited
to discover that their calculations agreed perfectly. One of them went to 
add up the different terms from the calculations and type the result into the manuscript of a
paper they rushed into print to announce and share their accomplishment. 
Somewhere in the process, he transcribed a number incorrectly, so the
published result was incorrect and the embarrassing error was not discovered until some time
after it appeared in print.

Consider, too, what happens if a research report is almost complete and the researchers
discover an error in their analysis scripts or in their raw data. After they make the
correction, they must adjust every number in their final manuscript. This introduces
additional risks of either mistyping numbers or of missing a number that needs to 
be changed.

With modern computing tools, it has become easy to integrate the analysis with
the final report.

In the EES 3310 and 5310 laboratories, we will use a tool called RMarkdown, which
allows you to combine the text of your lab reports with the scripts that perform 
your data analysis and generate the figures and tables for your report.
Thus, any time you change a number in your data or change a line of code in your
analysis script, the computer can automatically regenerate your report to 
update all of the numbers and figures accordingly.


# Elements of Reproducible Research

This section is adapted from the "Introduction to Reproducible Research"
by the R Open Science Project, <http://ropensci.github.io/reproducibility-guide/sections/introduction/>

## Kinds of Reproducibility

Reproducibility means different things in different scientific fields.
One big distinction is between computational versus observational or empirical 
aspects of research.

* Computational reproducibility provides detailed information on exactly how computations
    (either calculations or simulations using computer models) were performed, 
    and making it possible for others to exactly reproduce those computations or calculations.
    This includes providing source code for programs and scripts written by the researcher, 
    together with detailed specifications of the software (including the specific versions used), 
    and the hardware used (running the same software on different computer hardware can 
    sometimes give different results).
    R has a function that will automatically report the computing hardware and 
    software, so it will be trivial to add this to the end of all your laboratory
    reports.
* Empirical reproducibility provides detailed information about laboratory or field
    procedures that were used to acquire empirical data used in the analysis.
    In practice, this is often accomplished by providing the raw data together with
    details about how it was collected.

In this laboratory, we will focus entirely on _computational reproducibility_.
We will not address all the details of computational reproducibility in this
laboratory, but we will focus on three important aspects:

* **Literate computing and authoring:** 
    Literate computing refers to mixing computer code with narrative description
    of what the code is doing. Stanford computer science professor Donald Knuth 
    invented literate programming based on his experience with large software 
    projects, where he found that if he wrote clear narrative descriptions of 
    what his programming code was doing, he made fewer errors, and could find
    and correct those errors more quickly. 
    
    In this laboratory, we will use RMarkdown and RStudio to apply literate
    computing and authoring in laboratory activities and writing reports.
    
* **Automation:** 
    Many of you may be used to so-called "point-and-click" software
    tools for statistical analysis. Examples include Excel, SPSS, and Stata.
    These tools let you perform analysis by reading in your data and then highlighting
    data with a mouse and selecting menu options.
    This approach makes it easy to get started with these software packages 
    when you are a beginner, but make it difficult to track exactly what you did
    in your analysis, so when it comes time to write up your report, you may not
    remember exactly what you did, and in what order you did it.
    Automating your analysis using scripts means that your script contains the
    complete information about everything you did.
    
    Some programs, such as Stata, allow you to record your analysis and export a 
    script (a `.do` file) that will allow you or others to reproduce your analysis.
    This is a valid form of reproducible research, but it is not the one we will
    use in this course.
    
    Automation is also important if you have to do the same operation on many different data sets.
    What seemed easy when you just had to create one graph or analysis can quickly
    become tedious as you have to drag the mouse and click on the same menu entries 
    over and over again on a dozen different data sets.
    Automating your analysis with scripts makes it easy to run the same script on 
    each of your different data sets.

* **Revision Control:**
    As you edit both your text and the R scripts you use for your analysis, 
    it is valuable to be able to keep track of changes. For instance, if your
    analysis is working well, and then you edit something and it stops working
    it is useful to be able to go back and look at what changed between the
    time when it was working and when it stopped working.
    
    Revision control systems allow you to easily keep track of changes you make
    to your files. 
    
    Another important use of revision control is not relevant to this laboratory
    section,
    but applies to larger research projects. I have computational models that are
    constantly under development and I publish papers based on them. Suppose that
    another scientist has a question about a paper that I wrote two years ago, but
    I have made many changes to the model since then. How can I go back and 
    recreate the version of the model that I used for that paper?
    Revision control systems make this very easy.
    
    Finally, revision control systems are very useful for team projects because they
    allow a team of many researchers to coordinate their activities when they are all
    editing files (computer code and text) for a project at the same time.
    
    We will be using a revision control tool called `git`. There is a web site
    called [github.com](https://github.com), which allows people to share projects.
    My students and I use github to release software that we develop in our research,
    and there is an educational site connected to github, which we will use for 
    laboratory assignments in EES 3310 and 5310.
    
    Everyone should sign up for a free student account on github.

# Software Tools

All the software you will need is installed on the computers in our laboratory classroom (SC 2200, right next to the Science and Engineering Library).
If you want to install it on your personal computer, all the software we use is free and open source.

* R <https://cran.rstudio.com/> Available for Windows, Mac OS X, and Linux

* RStudio is available in many different options. What you want is the Open Source version of RStudio Desktop, which
    you can download from <https://www.rstudio.com/products/rstudio/download/#download>. Be sure to
    install R before you install RStudio.
    
    After you install RStudio, you will almost certainly want to install several optional packages for R
    that we will use extensively for the labs. From the "packages" window in RStudio, click on "Install"
    and install the following packages: "tidyverse", "knitr", "rmarkdown", "xts", "lme4",
    "ggalt", "GGAlly", "ggExtra", "ggspectra", "ggspectra", 
    "ggstance", "gtable", "hrbrthemes", and "pacman"

* Git for revision control.

  You can download Git from <https://git-scm.com/>. 
  After you install Git, it is important to run two commands:
  
  * Open a git command line:
    * On Windows, open the program menu, go to "Git" and click on "Git Bash"
    * On a Mac, open a terminal window
  * Run the two following commands:
    * `git config --global user.name "Your Name"` (using your own name instead of "Your Name")
    * `git config --global user.email "your.email.address@vanderbilt.edu"` (using your own email address)
      
  Git uses information to keep track of who makes changes to a file. If you are editing a file on your 
  computer and a friend is editing it on her computer, git uses this user information to keep track of 
  who made each change. Then when you and your friend merge your changes, git will be able to tell you
  which of you edited what.

## Optional Tools

### Graphical interface to Git

You will be able to do everything you need for the lab using regular git
RStudio, but there is a free graphical interface for Git, called 
[GitAhead](https://gitahead.github.io/gitahead.com/),
that you may find useful. GitAhead works with Git and allows you to do almost 
everything you might want to do using a simple point-and-click interface.

GitAhead can also make it easier to understand what Git is 
doing and when you need to commit files and push your commits to 
GitHub.

GitAhead is available for Windows, MacOS, and Linux, and you can 
get it from <https://gitahead.github.io/gitahead.com/>.


### Making PDF files from RMarkdown

If you want to produce PDF files from RMarkdown, you will need to install the `tinytex` package in R.

This will take some time and will have to download a lot of files from the internet, so wait until you are
somewhere where you have some time to spare, where you have a good fast internet connection,
and preferably where you are not paying for the amount of data you use (e.g., a university WiFi 
connection, a library, etc.).

With a fast internet connection, it should take 5--10 minutes to install and set up.

* From RStudio, go to the "Packages" tab and click on "Install." 
  * Then type "tinytex" and click on "Install". 
* After the package has installed, go to the RStudio console window and type `library(tinytex)` 
* Next, after the library has loaded, type `install_tinytex()`. This is the part that may take 
  some time to complete.

# Walking the Walk

Over the last six years I have become increasingly convinced that reproducible
research methods are both more efficient and also lead to higher quality research.
In my own research, I use the methods and many of the tools that we will use
in this laboratory.

I now write most of my professional papers using RMarkdown and similar tools,
and post the complete code for reproducing the data analysis, figures, tables, 
and text of the paper on GitHub so anyone can inspect all of my work.

# Further Reading

If you are interested in learning more about reproducible research, I would recommend
the following:

* Christopher Gandrud, _Reproducible Research with R and RStudio_ (Second Edition) (CRC Press/Chapman & Hall, 2015).
  Gandrud is an economist and political scientist, who pioneered a lot of the methods that I use for 
  reproducible research as part of his Ph.D. dissertation. This book is a comprehensive how-to guide
  to reproducible research, and all of the files necessary to reproduce the book are available online at
  <https://github.com/christophergandrud/Rep-Res-Book>

* The R Open Science Project, _Reproducibility in Science: A Guide to Enhancing Reproducibility in Scientific Results and Writing_
  <http://ropensci.github.io/reproducibility-guide/>

# References
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          103,
                          'INTRO',
                          'Introduction to Git and GitHub Classroom',
                          'Jonathan Gilligan',
                          'git_intro',
                          '/files/lab_docs/lab_01/git_intro.pdf',
                          NULL,
                          '# Revision Control for Reproducible Research

A very important part of reproducible research is using revision control.

For an excellent introduction to using git with R, I recommend 
Professor Jenny Bryan''s lecture, "Happy Git and GitHub for the useR."
Her slides for the lecture are available at <http://happygitwithr.com/>,
and you can watch the lecture online at 
<https://www.rstudio.com/resources/rstudioconf-2017/happy-git-and-gihub-for-the-user-tutorial/>
(It''s two hours long and walks you through using git with RStudio in detail and
gives lots of practical advice)

## Tools for Revision Control

This document describes two related tools:

* Git is a program that helps you manage revisions in files that you edit (computer code, text documents, etc.), and coordinate sharing documents and working on them with other people.
* GitHub is a web site that allows people to share projects using Git. It is free for educational users and for open-source projects that anyone can see and copy. 
    GitHub also allows paying customers to have private projects. Educational users can set up private projects for free.

    **Before lab on Monday** please sign up for a free account on GitHub at <https://github.com>. I also recommend that after you sign up, you then request a student account 
    at <https://education.github.com/students>. A student account gives you access to a bunch of free extras, such as the ability to set up private projects on GitHub.

    We will use an educational feature of GitHub called GitHub Classroom to distribute the lab assignments and for you to turn them in when you have completed them.


# Installing Git on Your own Computer

Git is installed on the lab computers, but since we will use git to submit lab reports, 
it will probably be a good idea for you to install git on your personal computer
as well. There are three good options for git that work 

* If your computer is a Mac or runs Linux, Git may already be installed. You can check 
  by opening a terminal window and typing `which git`. If the computer responds with something
  like `/usr/bin/git`, then Git is already installed. Otherwise, follow the instructions below.
* For Windows and MacOS, you can download Git from <https://git-scm.com/> and install it on your computer.
* For Linux computers, you can install Git from a terminal window as follows:
    * For Debian or Ubuntu, `sudo apt-get install git`
    * For Fedora or other RedHat-type distributions, `sudo yum install git` or `sudo dnf install git`.

After you install Git, it is important to run two commands:

* Open a git command window:

    * On Windows, open the Start menu, go to "Git" and click on "Git Bash"
    * On a Mac, open a terminal window
    
* Run the two following commands:

    * `git config --global user.name "Your Name"` (using your own name instead of "Your Name")
    * `git config --global user.email "your.email.address@vanderbilt.edu"` (using your own email address)
    
Git uses information to keep track of who makes changes to a file. If you are editing a file on your 
computer and a friend is editing it on her computer, git uses this user information to keep track of 
who made each change. Then when you and your friend merge your changes, git will be able to tell you
which of you edited what.

# What Git Does

Git is a very powerful tool that can do many things, and can become very confusing, even to experts.
Fortunately, we can ignore most of what git can do, and focus on a few simple things:

* Cloning a project from a remote server (e.g., github.com) to make a local copy of the file repository.
* Using file differencing to see what you changed since the last time you committed changes to your local repository
* Staging and committing changes that you made on your local computer to your local file repository
* Synchronizing Pushing changes between your local computer and a remote server.

Pretty much everything you might want to do with git, you can do from inside RStudio.

## Git Vocabulary:

* **Repository** is where git stores the history of an entire project. Git tracks every change that you make to every file in a project.

    Git can synchronize repositories in different computers. We will use github a lot for the labs in this course.
    At the beginning of a lab session, you will clone the repository for the lab from github.
    Cloning makes a copy of the repository from the remote computer to your local computer.
    After you have cloned a repository, you will have not only the current version of all the files
    in the project, but you will have the entire history of each of those files.
    
    If you are collaborating with other people, you can both edit files and then synchronize your repository
    with your partner''s repository and this will let each of you see all of the changes that each of you made
    to the files.
    
    An easy way to clone remote repositories from RStudio is to go to the "File" menu and choose "New Project".
    Then choose the option, "Version Control". Then select "Git" and enter the URL for the remote repository.

* **Commit** A commit is a snapshot of all the files in a repository at some point in time. If you edit some files,
    create some new files, and delete some files, then you can commit all of those changes (edits, new files, and deleted files).
    The git repository will add the new files to the repository, note that the deleted files have been deleted, 
    and note the changes in the edited files between the latest version in the repository and the edited version that you are
    committing. Then it will then note the current state of all the files in the repository, so the commit represents a snapshot of the 
    current state of all the files in the repository when you make the commit.

* **Clone** When you start a new lab project, you will **clone** a template that I post on GitHub classroom. Cloning a project
  not only gives you a copy of the current project, but it also gives you a copy of the entire history of the project, so if you are
  working with a partner and one of you clones a project from the other, you will be able to use Git to coordinate your work and 
  each of you will be able to see everything the other one has done on the project. It is like "track changes" on steroids.

## Using Git with RStudio

* **File Differencing** When you are working in an RStudio project that has a git repository, 
    if you edit a file, RStudio notices that it has changed and the file appears in the "Git" window in RStudio.
    If you highlight that file in the "Git" window and click on the "Diff" button, RStudio will open a window where
    it will show you what changed in the file, compared to the latest version in the repository.
    
    RStudio shows the changes by identifying which lines in the file have changed, and showing the old version
    of those lines in red, and the new version in green. If you delete a line, you will just see a red line,
    and if you add a new line, you will just see a green line.
    
    If you decide that you are not happy with the changes and want to restore the file to the version that 
    existed in the repository, you can right click on the file and select "Revert." Be careful with this,
    because **if you revert a file, you will lose _all_ the changes you made!**
    
    
* **Staging and Committing Changes** is where you tell git to save the changes that you made to your local files into your
    local repository. Git will only record changes in files when you commit changes. Committing is a two-step process:
    first, you tell git which files you want to commit (that is, which files you want to record changes for), and then
    once you have selected the files, you tell git to commit the changes on those files to its memory in the repository.
    
    In RStudio, any file you change will show up in the "Git" window. Changes can be editing a file, creating a new file, 
    or deleting a file. You stage a file by checking the box next to the file name in the "Git" window in RStudio.
    Then you tell git to permanently remember those changes by Committing: Click on the "Commit" button in the "Git" window.
    
    Committing stores changes. If you delete a file, and then stage and commit it, the repository will note that the file is 
    now deleted. However, all of the previous versions of the file, before you committed the delete, will be stored in the
    repository. This is very useful. If you have ever been working on a project and accidentally deleted an important file,
    that can be very painful. With git, **if you committed that file to the repository, then even if you delete the file and commit
    the delete, you will be able to recover the file by checking a previous version out of the repository.**
    
    Note that the repository **only remembers the changes that you tell it to commit.** Specifically, it records the differences
    between the last version of the file that you committed and the new version that you are committing. It does not know anything about
    anything that happened between the two commits. Thus, if you edit a file but do not commit it,
    and then delete the file and commit the file as a deleted file, git will only record the fact that you deleted the file. It will
    not remember any edits that you made before you deleted it.
    
    It is a good idea to commit changes pretty frequently. Any time you hve something that is working, it''s a good idea to commit.
    For instance, if you are working on a lab project that has many parts to it, as soon as you have answered one part you should
    stage and commit the changes. That way, if something goes wrong, you can recover your work from the repository.
    
    When you commit changes to a repository, git asks you to enter a comment to describe the commit. You can give a brief description
    of what you changed in the commit, or remark on the state of the files (e.g., "Answered exercises 1-5." or 
    "Finally, the scripts are working properly!"). Think about what would be useful to you in helping you understand the commit
    if you are looking back over your repository history at some time in the future.

* **Synchronizing Repositories**
    Git can synchronize multiple repositories. You can **push** the changes you have made on your local repository to a
    remote repository on a server, or you can **pull** changes in the remote repository to your local computer and merge
    them into your local repository.

    When you work on the computer in the computer classroom where our lab sessions meet, your edits are stored on the local repository on
    that computer. You turn in your lab work by pushing your local repository to the remote repository at github.com. 
    Only after you have pushed your work will I be able to see what you have done.
    
    If you have a copy of the lab project repository on the computer in the computer classroom and another copy on your personal computer,
    you might make some edits on the classroom computer and some edits on your personal computer. Now you want to synchronize
    the edits you made on the two computers. You do this as follows:
    
    1. **Commit** any changes that you want to keep on the lab computer. You will not be able to proceed if there are any uncommitted changes,
        so you will need to either commit or revert any changed files.
    2. **Commit** any changes that you want to keep on your personal computer.
    3. **Pull** any changes from the remote github repository to the lab computer. If nothing has changed in the remote repository since the
        last time you synchronized the repository on the lab computer, nothing will happen. However, if anything changed in the remote 
        repository, then this will merge the changes to the remote repository with the changes that you committed on your local computer.
    4. **Push** the changes from the lab computer to the remote github repository. This will make sure that the remote repository is identical
        to the repository on the lab computer.
    5. **Pull** the changes from the github repositiroy to your personal computer. 
        This will merge the changes from the lab computer''s repository (which you pushed to the github repository) 
        with the changes that you have committed on your personal computer.
    6. **Push** the changes from your personal computer to the remote repository. This will send the changes on your 
        personal computer to the remote repository on github to make sure that the remote repository on github
        is now identical to the repository on your personal computer.
    7. **Pull** the changes from the remote github repository to the lab computer. This merges the changes from your personal
        computer into the repository on the lab computer.
        
    After the last step, the three repositories (personal computer, lab computer, and github) will all be identical, and will include
    all the changes that you made on your personal computer and the lab computer.

    This may seem complicated, but you can simplify it if you follow a basic practice:
    
    * Every time you start working on a project that has a remote repository, **pull** from the remote repository before you start working.
    * Every time you have committed work that you don''t want to lose, **push** to the remote repository. 
    
        This is particularly important for the lab computers because if the computer you are working on crashes or reboots, or if you log out,
        you will lose all of your files on the lab computer. **If you push your commits to the remote repository on github, then your work is
        preserved.**
        
        This also means that **if you push projects from your personal computer to a remote repository (e.g., on github), then 
        even if your personal computer breaks or gets stolen, the remote github repository will have the whole history of the 
        project, up through the last time you pushed it.**

### Conflicts

If you edit the same file on two different computers, git will attempt to merge the two sets of edits automatically. Git does a good
job with this if you edit different lines on the two computers. However, if you edit the same lines on the two computers, git doesn''t 
know which version of the changed lines you want to keep.

|  Original |  Computer 1 | Computer 2 |
|:----------|:------------|:-----------|
| Mary had a little lamb | Mary had a **great big lamb** | Mary had a little lamb |
| Its fleece was white as snow | Its fleece was white as **clouds** | Its fleece was white as **milk** |
| And everywhere that Mary went | And everywhere that Mary went | And everywhere that Mary **walked** |
| The lamb was sure to go | The lamb was sure to go | The lamb was sure to go |

If you try to merge these, git can deal with the edits to the first and third lines, but 
the two computers made incompatible edits to the second line and git does not know whether to go with "clouds" or "milk".

When you pull the changes from one computer onto the other, git will complain about a conflict, and the file will look like

```
Mary had a great big lamb
<<<<<<< HEAD
Its fleece was white as clouds
=======
Its fleece was white as milk
>>>>>>> change
And everywhere that Mary walked
The lamb was sure to go
```

Then you have to manually edit the file to resolve the conflict. 
There are graphical tools to help you manage merge conflicts (this is one of the 
reasons people like to use graphical git tools like Source Tree or Git Kraken).

If you have conflicts, you will need to edit the files to resolve the conflicts
and delete the lines git uses to mark conflicts 
(the ones beginning with `<<<<<<<`, `=======`, and `>>>>>>>`).
Then you will need to stage the files where you resolved the changes
and make a commit.

# GitHub and GitHub Classroom

GitHub is a web site devoted to sharing open-source Git repositories and allowing
paying customers to operate private git repositories.
You can get a free account at <https://github.com> and as a student, you can
get some free extra features if you request a student account at 
<https://education.github.com/students>.

GitHub classroom is an add-on service that github offers for teachers, which allows 
teachers to post assignments on GitHub and then invite students to clone the assignment
and then turn in the completed assignment via a private repository.

For each lab assignment, I will create a repository on GitHub Classroom
and invite you to accept the assignment. When you accept the assignment,
GitHub will clone the assignment into private repository just for you on GitHub.
Only you, I, and the teaching assistant will be able to see your private repository.

You can then clone the private repository to your personal computer or a computer in the laboratory classroom
and complete it. As you make commits, I encourage you to push the changes back up to GitHub.
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          104,
                          'INTRO',
                          'Introduction to R and RMarkdown',
                          'Jonathan Gilligan',
                          'rmarkdown_intro',
                          '/files/lab_docs/lab_01/rmarkdown_intro.pdf',
                          NULL,
                          '
```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)

rinline = function(code) {
  sprintf(''``` `r %s` ```'', code)
}

```

# RMarkdown

RMarkdown is a combination of two tools: Markdown is a simple way of writing
plain text that can be formatted into fancy documents. Markdown originated
as a tool for easily writing blog posts and comments that include formatting,
such as section  headings, italic and bold-faced text, and so forth without
having to learn a technical formatting language, such as HTML. Markdown is 
fairly generic, so it is easy to translate a single Markdown document into
many output formats, such as HTML for web pages,  PDF, and Microsoft Word documents.

You can learn a lot about the details of Markdown at the RStudio web site 
<http://rmarkdown.rstudio.com>. RStudio has a handy cheat sheet for RMarkdown 
that you can see by opening the Help menu, going to "Cheatsheets" and
opening the RMarkdown Cheat Sheet or the more comprehensive RMarkdown Reference.

What makes RMarkdown different from ordinary Markdown is that it allows you to 
combine text, formatted in Markdown, with instructions to the R statistical 
software to analyze data and produce graphs, tables, and other useful output.

By integrating the data analysis with the text of a document, we can easily make our 
research reproducible. The RMarkdown file contains all the instructions to 
load the data, analyze it, and generate the final report. Then if your
data changes and you need to update your report, you can do so by knitting the
RMarkdown document with the updated data files.

To turn an RMarkdown document into an HTML, PDF, or Microsoft Word document, you 
just click on the "Knit" button in RStudio. If you click on the word "Knit" on the 
button, RStudio will turn the RMarkdown document into the default format (see 
below). To knit the document into a different output format, click on the arrow 
just to the right of the word "Knit," and select the output format you want.

I use RMarkdown to produce all of the documents I produce for the labs in this course.
You can see my code at <https://github.com/gilligan-ees-3310-2018>.
The code for all of the Lab #1 documentation is at 
<https://github.com/gilligan-ees-3310-2018/lab_01_documentation>

**Breaking News:** Markdown lets you use special characters in your text to 
specify the formatting (for example `**this is boldface text** and _this is italic_`
will become **this is boldface text** and _this is italic_), but the latest version 
of RStudio, which was released in January 2021, has a visual markdown editor
that lets you edit Markdown the same way you''d edit text in a word processor and 
lets you see what the text will look like. 

You can switch back and forth between the visual editor and the norrmal editor
by clicking on the button on the top right of the editor pane that looks like the
letter A.

![Visual editor button in RStudio](_images/lab_01/visual-editor.png)

Below I explain the structure of an RMarkdown document.

# Document header

At the top of an RMarkdown document there is a section set off by lines of three
hyphens above it and below it.

Here is an example:

```
---
title: "Your document''s title"
subtitle: "Your document''s subtitle"
author: "Your name goes here"
date: "Aug 28, 2017"
output:
    pdf_document: default
    html_document: default
---
```

By default, when RStudio knits the document, it converts it into the format listed
first under `output_format`

When the output format lists, for instance, "`pdf_format: default`", that means
that when RStudio creates a pdf document, it uses the default options. 
If you want to customize the output, you can specify
options for RStudio to use in creating PDF, HTML, or Word output documents:

```
---
title: "Your document''s title"
subtitle: "Your document''s subtitle"
author: "Your name goes here"
date: "Aug 28, 2017"
output:
    pdf_document:
      toc: "true" 
      number_sections: "false"
    html_document:
      self_contained: "false"
---
```



# Markdown 

Some of the basic elements of Markdown are:

## Paragraphs

Any block of one or more lines of text, with a blank line before and a blank line after
is treated as a single paragraph.  To separate paragraphs, put a blank line between them:

### Markdown:

```
This is one paragraph.
It stretches over several consecutive lines,
but it will be formatted 
as a single paragraph.

This is another paragraph.
The blank line between the two
blocks of text tells Markdown
that they are separate paragraphs
```

### Formatted Output:

> This is one paragraph.
It stretches over several consecutive lines,
but it will be formatted 
as a single paragraph.
>
> This is another paragraph.
The blank line between the two
blocks of text tells Markdown
that they are separate paragraphs

## Section headers

Any line of text that begins with one or more hash symbols ("#") and is preceded by 
a blank line is treated as a section header. Top-level section headers have a single
hash, and subsections, subsubsections, etc. use two, three, etc. hashes.

### Markdown:

```
# This is a top-level section header

## This is a subsection

### This is a subsubsection

# This is another section
```

### Formatted Output: 

```

```

> # This is a top-level section header
>
> ## This is a subsection
>
> ### This is a subsubsection
>
> # This is another section

## Formatting text

To make _italic text_ and **boldface text** you surround the text with underscores 
or asterisks. A single underscore or asterisk means italic, two means boldface, 
and three means both italic and boldface:

### Markdown:

```
This is _italic text_. This is *also italic text*. __This is boldface__ and 
**so is this**. ***This is bold italic***. This is ~~strikethrough~~, perhaps 
to indicate an error.
```

### Formatted Output:

> This is _italic text_. This is *also italic text*. __This is boldface__ and 
> **so is this**. ***This is bold italic***. This is ~~strikethrough~~, perhaps 
> to indicate an error.


## Lists

You can make bulleted or numbered lists easily in Markdown. Simply begin a line 
with an asterisk, hyphen, or plus sign.
To make a sub-list, just indent the lines of the sublist by four spaces.

### Markdown:

```
* This is a list

* This is the second item of the list.

    * This is a sub-list

    * This is another item in the sub-list
    
        A list item can have several paragraphs. Just ident the continuation 
        by four additional spaces and do not begin it with an asterisk.
        If you have multiple lines with no blank line separating them,
        Markdown treats them as a single paragraph.

        Here is a third paragraph of continuation.

* This is the main list again.
  Just as with other things, you can break a single list item into several lines,
  and as long as there is no blank line between them, Markdown knows to treat
  them as a single paragraph.
```

### Formatted Output:

* This is a list

* This is the second item of the list.

    * This is a sub-list

    * This is another item in the sub-list
    
        A list item can have several paragraphs. Just indent the continuation 
        by four additional spaces and do not begin it with an asterisk.
        If you have multiple lines with no blank line separating them,
        Markdown treats them as a single paragraph.
        
        Here is a third paragraph of continuation.

* This is the main list again.
  Just as with other things, you can break a single list item into several lines,
  and as long as there is no blank line between them, Markdown knows to treat
  them as a single paragraph.

## Numbered Lists

To make numbered lists, start them with a number and a period:

### Markdown

```
1. This is a list

1. This is the second item of the list. Notice that I keep using the 
   numeral "1", but Markdown automatically increments the numbers
   for the list items.

    a) This is a sub-list

    a) This is another item in the sub-list
    
        A list item can have several paragraphs.
        
        Here is a third paragraph of continuation.
        
        i) this is a sub-sub list numbered with Roman numerals

        i) this is a sub-sub list numbered with Roman numerals

        i) this is a sub-sub list numbered with Roman numerals

1. This is the main list again.

```

### Formatted Output:

1.  This is a list

1.  This is the second item of the list. Notice that I keep using the 
   numeral "1", but Markdown automatically increments the numbers
   for the list items.

    a)  This is a sub-list

    a)  This is another item in the sub-list
    
        A list item can have several paragraphs.
        
        Here is a third paragraph of continuation.
        
        i)  this is a sub-sub list numbered with Roman numerals

        i)  this is a sub-sub list numbered with Roman numerals

        i)  this is a sub-sub list numbered with Roman numerals

1.  This is the main list again.


## Mathematical expressions

For simple math, you can just type stuff in  RMarkdown: `1 + 2 * 3` comes out as 
1 + 2 * 3.  If you want subscripts or superscripts, you can get those by using 
the `~` and `^` characters, respectively: `I~out~ = sigma T^4^` appears as 
I~out~ = sigma T^4^.

If you want fancier formatting for mathematical expressions, RMarkdown has a way 
to do this.

If you put an expression between dollar signs, RMarkdown interprets it differently 
from regular RMarkdown, and uses a format called LaTeX that is used for typesetting
sophisticated mathematics. I won''t try to present all of LaTeX here, but will give 
some common examples:

An expression between single dollar signs is interpreted as _in-line_ math that
appears in the middle of a line of text. LaTeX uses special terms that begin with
a backslash `\` to indicate special mathematical formatting or operators.
For example `$a + b \times x$` appears
as $a  + b \times x$. 

You can show Greek letters, like $\alpha$, $\pi$, and $\sigma$ by spelling them 
out like this: `$\alpha$`, `$\pi$`, and `$\sigma$`. The epsilon that we use to 
indicate emissivity is a variation on the ordinary Greek epsilon, so we spell it
`$\varepsilon$` to get $\varepsilon$.

LaTeX handles subscripts and superscripts differently from RMarkdown:
You use `_{}` and `^{}` with whatever you want to appear in the subscript 
or superscript inside the braces `{}`:
`$I_{out} = \sigma T^{4}$` appears as $I_{out} = \sigma T^{4}$

You can include square root signs using `\sqrt`: `$x = \sqrt{y \times z}$` appears
as $x = \sqrt{y \times z}$. You can do other roots like this: 
`$T = \sqrt[4]{I_{out} / \sigma}$` appears as $T = \sqrt[4]{I_{out} / \sigma}$.

To get display math, which appears on its own line, you use double dollar signs. 
This is useful when you want to write a mathematical expression that is much taller 
than a line of text. In display mode you can display fractions using 
`\frac{numerator expression}{denominator expression}`, as in this example:
`$$\varepsilon \sigma T^4 = \frac{(1 - \alpha)}{4} \times I_{solar}$$` appears as

$$ \varepsilon \sigma T^4 = \frac{(1 - \alpha)}{4} \times I_{solar}$$
`$$T_{bare rock} = \sqrt[4]{\frac{(1 - \alpha)}{4 \varepsilon \sigma} \times I_{solar}}$$`
appears as

$$T_{bare rock} = \sqrt[4]{\frac{(1 - \alpha)}{4 \varepsilon \sigma} \times I_{solar}}$$

There is a lot more to the LaTeX notation that you can use in 
RMarkdown, but what I have shown here is sufficient for everything you will 
do in this class.
You won''t need to use this kind of mathematical notation very much, but it can 
be convenient, especially when you are working exercises on atmospheric layer 
models.

If you find it too difficult to use LaTeX mathematical notation, I will accept 
either hand-written supplements in which you write out the equations by hand, or
a textual description in your document where you use words instead of mathematical
symbols to explain what you are doing.

## Figures

You can include image files in your RMarkdown document:

### Markdown

```
![This is a tornado](images/tornado.jpg)
```

### Formatted Output:

![This is a tornado](_images/lab_01/tornado.jpg)

## Hyperlinks

You can include links to documents on the web in two ways. The simplest
is if you want the URL for the link to appear in your document you can just 
surround the URL with angle brackets:
`<https://www.vanderbilt.edu>` appears as <https://www.vanderbilt.edu>. 

If you want to add a hyperlink to some text in your document, then you would
do it like this:

```
[Vanderbilt University](https://www.vanderbilt.edu)
``` 

to get this: [Vanderbilt University](https://www.vanderbilt.edu).

Note the difference between the hyperlink specification and the image specification
is whether there is an exclamation point before the square brackets.

# Using R for calculations

RMarkdown combines the "Markdown" system for formatting text with the
R statistical system for performing calculations and making graphs.

We are using R for the laboratory section of this course because it allows you to 
easily analyze large amounts of data and produce high-quality graphs.

To enter R expressions in an RMarkdown document, we use "code blocks" and
"inline code". Code blocks are useful if we are doing a calculation, and 
inline code is useful if you just want to insert a number (maybe one you have
calculated in a code block) into the middle of a line of text.

Code blocks begin and end with three consecutive "back-tick" characters:

<pre><code>```{r code_block_name, options}
   # code goes here
```</code></pre>

Inline code appears between single back-ticks: `r rinline("code goes here")`

We express basic mathematical operations in R similarly to the way we express them 
in Excel and most programming languages. Addition and subtraction use the
normal plus and minus signs. Multiplication uses an asterisk, division uses
a slash ("/"), and powers (exponentiation) uses "^".

R has a lot of mathematical functions you can use, such as `sqrt()`, `log()` 
(for the natural logarithm), `log10()` for the base-10 logarithm, and so forth.

We can assign numbers to variables using the equals sign:
```{r stefan_boltzmann}
sigma = 5.67E-8
I_solar = 1350 # watts per square meter
albedo = 0.3
I_absorbed = I_solar * (1 - albedo)
T = (I_absorbed / (4 * sigma))^0.25
```

If the last line of a code block is something with a value (e.g., the name of a 
variable or a mathematical expression, as opposed to an assignment with an equals 
sign), then R will show that value:

```{r surface_temperature}
T
```


We can also print the value of an R expression in the middle of a line of text 
using inline code: ` T = ` `r rinline("T")` will give T = `r T`.

Inline code is very useful because it lets us ask R to automatically insert a 
number into the text. This means that every time we knit the document, that number 
is generated by R. If you write a report and then realize that there was a problem 
with the data or the analysis, you can just fix the problem and re-knit the report 
using the corrected data and analysis code. You don''t need to manually go through 
a separate document and edit the numbers to update them with the latest results 
from your analysis. RMarkdown will do that for you, if you used inline code to 
insert the numbers into your text.

Thus, a bit of extra work at the beginning to set up the document and analysis 
using RMarkdown saves lots of time later on by making it trivial to update the 
document.

Code blocks also allow us to include graphs in our document:


<pre><code>```{r graph_example, fig.cap = "This is a plot of pressure versus temperature."}
ggplot(pressure, aes(x = temperature, y = pressure)) +
  geom_line() +
  geom_point() +
  labs(x = "Temperature", y = "Pressure")
```</code></pre>


```{r graph_example, echo=FALSE, fig.cap = "This is a plot of pressure versus temperature."}
ggplot(pressure, aes(x = temperature, y = pressure)) +
  geom_line() +
  geom_point() +
  labs(x = "Temperature", y = "Pressure")
```

## Loading R Scripts

In this course, I am trying to teach you to use the basics of R. Sometimes we will 
need to do things for our analysis that require more complicated R programming,
and then I will write R scripts that contain this code so you don''t need to write
it yourself from scratch, but can just call functions that I provide.

To load a script (a file containing R code), you use the R command 
`source("script_file.R"")`

For the exercises here, we will use two scripts, which are located in the 
"_scripts" directory.

To load them into R so you can use them in your analysis, you would put the 
following code into your RMarkdown document:

```{r load_scripts}
source("_scripts/format_md.R")
source("_scripts/layer_diagram.R")
```

### Useful Scripts for the Labs:

These first script defines a function, `format_md`, which formats 
numbers nicely for markdown documents, allowing you to control how many 
significant digits it shows, and optionally using scientific notation or 
inserting commas to separate thousands, millions, etc.

`format_md(sigma, digits = 1)` will produce `r format_md(sigma, digits = 1)`

`format_md(pi * 1E6, digits = 3, format="scientific")` will produce 
`r format_md(pi * 1E6, digits = 3, format="scientific")`

`format_md(pi * 1E6, digits = 3, comma = TRUE)` will produce 
`r format_md(pi * 1E6, digits = 3, comma = TRUE)`

### Script for Layer Diagrams

The other script allows you to produce a layer diagram, similar to the ones in 
Chapter 3 of _Global Warming: Understanding the Forecast_.

```{r example_layer_diagram}
make_layer_diagram(2)
```
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          105,
                          'INTRO',
                          'No more excuses for non-reproducible methods (optional)',
                          'Lenny Teytelman
',
                          'no_more_excuses',
                          NULL,
                          NULL,
                          'An article about big problems in cancer research due to researchers'' failure to follow reproducible research methods. Consider this article optional reading.

Here is the abstract:

> Here''s a one-two punch to spark camaraderie among scientists. First, ask: "How long did it take to get your PhD?" Then follow up with: "How long would it have taken if all your experiments had worked the first or second time?"
>
> Part of the probable time difference is due to inexperience, but not all of it. News last month brought a powerful reminder that access to detailed methods can be essential for getting experiments to work. In 2013, the US\$1.6-million Reproducibility Project: Cancer Biology set out to repeat key experiments from 50 high-profile cancer papers, and so assess the extent to which published results can be replicated. Instead, the project has decided to stop at 18 papers. One big reason for this was the difficulty of working out what exactly was done in the original experiments. Protocols---precise step-by-step recipes for repeating experiments---are missing from published research more often than not, and even the original researchers can have trouble pinpointing particulars years later.

You can read the full paper at <https://www-nature-com.proxy.library.vanderbilt.edu/articles/d41586-018-06008-w>

L. Teytelman, "No more excuses for non-reproducible methods," Nature **560**, 411 (2018) [doi:10.1038/d41586-018-06008-w](https://doi.org/10.1038/d41586-018-06008-w)
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          201,
                          'DATA',
                          'Instructions for Lab #2: Data Wrangling with R',
                          'Jonathan Gilligan',
                          'overview',
                          '/files/lab_docs/lab_02/lab_02_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)
options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

library(tidyverse)
library(lubridate)

theme_set(theme_bw(base_size = 15))

# source(''_scripts/utils.R'', chdir = T)

if (!dir.exists(data_dir)) dir.create(data_dir)

nashville_weather <- readRDS(''_data/nashville_weather.Rds'')
chicago_weather <- readRDS(''_data/chicago_weather.Rds'')
```
# Introduction

This is a brief introduction to data types, data structures, and 
some of the functions and packages that we will use to manipulate
data in the labs.

There is a lot more, and two particular resources that I would recommend to you
are available free on the web.


## R for Data Science 

The first resource is the book, [_R for Data Science_](https://r4ds.had.co.nz), 
by Hadley Wickham who wrote most of the `tidyverse` collection. 
You can buy a print 
version of the book from all the usual online sources, but Wickham has also 
posted the full text on the web at <http://r4ds.had.co.nz/> to make it 
available for free.
(Also, he wrote the whole book in RMarkdown, and if you''re curious you can get
the RMarkdown for the book from <https://github.com/hadley/r4ds>).

The key parts of the book, from the perspective of the labs for this course,
are 
[Chapter 4: "Workflow Basics,"](https://r4ds.had.co.nz/workflow-basics.html)
which presents a brief overview of R and
how to program with it; 
[Chapter 5: "Data Transformation,"](https://r4ds.had.co.nz/transform.html)
which explains the
functions I discuss in the first part of this handout about tibbles and the 
manipulating them with functions like `select`, `filter`, `mutate`, and
`summarize`; and 
[Chapter 3: "Data Visualization,"](https://r4ds.had.co.nz/data-visualisation.html) 
which describes using 
the `ggplot2` package to make graphs and charts of your data.
[Chapter 12, "Tidy Data"](https://r4ds.had.co.nz/tidy-data.html)
describes using the `pivot` functions to organize
your data in ways that make it easier to analyze.

If you are interested in learning more about R, Section II of the book
discusses the different data types that R uses in detail (tibbles,
character data (or strings), factors, dates, and times). Section III discusses
programming, and section IV discusses statistical modeling (i.e., fitting 
functions to data). Section V discusses RMarkdown and all the different ways
you can use it to communicate about your analysis with other people. 

The book is an excellent introduction to data analysis with
R. I have recommended it to many people who did not previously have experience
working with programming or R and they found it a very accessible, useful,
and user-friendly introduction.

## Online documentation for the tidyverse

_R for Data Science_ is a great introduction to the concepts behind the
`tidyverse` collection of packages and functions for R, but what should you do
when you already understand that big picture and just want to know how to do 
a specific task? For that, the online documentation for the `tidyverse` is
very useful and you can find it at <http://www.tidyverse.org/packages/>.

This page has links to the documentation for all the major tidyverse packages:
[`ggplot2`](https://ggplot2.tidyverse.org/) for making graphics, 
[`dplyr`](https://dplyr.tidyverse.org/)  and 
[`tidyr`](https://tidyr.tidyverse.org/) for working with `data.frames` and 
[`tibbles`](https://tibble.tidyverse.org/), 
[`reader`](https://readr.tidyverse.org/) for reading in data from text files and
[`readxl`](https://readxl.tidyverse.org/) for reading data from Excel 
spreadsheets, and many more packages that we will not be using in these labs.

The documents give lots of examples showing what the functions do and explanations
of how to do many common tasks. Especially for 
[`ggplot2`](https://ggplot2.tidyverse.org/), it can be very useful
to look at the graphs in the examples to find something that looks like what 
you''re trying to do and then seeing the code that made that happen.


# Data in R

## Kinds of variables

R is capable of analyzing many different kinds of data. Some of the most
important kinds of data that we may work with are:

* **Integer data**, which represents discrete quantities, such as counting
  events or objects.

* **Real number data**, which represents quantities that can have fractional values.
  Most of the data we will work with in this course, such as temperatures, 
  altitudes, amounts of rainfall, and so forth, will be real-number data.
  This kind of data is also referred to frequently as "floating point" data
  or (for obscure reasons having to do with computer hardware) as "double"
  or "double-precision" data.

* **Character data**, which represents text. Examples include names of months,
  or categories (such as the name of a city or country). This kind of data is
  also referred to as "string data".

* **factor data**, which represents variables that can only take on
  certain discrete values. R treats factor data as a kind of augmented character
  data. 
  
    The difference between character data and factor data is that factor
    data has an explicit set of allowed values and has an integer number associated
    with each of those values. 
    
    For instance, if I have a factor variable with the allowed values "up" and 
    "down", then I could not assign it a value "left" or "right", whereas a
    character variable can be assigned any arbitrary text, such as 
    "second star to the right and straight on til morning."
    
    There are two kinds of factors: ordered and unordered. The difference is that
    the legal values for ordered factors have a specific order, so you can say 
    that one comes before or after another (or is greater than or less than another),
    whereas unordered factors don''t have any natural ordering.
    
    Examples of ordered variables might be the months of the year, or the days 
    of the week, or a grouping like "small", "medium", "large", or 
    "bad", "fair", "good".
    
    Examples of unordered variables might be lists of states, gender, religion, 
    cities, sports teams, or other descriptive characteristics that don''t 
    have a natural order to them.

* **date and time data**, which represents calendar dates, times of day, or 
  a combination, such as 9:37 PM on January 17, 1984.

For the most part, R handles different data types sensibly so you don''t need to
worry about them, but sometimes when R is reading data in from files, or when
you want to convert one kind of variable to another, you will need to think about
these.

The most common cases where you will need to think about this is when you are 
reading data in from files. Sometimes it is ambiguous whether to treat something
from a file as character data, numerical data, or a date. In such cases, you may
need to give R guidance about how to interpret data. The functions for reading
data in from files, such as `read_csv` and `read_table` allow you to specify 
whether a given column of data in a table is integer, double-precision 
(floating point), character, date, etc.

R also provides functions for converting data. The `as.character` function
takes data that might be character, factor, or numeric, and represent it as
text (characters).

`as.numeric` or `as.integer` will allow you to convert a character variable to 
a number. For instance, `as.numeric("3.14")` converts a text variable "3.14"
into a numeric variable 3.14.

`as.integer` is very useful when we want to convert an ordered factor to an 
integer that corresponds to the order of that value. For instance, if I have
an ordered factor `f` with legal values corresponding to the months of the year 
("Jan", "Feb", ..., "Dec"), if `f` has the value `Mar`, then
`as.integer(f)` will have the integer value 3.

## Vectors, Lists, Data Frames, and Tibbles.

In statistics, you generally don''t just work with one number at a time, but with
collections of numbers. R provides many ways to work with collections of numbers.

### Vectors

The simplest is a **vector**. A vector is a collection of values that are all
of the same kind: a collection of integers, a collection of floating point values,
a collection of character values, a collection of factor values, etc.

You specify vectors like this: `x = c(1, 2, 5, 9, 3, 4, 2, 7, 5)`.
You can access elements of vectors by indexing their position within the
vector, so `x[3]` will be 5 and `x[4]` will be 9.

You can also give the elements of a vector names:
`ages = c(Sam = 27, Ben = 20, Sarah = 25, Deborah = 31)` allows you to use 
`ages["Ben"]`, which will be 20.

All of the elements of a vector have to be the same kind, so
`x = c(1, 2, "three")` will not allow the vector to mix numbers and characters
and R will transform all of the values to character. The result is 
`"1", "2", "three"`, and `x[1] + x[2]` will give an error because
R doesn''t know how to add two character variables. However, 
`as.numeric(x[1]) + as.numeric(x[2])` will yield 3.

### Lists

Lists are a lot like vectors, but they can contain different kinds of variables.
They can even contain lists and vectors.
`x = list(1, 2, "three", list(4, 5, 6))` has four elements. The first two are
the numbers 1 and 2; the third is the character string "three", and the fourth
is the list `(4,5,6)`.

Just as we can have named vectors, we can have named lists:
`ages = list(Sam = 27, Ben = 20, Sarah = 25, Deborah = 31)`.
There is a nice shortcut to getting the elements of a named list, using a 
dollar sign: `ages$Sam` is 27.

### Data frames and tibbles

We will not use lists very much in this class. We will use vectors a little bit,
but what we will use _a lot_ are tables of data. You have probably worked a
lot with spreadsheets and other data analysis tools that organize data in a
table with rows and columns. This is a very natural and common way to work.

R provides a structure called a `data.frame` for working with tabular data, but
the package `tidyverse` introduces an improved version of the `data.frame`
called a `tibble` (think of it as a kind of data table).

`data.frames` and `tibbles` have rows and columns. A row represents a set of 
quantities, such as measurements or observations, that go together in some way.
Different rows in a tibble represent different sets of these quantities.

For instance, if I am measuring the height and weight of a number of people, then 
I would have a row for each person and each row would have a column for the 
person''s name or identity code, a column for their height, and a column for 
their weight. 

If I am measuring the average temperature and average precipitation
for a number of cities, then I would have a column for the city, a column for the
temperature, and a column for the precipitation.

Each column of a `data.frame` or `tibble` should correspond to a specific kind of 
data (integer, floating point, character, factor, date, etc.). A column is 
a kind of vector, so it has to obey the restrictions that apply to vectors.

To get some experience with tibbles, let''s load a couple of data sets that
I have prepared. If you have cloned the directory for this document
(from <https://github.com/gilligan-ees-3310/lab_02_documentation>),
you can load the datasets, which contain daily weather summaries for 
Nashville and Chicago,
by running the code below:

```{r load_datasets, include=TRUE}
nashville_weather = readRDS(''_data/nashville_weather.Rds'')
chicago_weather = readRDS(''_data/chicago_weather.Rds'')
```

Here is an example of the first few rows of a tibble with weather data for 
Nashville from 
`r lubridate::year(min(nashville_weather$date))`--`r lubridate::year(max(nashville_weather$date))`:

```{r head_nashville_weather, include=TRUE}
head(nashville_weather)
```

There are 6 columns: the weather station ID for the Nashville Airport,
the date of the measurement, the daily precipitation (in millimeters),
the daily minimum and maximum temperatures (Celsius), and the name of the
location.

The tibble also shows the kind of variable that each column represents:
`id` and `location` are character data, `date` is Date data, and 
`prcp`, `tmin`, and `tmax` are double-precision floating point data 
(i.e., real numbers).

In some ways, a tibble or `data.frame` is like a names list of vectors, where each
vector is a column and its name is the name of the column. We can access individual 
columns using the dollar sign, just as with regular named lists:

```{r tibble_column, include=TRUE}
precipitation = nashville_weather$prcp
```

And we can see what the result is:
```{r inspect_tibble_column, include=TRUE}
head(precipitation)
```

RStudio has a nice feature that lets you examine a tibble or `data.frame`
as though it were a spreadsheet. To examine one of R''s built-in data sets,
which has data on hurricanes in the Atlantic from 1975--2015: 
`View(dplyr::storms)`

Some other useful functions: 

* You can get a list of the names of
  a named vector, a named list, or the columns of a tibble or `data.frame`
  with the `names` function: `names(x)`, where x is a vector, list,
  tibble, or `data.frame`.

* You can get the length of a vector or list with the `length` function,
  and you can get the number of rows and columns in a tibble using the
  `dim` function:
  
```{r dim_len, include=TRUE}
x = c(1, 2, 3, 4, 5)
print("Length of x is")
print(length(x))

print("Dimensions of dplyr::storms is ")
print(dim(dplyr::storms))
```
That''s `r nrow(dplyr::storms)` rows and `r ncol(dplyr::storms)` columns.
You can also get just the number of rows or the number of columns
with `nrow()` and `ncol()`.

# The Tidyverse 

The "tidyverse" is a collection of packages written by Hadley Wickham
to make it easy to work with data frames. Wickham developed an improved 
kind of data frame that has features that are lacking in the basic R
`data.frame`, and he developed a collection of tools for manipulating, 
analyzing, and graphing data from tibbles and regular `data.frames`.

The tidyverse is explained in detail in the book, 
[_R for Data Science_](https://r4ds.had.co.nz/), which you can read online at
<https://r4ds.had.co.nz/transform.html>.

To use the tidyverse, we need to load the package using R''s `library` function.
If tidyverse is not installed on your computer, you will get an error message
and you will have to run `install.packages("tidyverse")` before you can 
proceed.

When you load `tidyverse`, it automatically loads a bunch of useful packages
for manipulating and analyzing data: `tibble`, `dplyr`, `tidyr`, `purrr`, 
`readr`, and `ggplot2`.

If you have the `pacman` package installed, it can help you avoid these error 
messages: after you load `pacman` with `library(pacman)`, then you can load
other packages using `p_load(tidyverse)` (you can substituate any other
package name for "tidyverse"): pacman will first see whether you have that
package on your computer; if you do, pacman will load it, and if you don''t
pacman will install the package from the Comprehensive R Archive Network (CRAN)
and then load it.

In the code below, I will also load the `lubridate` package, which is part of
`tidyverse` but is not loaded automatically when you load `tidyverse`. 
`lubridate` provides useful functions for working with dates, which will
come in handy as we work with the weather data.

```{r load_tidyverse, include=TRUE}
library(tidyverse)
library(lubridate)
# alternately, I could do the following:
# library(pacman)
# p_load(tidyverse, lubridate)
```

## Manipulating `tibbles`

One part of the `tidyverse` is the package `dplyr`, which has many useful 
tools for modifying and manipulating tibbles:

* `select` lets you choose a subset of columns from a tibble
* `rename` lets you rename columns
* `filter` lets you choose a subset of rows from a tibble
* `arrange` lets you sort the rows with respect to the values of different columns
* `mutate` lets you modify the values of columns or add new columns
* `summarize` lets you generate summaries of columns (e.g., the mean, maximum, 
  or minimum value of that column)
* `group_by` and `ungroup` let you perform calculations with grouping (e.g., in 
  combination with summarize, you can group by year to produce separate summaries 
  for each year)
* `bind_rows` to combine multiple tibbles that have the same kinds of columns
   by stacking one above the other.

There is a lot more, but these functions will be enough to keep us busy for now
and they will allow us to do some powerful analysis.

If you want to learn more about these functions, they are explained in detail in
[Chapter 5](https://r4ds.had.co.nz/transform.html) of _R for Data Science_.

### Manipulating Columns

Let''s start with `select`: You can select columns to keep or columns to delete.

Here are the first few rows of `nashville_weather`
```{r nw_head, include=TRUE}
head(nashville_weather)
```

Let''s get rid of the `id` column, since we don''t really care about the ID number,
that meteorological agencies use to identify the weather station. 
and let''s get rid of the `location` column because we know that the data set
is from Nashville, so having that information repeated on each row is a waste
of space. 
To do this, we just  call select, specifying the tibble or `data.frame` to 
operate on, and then give a list of columns to eliminate, with a minus sign
in front of each:

```{r nw_no_id, include=TRUE}
x = select(nashville_weather, -id, -location)
head(x)
```

Alternately, instead of telling select which columns to get rid of, we can tell
it which columns to keep:

```{r nw_keep, include=TRUE}
x = select(nashville_weather, date, prcp, tmin, tmax)
head(x)
```

We can specify a range of consecutive columns by giving the first and last with a 
colon between them:

```{r nw_keep_2, include=TRUE}
x = select(nashville_weather, date:tmax)
head(x)
```

This is a general R thing: we can specify a range of numbers in a similar way:

```{r sequence, include=TRUE}
1:10
```

`rename` lets us rename columns:

```{r rename, include=TRUE}
x = rename(nashville_weather, weather_station = id, city = location)
head(x)
```

### Selecting Rows

`filter` lets us select only rows that match a condition:
```{r filter_nw, include=TRUE}
x = filter(nashville_weather, year(date) > 2015 & tmax < 0)
head(x)
```
In the code above, I used the `year` function from the `lubridate` package to extract just the year from a date.

One thing that is important to know about making comparisons in `filter` expressions: to specify that two things are
equal, you write `==` with two equal signs. A single equal sign is for assigning a value to a variable and two
equal signs are for comparisons. You can also use "<=" for less than or equal to and ">=" for greter than or equal to.

```{r filter_nw_2, include=TRUE}
x = filter(nashville_weather, date == ymd("2016-06-10"))
x
```

In the code above, I used the `ymd` function from `lubridate` to translate a character
value "2016-06-10" to the date value for June 10, 2016.

You can combine conditions in `filter` by using `&` to indicate
"and" and `|` to indicate "or".


We can sort the rows of a tibble or `data.frame` with the `arrange` function:

```{r arrange, include=TRUE}
x = arrange(nashville_weather, desc(tmax), tmin)
head(x,10)
```

This sorts the rows in descending order of `tmax` (i.e., so the largest values are at the top),
and where multiple rows have the same value of `tmax`, then it sorts them in ascending order
of `tmin`. Observe the three rows with `tmax` = 41.7, the two rows where `tmax` = 41.1,
and the four rows where `tmax` = 40.6.

By default, `head` takes the first 6 rows of a tibble, but we can override that,
to return a different number of rows. 
Here, we told `head` to return the first 10 rows of `x`.

If we want to change the values in a column, or create new columns,
we can use the `mutate` function.
The weather data we have give temperatures in Celsius and the precipitation 
in millimeters. 
Let''s convert these to Fahrenheit and inches, respectively, and then let''s 
create a `trange` column that will have the difference between the maximum
and minimum temperature.

There are 25.4 millimeters in an inch and we convert Celsius temperatures to 
Fahrenheit using the equation

$$ T_{\text{Fahrenheit}} = (9/5) T_{\text{Celsius}} + 32 $$

```{r mutate, include=TRUE}
x = mutate(nashville_weather, prcp = prcp / 25.4, tmin = tmin * 9./5. + 32,
           tmax = tmax * 9./5. + 32, trange = tmax - tmin)
head(x)
```

### Summarizing rows

Summaries are useful for finding averages and extreme values. 
Let''s find the maximum and minimum temperatures and the most extreme rainfall 
in the whole data set:

```{r summarize_simple, include=TRUE}
x = summarize(nashville_weather, prcp_max = max(prcp, na.rm = TRUE), 
              tmin_min = min(tmin, na.rm = TRUE), 
              tmax_max = max(tmax, na.rm = TRUE))
x
```
`nashville_weather` has `r nrow(nashville_weather)` rows, 
but summarize reduces it to a single summary row.

**NOTE:** Here, the parameter `na.rm = TRUE` in `max` and `min` is a way to 
tell R to ignore missing values when it calculates the maximum and minimum 
values. Sometimes a data set will have missing values (for instance, suppose 
the weather station was not working that day), and it indicates these with a 
special value that appears as `NA`, meaning "not available". Normally, if you 
ask for the maximum, minimum, or mean value of a data series with missing 
values, R will return `NA` because if some values are missing, it doesn''t know 
what the actual maximum or minimum is---the missing values could have been the 
largest or smallest. If you want R to ignore missing values and return the 
maximum, minimum, or mean value of the data that you do have, then you add the 
`na.rm = TRUE` parameter when you call `max()`, `min()`, `mean()`, or 
other summary functions.

You can use summary to generate multiple summary quantities from a column:

```{r summarize_simple_2, include=TRUE}
x = summarize(nashville_weather, prcp_max = max(prcp), prcp_min = min(prcp))
x
```

We can also generate grouped summaries:

```{r summarize_grouped_1, include=TRUE}
x = ungroup(summarize(group_by(nashville_weather, year(date)), 
                      prcp_max = max(prcp), prcp_tot = sum(prcp)))
head(x)
```
This provides the maximum one-day precipitation and the total annual precipitation for each year

Note how difficult it is to read that grouped summary expression: the `group_by` function is inside
`summarize`, which is inside `ungroup`. 

The `tidyverse` offers us a much nicer way to put these kind of complicated expressions together 
using what it calls the "pipe" operator, `%>%`.  The pipe operator chains operations together,
taking the result of the one on the left and inserting it into the one on the right.

We can use the pipe operator to rewrite the expression above as

```{r summarize_grouped_pipes, include=TRUE}
x = nashville_weather %>% group_by(year(date)) %>% summarize(prcp_max = max(prcp), prcp_tot = sum(prcp)) %>%
  ungroup()
head(x)
```
Now the expression is easier to read: First we group `nashville_weather` by year, then we summarize it by calculating the
maximum daily precipitation and the yearly total for each year, and finally, after we summarize we ungroup.

You can combine any set of the `tidyverse` functions using the pipe operator, so you could `select` columns, 
`filter` rows, `mutate` the values of columns, and `summarize`, using the `%>%` pipe operator to connect
all of the different operations in sequence.

### Combining Rows

Another useful command is `bind_rows`, which lets us combine tibbles:

```{r bind_rows, include=TRUE}
weather = bind_rows(nashville_weather, chicago_weather)
```
This creates a single tibble that has all of the rows from `nashville_weather` on 
top and all the rows from `chicago_weather` on the bottom. Because the two tibbles
have the same columns, the columns are matched up.

We can operate on this combined tibble:

```{r process_combined_data_frame}
weather_summary = weather %>% 
  mutate(year = year(date), t_range = tmax - tmin) %>%
  group_by(year, location) %>%   
  summarize(prcp_max = max(prcp), prcp_tot = sum(prcp), t_range.max = max(t_range)) %>%
  ungroup() %>%
  arrange(year, location)
tail(weather_summary)
```

## Tidy Data and Pivoting tibbles

The `tidyr` package in the tidyverse is used to make data `tidy`: re-organizing
the columns and rows of a `tibble` to make it easier to analyze.

Sometimes you want to re-organize a data frame or tibble to collect many 
columns into a single column, or we may want to separate one column of data
into many columns. These operations, which change the shape of the data frame,
are called "pivots". Here, we will explore two powerful functions in the 
tidyverse, `pivot_longer` and `pivot_wider`, and they are explained in detail in 
[the section on "Pivoting"](https://r4ds.had.co.nz/tidy-data.html#pivoting) 
in [chapter 12](https://r4ds.had.co.nz/tidy-data.html) 
of _R for Data Science_.

Consider this data frame, which was 
read in from a spreadsheet of global temperatures produced at NASA:

```{r giss_temp_example}
giss_zonal <- readRDS(''_data/giss_zonal.Rds'')
head(giss_zonal)
```

The tibble presents the average temperatures for different bands of latitude:
64%deg;N--90&deg;N, 44&deg;N==64&deg;N, 24&deg;N--44&deg;N, Equator--24&deg;N,
and the same for the Southern Hemisphere.

If we wanted to plot all of these, we could do something like this:

```{r bad_zonal_plot, include=TRUE}
ggplot(giss_zonal, aes(x = year)) + 
  geom_line(aes(y = x64n_90n, color = "64N-90N")) +
  geom_line(aes(y = x44n_64n, color = "44N-64N")) +
  geom_line(aes(y = x24n_44n, color = "24N-44N")) +
  geom_line(aes(y = equ_24n, color = "EQU-24N")) +
  geom_line(aes(y = x24s_equ, color = "24S-EQU")) +
  geom_line(aes(y = x44s_24s, color = "44S-24S")) +
  geom_line(aes(y = x64s_44s, color = "64S-44S")) +
  geom_line(aes(y = x90s_64s, color = "90S-64S")) +
  labs(x = "Year", y = "Temperature anomaly")
```

This is a big mess. It would be hard to clean up the appearance, and would 
require a lot of retyping if we decided to group the data into different bands 
of latitude.

We can do this much more easily with the `pivot_longer` function:

```{r tidy_zonal_tibble, include=TRUE}
bands = names(giss_zonal) # column names of the tibble
bands = bands[-1] # drop the first column ("year")
labels = c("64N-90N", "44N-64N", "24N-44N", "EQU-24N", 
           "24S-EQU", "44S-24S", "64S-44S", "90S-64S")
tidy_zonal = giss_zonal %>%
  pivot_longer(cols = -year, names_to = "latitude", values_to = "anomaly")
```

Let''s see what the result of this looks like:
```{r inspect_tidy_zonal, include = TRUE}
head(tidy_zonal)
```

Now we can clean up the `latitude` column a bit to make it more friendly for
human readers:

```{r clean_zonal_tibble, include=TRUE}
tidy_zonal = tidy_zonal %>%
  mutate(latitude = ordered(latitude, levels = bands, 
                            labels = labels)) %>%
  arrange(year, latitude)

head(tidy_zonal)
```

In this, the `mutate` command converts the latitude band into an ordered factor
where the order is the order of the original columns. 
This gets R to sort them in the order of latitude bands, instead of 
alphabetically, when it makes the legend for the plot.
The `labels` parameter then changes the names from the original column name, 
which was somewhat cryptic, to something a person can make sense of.

Now let''s plot it:
```{r plot_zonal_tibble, include = TRUE}
ggplot(tidy_zonal, aes(x = year, y = anomaly, color = latitude)) +
  geom_line() +
  labs(x = "Year", y = "Temperature anomaly")
```

The code for making the plot was a lot simpler, and by using an ordered factor,
we could control the order of the latitude bands in the legend, which now
appear in a sensible order. It is much easier to look at this graph and quickly
recognize that the far northern latitudes (64N--90N, and to a lesser extent
44N--64N) are warming up much faster than the rest of the planet.

Back in 1967, one of the first global climate models predicted that 
global warming due to greenhouse gases would cause the far northern latitudes 
to warm up much faster than the rest of the planet. This data confirms that
prediction.

We also see that the Southern Hemisphere has warmed much less than the Northern.
Think about why that might be.

The `pivot_wider` function is the inverse of `pivot_longer`. 
It pivots a tibble by spreading one column of data into many columns, 
using a second column to indicate the names of those columns.
For each row, the data in the "value" column is moved to a new column named by
the "key" column.

Let''s go back to the `weather_summary` tibble we made above:

```{r head_weather_summary, include=TRUE}
head(weather_summary)
```

Let''s set it up to make it easy to compare the annual precipitation of 
Nashville and Chicago:

```{r wide_weather_summary, include=TRUE}
x = weather_summary %>% select(year, location, prcp_tot) %>%
  pivot_wider(names_from = "location", values_from = "prcp_tot")
tail(x)
```

# Graphing Data

Here, we will look at the `ggplot2` package for plotting data. This 
package is automatically loaded when you load the `tidyverse` collection
with `library(tidyverse)`. It follows a theory of making useful graphs 
of data called, "The Grammar of Graphics" (that''s where the "gg" comes from).

The idea is that a graph has several distinct parts, which come together:

* One or more _layers_ of graphics. A layer consists of the following:
  * A _data table_ with one or more columns, each corresponding to a different variable,
  * A _mapping_ of different variables (columns) in the data table to different,
    _aesthetics_ of the plot. Aesthetics are things like 
      * the _x_ coordinate,
      * the _y_ coordinate, 
      * the _color_ of the point or line, 
      * the _fill_ color that is used to fill in areas, like the interior of a rectangle or circle.
      * the _shape_ of points (e.g., circle, square, triangle, cross, diamond, ...)
      * the _size_ of points and lines
      * the _linetype_ (e.g., solid, dashed, dotted, ...)
      * and so forth ...
  * A _geometry_ (point, line, box, etc.) that is used to draw the data
* A coordinate system (axes and legends)

There are some more aspects to the gramar of graphics, but we don''t need them
for what we''re going to do.

These graphics functions are explained in detail in 
[Chapter 3](https://r4ds.had.co.nz/data-visualisation.html) of
_R for Data Science_.

A simple graph has just one layer: 

```{r simple_plot, include=TRUE, warning=FALSE}
ggplot(data = tidy_zonal, # the data
       # the mapping of variables to aesthetics
       mapping = aes(x = year, y = anomaly, color = latitude, shape = latitude)
       ) +
  geom_point() + # the geometry
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```

We can also make a plot with the same data, but two layers:

```{r second_plot, include=TRUE, warning=FALSE}
ggplot(data = tidy_zonal, # the data
       # the mapping of variables to aesthetics
       mapping = aes(x = year, y = anomaly, color = latitude, shape = latitude)
       ) +
  geom_point() + # the geometry of the first layer
  geom_line() +  # the geometry of the second layer
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```


We can also use different mappings for different layers

```{r third_plot, include=TRUE, warning=FALSE}
annual_extremes = weather %>% mutate(year = year(date)) %>%
  group_by(location, year) %>% 
  summarize(tmin = min(tmin, na.rm = T),      # the na.rm = T means to ignore 
            tmax = max(tmax, na.rm = T)) %>%  # missing values if we don''t put 
  ungroup()                                   # that in, then  if any year has
                                              # a missing value for even one 
                                              # day, the tmax or tmin for that 
                                              # year will be recorded as  
                                              # NA (missing)

ggplot(annual_extremes,                       # The data
       aes(x = year, color = location) ) +    # Shared aesthetics go here
                                              #
  geom_point(aes(y = tmin, shape = "min")) +  # Aesthetics that are different 
  geom_point(aes(y = tmax, shape = "max")) +  # for different geometrries go 
                                              # with the geometry.
                                              # 
  xlim(1990,2000) +                           # Set the range of the x-axis, 
                                              # part of the coordinate 
                                              # specification
                                              # 
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```

Note that `ggplot` issued several harmless warnings to tell us that 
setting the limits of the  _x_-axis the way we did cause some points not to be
plotted.
We can tell RMarkdown not to include those warnings in the document by adding 
"warning=FALSE" to the options for the chunk

If we want to specify aesthetics as having fixed values, we can specify them
outside of the mapping. Here I specify the size and color of lines:

```{r fourth_plot, include=TRUE, warning=FALSE}
ggplot(data = annual_extremes) +
  geom_line(aes(x = year, y = tmin, group = location), 
            color = "dark blue", size = 1) +
  geom_line(aes(x = year, y = tmax, group = location), 
            color = "dark red", size = 0.3) +
  geom_point(aes(x = year, y = tmin, color = location, shape = "min"), 
             size = 2) +
  geom_point(aes(x = year, y = tmax, color = location, shape = "max"), 
             size = 2) +
  xlim(1990,2000) + # set the range of the x-axis, 
                    # part of the coordinate specification
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```

We can also take finer control of the axis formatting:

```{r fifth_plot, include=TRUE, warning=FALSE}
ggplot(data = annual_extremes) +
  geom_line(aes(x = year, y = tmin, group = location), 
            color = "dark blue", size = 1) +
  geom_line(aes(x = year, y = tmax, group = location), 
            color = "dark red", size = 0.3) +
  geom_point(aes(x = year, y = tmin, color = location, shape = "min"), 
             size = 2) +
  geom_point(aes(x = year, y = tmax, color = location, shape = "max"), 
             size = 2) +
  scale_x_continuous(limits=c(1990,2000), 
                     breaks = c(1990, 1992, 1994, 1996, 1998, 2000)) + 
  # ^^^ the "breaks" parameter for an axis tells R where to put the labels
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```

And, of course, we could use `pivot_longer` to simplify this graph:

```{r sixth_plot, include=TRUE, warning=FALSE}
annual_extremes_tidy = annual_extremes %>%
  pivot_longer(cols = -c(year, location), names_to = "Temperature", 
               values_to = "value")

ggplot(data = annual_extremes_tidy,                   # the data
       aes(x = year, y = value, color = location)) +  # the aesthetics
  geom_line(aes(size = Temperature)) +                # for lines, the size
                                                      # varies with Temperature
  geom_point(aes(shape = Temperature), size = 2) +    # for points, the shape
                                                      # varies with Temperature
  scale_size_manual(values = c(tmax = 0.5, 
                               tmin = 0.1)) + # set coordinates for "size"
  scale_x_continuous(limits=c(1990,2000), 
                     breaks = c(1990, 1992, 1994, 1996, 1998, 2000)) + 
  # ^^^ Set coordinates for the x-axis.
  scale_color_brewer(palette = "Set1", name = "City") + 
  # We can override the default color palette. 
  # The Brewer palettes are very good for people with color-blindness.
  labs(x = "Year", y = "Temperature Anomaly") # labels for the coordinates
```
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          301,
                          'MODTRAN',
                          'Instructions for Lab #3: Infrared Light',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_03/lab_03_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, cache = FALSE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
  knitr::opts_chunk$set(fig.width = 6, fig.height = 4)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

library(knitr)
library(xml2)
library(tidyverse)

theme_set(theme_bw(base_size = 15))

source(file.path(script_dir, ''utils.R''), chdir = T)
source(file.path(script_dir, ''format_md.R''), chdir = T)
source(file.path(script_dir, ''modtran.R''), chdir = T)

```
# Instructions

It would be good to print these instructions and bring them to lab on 
Monday, or else to have the PDF with the instructions handy during lab.

For these exercises, I recommend that you work on them with the interactive
web-based MODTRAN models to get a feel for how the models apply to the 
exercise.

Once you are clear what you are doing, you can use the R scripts and RMarkdown
to turn those insights into reproducible research.

## Using MODTRAN with RMarkdown.

This RMarkdown document includes the line `source("_scripts/modtran.R")`,
which loads a script with the following functions:
  
* `run_modtran()` allows you to automatically download a file
  with the data from a MODTRAN run. You call it with the following arguments:
  
  * `filename` is an optional name for a file to save the data to. 
    If you don''t specify the `filename`, then `run_modtran` will not save the
    model output to the disk.
    I recommend giving it a meaningful name: for instance, a run with 
    550 ppm CO2 and 3.4 ppm methane might be called "`modtran_440_34.txt`". 
    Make up your own file names, but think about how you will tell which is 
    which.
    I also recommend that you save the files in the `_data` subdirectory to keep
    your project nicely organized.

  * `co2_ppm` is the amount of CO~2~ in parts per million. The default is 400.

  * `ch4_ppm` is the amount of methane in parts per million. The default is 1.7.

  * `trop_o3_ppb` is the amount of ozone in the troposphere, in parts per billion.
    The default is 28. You probably won''t change this unless you''re setting all
    greenhouse gases to zero.

  * `strat_o3_scale` is the amount of stratospheric ozone, relative
    to the naturally occurring levels in the ozone layer. 
    You probably won''t change this unless you''re setting all
    greenhouse gases to zero.

  * `h2o_scale` is the amount of water vapor, relative to the naturally
    occurring levels in the atmosphere. 
    You probably won''t change this unless you''re setting all
    greenhouse gases to zero.

  * `freon_scale` is the amount of freon chemicals (used for refrigerators
    and air conditioners), relative to the current amounts.
    You probably won''t change this unless you''re setting all
    greenhouse gases to zero.

  * `delta_t` is the temperature offset, in degrees C.
    You adjust this to restore radiative equilibrium after you change the
    amount of CO~2~ or other greenhouse gases.

  * `h2o_fixed` is what quantity to hold fixed for water vapor.
    Possible values are "vapor pressure" (the default), and "relative humidity"

  * `atmosphere` is the locality in the MODTRAN model. 
    Possible values are: 
    
    * `"tropical"` (the default), 
    * `"midlatitude summer"`, 
    * `"midlatitude winter"`, 
    * `"subarctic summer"`, 
    * `"subarctic winter"`, 
    * and `"standard"` for the 1976 U.S. standard atmosphere.

  * `clouds` is the specification of clouds and rain.
    Possible values are 
    
    * `"none"` (the default),
    * `"cumulus"`, 
    * `"altostratus"`, 
    * `"stratus"`, 
    * `"stratocumulus"`, 
    * `"nimbostratus"`,
    * `"drizzle"`, 
    * `"light rain"`, 
    * `"moderatre rain"`, 
    * `"heavy rain"`, 
    * `"extreme rain"`,
    * `"standard cirrus"`, 
    * `"subvisual cirrus"`, 
    * and `"NOAA cirrus"`.

    **Stratus clouds** are flat, opaque, and low-altitude. 
    **Altostratus clouds** are flat and medium altitude.
    **Cirrus clouds** are thin and high-altitude. They are hard to model, 
    so there are three different varieties.
    **Cumulus clouds** are thick and stretch from low altitudes to medium altitudes.
    **Stratocumulus clouds** are like thunder clouds. They are very tall and 
    reach from low altitudes to the top of the troposphere.
    **Nimbostratus clouds** are low and thick, like stratus, but produce rain.

  * `altitude_km` is the altitude, in kilometers above sea level, that you 
    put your virtual sensor in the model.
    The default is 70 km, which is above almost all of the atmosphere.

    For some exercises, you may experiment with putting the sensor somewhere
    around 8 to 12 km, which is the top of the troposphere, below the stratospheric
    ozone layer.

    For other exercises, you might want to put it at 0 km (ground level),
    and set it to look up instead of down, so you can see the IR radiation
    coming down to the ground from the atmosphere instead of looking at the 
    IR radiation going out to space.

  * `looking` is the direction the sensor is looking. The options are
    "down" (the default) or "up".

  Any arguments you don''t specify explicitly take on their default value.
  Thus, 
  `run_modtran(file.path(data_dir, "modtran_experiment_1.txt"), co2_ppm = 800, delta_t = 1.0, h2o_fixed = "relative humidity")`
  would run with all the default values, except for 800 ppm CO~2~, 
  a temperature offset of 1&deg;C, and holding relative humidity fixed.

  The function **returns a list with 7 elements**:
  * `spectrum` is a data tibble with the spectral information (wavelength `lambda`,
    wavenumber `k`, outgoing IR intensity `tk`, and a number of other variables.)
  * `profile` is the profile of the atmosphere: a tibble with seven columns:
    * `Z`   is the altitude in km, 
    * `P`   is the atmospheric pressure, in millibars, and
    * `T`   is the temperature in Kelvin.
    * `H2O` is the concentration of water vapor, in parts per million at each
      altitude.
    * `O3`  is the concentration of ozone, in parts per million at each
      altitude.
    * `CO2` is the concentration of carbon dioxide, in parts per million at each
      altitude.
    * `CH4` is the concentration of methane, in parts per million at each
      altitude.
  * `co2` is the atmospheric CO~2~ concentration
  * `ch4` is the atmospheric methane concentration
  * `i_out` is the intensity of the outgoing IR radiation flux.
  * `t_ground` is the ground temperature (in Kelvin) used in the model run.
    (Remember that this is something you set when you run the model.
    MODTRAN cannot calculate the way ground temperature changes when
    you change greenhouse gases, clouds, or other characteristics of the
    atmosphere.)
  * `t_tropo` is the temperature at the tropopause (in Kelvin).
  * `h_tropo` is the height of the tropopause (in km).
  * `alt` is the altitude of the virtual sensor.
  * `sensor_direction` is the direction of the virtual sensor ("up" or "down").

  You can assign the output of `run_modtran()` to a variable like this:
  `mod_data = run_modtran("my_modtran_file.txt", co2_ppm = 400)` and then 
  you can pass the value of `mod_data` to the `plot_modtran()` function, as 
  described below.

* `read_modtran(filename)` allows you to read in a MODTRAN output file 
  (saved to the disk by `run_modtran()`. It returns a list with the 
  same elements as `run_modtran()`.

* `plot_modtran` generates a plot of the radiative spectrum.
  There are many arguments, and I won''t explain them all here, but
  the important ones are:
  
  * `modtran_data` is the data that would be returned by the `run_modtran()`
    function. If you want to plot 
  * `filename` is the MODTRAN output file with the data to use for the plot.
  
    You can also provide data directly to `plot_modtran` instead of reading
    in a file:
    Instead of writing 
    `plot_modtran("my_modtran_file.txt", ...)`, 
    you could write, 
    `plot_modtran(modtran_data = mod_data, ...)`,
    where `mod_data` is the output of `run_modtran()` or `read_modtran()`.

  * `descr` is an optional string to use for the title of the plot.
    If you don''t specify anything, the function will make a title
    that indicates the CO2 concentration and the altitude of the virtual
    sensor.
    
  * `i_out_ref` is a reference value for the outgoing infrared. If you don''t
    specify it, it''s ignored, but if you specify it, then the plotting
    function adds an annotation to indicate the difference in outgoing IR
    between the current run being plotted and the reference value.
    Typically, you''d run a baseline run of MODTRAN with default parameters
    and then use the upward IR flux from that run as `i_out_ref` when you
    change the CO~2~ concentration or other model parameters.

  * `delta_t` is the temperature offset for this model run. If you specify it,
    the plotting function adds an annotation to indicate it.

  * `text_size` allows you to adjust the size of the text used for axis labels
    and the plot title.

### Converting temperature units    

* Some handy functions for converting temperature measurements
from one unit of measurement to another are:
  
  * `ktof(T)` converts `T` from Kelvin to Fahrenheit.

  * `ktoc(T)` converts `T` from Kelvin to Celsius.

  * `ftok(T)` converts `T` from Fahrenheit to Kelvin.

  * `ctok(T)` converts `T` from Celsius to Kelvin.

  * `ctof(T)` converts `T` from Celsius to Fahrenheit.

  * `ftoc(T)` converts `T` from Fahrenheit to Celsius.

But be aware that if you want to convert the _difference between two
temperatures_, you need to convert the temperatures and then take the
difference:
  
```{r delta_temperature}
t1_k = 254 # Kelvin temperature
t2_k = 288 # Kelvin temperature
delta_t_k = t2_k - t1_k # Difference in temeprature, in Kelvin

delta_t_k

t1_f = ktof(t1_k) # Fahrenheit temperatures
t2_f = ktof(t2_k)

t1_f
t2_f

delta_t_f = t2_f - t1_f # Difference in temperature, in Fahrenheit

delta_t_f

# This will give the wrong answer for the 
# temperature difference in Fahrenheit!
ktof(delta_t_k)
```
You see that `r t2_f` minus `r t1_f` is not `r ktof(delta_t_k)`.

* Some variables that I have defined for you are:
  
  * `sigma_sb` is the Stefan-Boltzmann constant.

  * `solar_constant` is the Solar Constant (the intensity of sunlight at the 
    top of the atmosphere, `r format_md(solar_constant, digits= 3)`).

## Examples:

```{r run_modtran_baseline, include=TRUE, message=FALSE, warning=FALSE}
modtran_baseline = run_modtran(filename = 
                                 file.path(data_dir, "modtran_baseline.txt"))
```

You could also write this as 

```{r run_modtran_baseline_2, include=TRUE, message=FALSE, warning=FALSE}
run_modtran(filename = file.path(data_dir, "modtran_baseline.txt"))
modtran_baseline = read_modtran(file.path(data_dir, "modtran_baseline.txt"))
```

Now you can extract the various values from modtran_baseline:

```{r extract_baseline_values, include=TRUE, message=FALSE, warning=FALSE}
baseline_i_out <- modtran_baseline$i_out
baseline_t_trop <- modtran_baseline$t_trop
```

The baseline MODTRAN run has 
$I_{\text{out}} = `r format_md(baseline_i_out, digits = 2, output_format = "latex")`$
and 
$T_{\text{tropopause}} = `r format_md(baseline_t_trop, digits=1, output_format = "latex")`$.

```{r plot_modtran_baseline, include=TRUE, message=FALSE, warning=FALSE}
plot_modtran(modtran_baseline)
```

Or you could write

```{r plot_modtran_baseline_2, include=TRUE, message=FALSE, warning=FALSE}
plot_modtran(filename = file.path(data_dir, "modtran_baseline.txt"))
```

```{r double_co2, include=TRUE, message=FALSE, warning=FALSE}
double_co2 = run_modtran(filename = file.path(data_dir, "modtran_double_co2.txt"), 
            co2_ppm = 800)
plot_modtran(double_co2, i_out_ref = baseline_i_out, delta_t = 0)
```

```{r double_co2_warming, include=TRUE, message=FALSE, warning=FALSE}
mod_file = file.path(data_dir, "modtran_double_co2_warming.txt")
double_co2_warming = run_modtran(filename = mod_file, 
                                 co2_ppm = 800, delta_t = 0.76)
plot_modtran(double_co2_warming, i_out_ref = baseline_i_out, delta_t = 0.76)
```

# A few new R functions that we will use in this lab:

## Iterating over a series

Sometimes you want to repeat something in R, executing the same commands for
many different values of a variable. We can do this with the `for` command:
  
```{r loop, include = TRUE, fig.height=3, fig.width=3}
df = tibble(x = 1:10)

for (i in 1:4) {
  p = ggplot(df, aes(x = x, y = x^i)) + 
    geom_point() + geom_line() +
    labs(x = "x", y = str_c("x to the power ", i))
  plot(p)
}
```

This gives us a nice way to run MODTRAN over and over, with many different
values for the CO~2~ concentration and recording the value of I~out~ for each
concentration.

In the loop below, we set all the greenhouse gases to zero and then vary CO~2~.
We use a trick in R by making an empty tibble before we start the loop and then
for each iteration of the loop, we use `bind_rows` to append a row with the 
data from that loop iteration.

```{r modtran_loop, echo=TRUE, eval=FALSE, message=FALSE, warning=FALSE}
co2_values = c(0, 200, 400, 600, 800, 1000, 1200)
tbl = tibble()
for (co2 in co2_values) {
  filename = str_c("modtran_co2_", co2, ".txt")
  mod_data = run_modtran(filename, co2_ppm = co2, ch4_ppm = 0, trop_o3_ppb = 0,
                         strat_o3_scale = 0, h2o_scale = 0, freon_scale = 0,
                         atmosphere = "standard", altitude_km = 70)
  tbl = bind_rows(tbl, tibble(co2_ppm = co2, i_out = mod_data$i_out))
}

# The digits argument below sets the number of decimal places
# for each column in the table.
kable(tbl, digits = c(co2_ppm = 0, i_out = 1))
```

This code runs `run_modtran` for each value of CO~2~ in `co2_values`
and saves the result to a file `modtran_0.txt`, `modtran_200.txt`, and so 
forth. I make the filenames from the values of `co2` using the `str_c` function, 
which I explain below. 

## Manipulating text in R

R has many functions for manipulating text. When R stores text, it stores it
in character variables (these are also sometimes called "strings" because
text is like a string of characters).
For instance, we might want to make a label or a filename by combining several 
variables. 
We can use the function `str_c`, from the `tidyverse`:
  
```{r combining_strings, include=TRUE}
print(str_c("infra", "red"))
print(str_c("infra", "red", sep = "-"))
print(str_c(10, "km", sep = " "))
print(str_c("one", "two", "three", "four", sep = ", "))

x = 50

print(str_c(x, "Watts"))
print(str_c(x, " Watts"))
print(str_c(x, "Watts", sep = " "))
```

Notice how `str_c` pastes the text together without any spaces between the 
parts unless you tell it to use a separator (`sep`) between them.

## Calculating with leads and lags

Sometimes, when we are using `mutate` with a data tibble, we might want to
look at differences between a row and the row before or after it in the
tibble. We can do this with the `lead` and `lag` functions:

In the example below, the column `u` gets the value of the current row of
`y` minus the previous row of `y`, and the column `v` gets the value of the
next row of `y` minus the current row of `y`. Note that where there isn''t a
previous row, `lag` returns `NA` (missing value), and similarly for `lead`
when there isn''t a next row.

```{r lead.lag, include=TRUE}
tbl = tibble(x = 0:5, y = x^2)

tbl = tbl %>% mutate("lag y" = lag(y), "lead y" = lead(y), u = y - lag(y), 
                     v = lead(y) - y)
kable(tbl)
```

If you want to lead or lag by more than one row, you can just say, `lag(y, 5)`
to get the value of `y` 5 rows before the current one.

```{r lead.lag.2, include = TRUE}
tbl = tibble(x = 1:10)
tbl = tbl %>% mutate(before = lag(x), after = lead(x), 
                     before.2 = lag(x, 2), after.3 = lead(x, 3))
kable(tbl)
```

## Modifying _x_ and _y_ axes in `ggplot`

It is easy to modify the _x_ or _y_ axis in `ggplot`. For instance, if
you want to put specific limits on the axis, or change where the labels
go, you can use `scale_x_continuous` or `scale_y_continuous`:

```{r simple_plot, include=TRUE, fig.height=3, fig.width=4}
tbl = tibble(x = 1:200, y = (x / 100)^5)

ggplot(tbl, aes(x = x, y = y)) + geom_line()
```

```{r scale_x, include=TRUE, warning=FALSE, fig.height=3, fig.width=4}
ggplot(tbl, aes(x = x, y = y)) + geom_line() +
  scale_x_continuous(limits = c(0,150), breaks = seq(0, 150, 25)) +
  scale_y_continuous(limits = c(0,10))
```

```{r log_plot, include=TRUE, fig.height=3, fig.width=4}
tbl = tibble(x = 1:200, y = 5 - 2 * x + 3 * x^2)

# Note that in R when we are typing numbers, we can express scientific notation 
# as 1E6 for 1,000,000 2.67E-3 for 0.00267

ggplot(tbl, aes(x = x, y = y)) + geom_line() +
  scale_x_log10(limits = c(1,1000)) +
  scale_y_log10(limits = c(1,1E6))
```

# Exercises for Lab #3

You should accept the GitHub Classroom assignment for Lab #3, create a new
RStudio project for the lab, choosing Version Control and the link to the 
GitHub repository for your Lab 3 project, and then open the file 
`lab-03-exercises.Rmd` in RStudio to do these exercises.

# Chapter 4 Exercises

## Exercise 4.1: Methane

Methane has a current concentration of 1.7 ppm in the atmosphere and
is doubling at a faster rate than CO~2~.

a) **Would an additional 10 ppm of methane in the atmosphere have a larger or 
   smaller impact on the outgoing IR flux than an additional 10 ppm of CO~2~ 
   at current concentrations?**

   **Suggestion:**

   * Run MODTRAN in the default configuration (400 ppm CO~2~ and 1.7 ppm 
     methane)
   * Run MODTRAN with an extra 10 ppm of CO~2~ and the normal amount of methane.
   * Run MODTRAN with the normal amount of CO~2~ and an extra 10 ppm of methane.

   What would you look at from the three runs to figure out whether 10 ppm of 
   methane or 10 ppm of CO~2~ had the greater effect?

b) **Where in the spectrum does methane absorb? What concentration does it take 
   to begin to saturate the absorption in this band? Explain what you are looking 
   at to judge when the gas is saturated.**

   **Hints**:  
   I recommend setting all the greenhouse gases to zero, and run MODTRAN.
   Then run MODTRAN for several values of methane, starting at 1 ppm and 
   doubling the concentration until you get to around 128 ppm.
   You can do this using a `for` loop, following the examples from the 
   lab instructions.

   To set all the greenhouse gases to zero, you would call 
   `run_modtran(co2_ppm = 0, ch4_ppm = 0, trop_o3_ppb = 0, strat_o3_scale = 0,
   h2o_scale = 0, freon_scale = 0)`

   The spectrum of methane is complicated so it doesn''t saturate all at once.
   Use `plot_modtran` to plot the spectrum for each concentration and describe 
   what you see and where you think methane begins to saturate and why.

   By default, `plot_modtran` gives a plot a title that indicates the CO~2~
   concentration. Here, CO~2~ doesn''t change and we''re interested in the CH~4~
   concentration, so you can use the `descr` argument to `plot_modtran` to
   give the plots different titles. See the example below.

   Remember that if you want to make several plots using a `for` loop, you need to 
   assign the result from `plot_modtran` or `ggplot` to a variable and then
   use the `plot` or `print` function.
   ``` r
   for (ch4 in ch4_list) {
     mod_data = run_modtran(co2_ppm = 0, ch4_ppm = ch4, trop_o3_ppb = 0,
     strat_o3_scale = 0, h2o_scale = 0, freon_scale = 0)
     p = plot_modtran(mod_data)
     plot(p) # you could also say print(p) here.
   }
   ```

c) **Would a doubling of methane have as great an impact on the heat balance as a 
   doubling of CO~2~?**

   **Suggestion:** 
    
   * Run MODTRAN in its default configuration (400 ppm CO~2~ and 1.7 ppm methane)
   * Run it again with double the methane concentration.
   * Run it again with the default methane (1.7 ppm) but double the CO~2~ 
     concentration.
   * Compare $I_{\text{out}}$ for the three runs.

d) **What is the "equivalent CO~2~" of doubling atmospheric methane? That is to 
   say, how many ppm of CO~2~ would lead to the same change in outgoing IR 
   radiation energy flux as doubling methane? What is the ratio of ppm CO~2~ 
   change to ppm methane change?**

## Exercise 4.2: CO~2~ (Graduate students only)

a) **Is the direct effect of increasing CO~2~ on the energy output at the top of
   the atmosphere larger in high latitudes or in the tropics?**

   **Hint:**
   Run MODTRAN with the atmosphere set to `tropical`, `midlatitude summer`,
   and `subarctic summer`, and for each atmosphere, at 400 ppm and 800 ppm CO~2~. 
   For each atmosphere, calculate the difference between I~out~ at 400 and 800
   ppm CO~2~ and determine how the effect of doubling CO~2~ varies as you go
   from  tropical latitudes to subarctic ones.


b) **Set pCO~2~ to an absurdly high value of 10,000 ppm. You will see a spike
   in the CO~2~ absorption band. What temperature is this light coming from? 
   Where in the atmosphere do you think this comes from?**

   **Now turn on clouds and run the model again. Explain what you see.
   Why are night-time temperatures warmer when there are clouds?**

   **Hint:** MODTRAN simulates the upward directed, outgoing longwave radiation 
   as seen by a sensor looking down from some height. 
   For the first part of this exercise, start with the sensor at its
   default altitude of 70 km (you set this with the `altitude_km` argument to
   `run_modtran`), and successively lower it by 10 km at a time until
   you get to 10 km. 
   What happens to the spike as you lower the sensor? What does this say about
   what part of the atmosphere is responsible for the spike in the middle of the 
   CO~2~ absorption at very high values of CO~2~?
   
   For the second part of this exercise, try using "altostratus" clouds.

## Exercise 4.3: Water vapor

Our theory of climate presumes that an increase in the temperature at ground
level will lead to an increase in the outgoing IR energy flux at the top of the
atmosphere.


a) How much extra outgoing IR would you get by raising the temperature of the 
   ground by 5&deg;C? What effect does the ground temperature have on the 
   shape of the outgoing IR spectrum and why?**
   
   **HINT**: You can raise the temperature of the ground with the `delta_t`
   artument to MODTRAN.

b) **More water can evaporate into warm air than into cool air. Change the
   model settings to hold the water vapor at constant relative humidity 
   rather than constant vapor pressure (the default), calculate the change
   in outgoing IR energy flux for a 5&deg;C temperature increase.
   Is it higher or lower? Does water vapor make the Earth more sensitive to
   CO~2~ increases or less sensitive?**
   
   **Note:** By default, the MODTRAM model holds water vapor pressure constant,
   but you can set it to hold relative humidity constant instead with the
   option `h2o_fixed = "relative humidity"`, like this:
   `run_modtran(file_name, delta_t = 5, h2o_fixed = "relative humidity")`.

c) **Now see this effect in another way.**

   * **Starting from the default base case, record the total outgoing 
     IR flux.**

   * **Now double CO~2~. The temperature in the model stays the
     same (that''s how the model is written), but the outgoing IR flux
     goes down.**

   * **Using constant water vapor pressure, adjust the temperature offset
     until you get the original IR flux back again. Record the change in
     temperature.**
    
   * **Now repeat the exercise, but holding the relative humidity fixed
     instead of the water vapor pressure.**
    
   * **The ratio of the warming when you hold relative humidity fixed
     to the warming when you hold water vapor pressure fixed is the 
     feedback factor for water vapor. What is it?**

# Chapter 5 Exercise

## Exercise 5.2: Skin Height

a) **Run the MODTRAN model using the "tropical" atmosphere, without clouds, 
   and with the present-day CO~2~ concentration (400 ppm). 
   Use the ground temperature reported 
   by the model to calculate
   $\varepsilon \sigma T_{\text{ground}}^4$,
   the heat flux emitted by the ground.
   Assume $\varepsilon = 1$, and I have already provided the value of the 
   Stefan-Boltzmann constant $\sigma$, as the R variable `sigma_sb`,
   which equals `r format_md(sigma_sb, digits = 3, format = "scientific")`.
   (I defined it in the script "utils.R", which I loaded in the "setup" chunk
   in the RMarkdown document).**

   **Next, look at the outgoing heat flux at the top of the atmosphere (70 km) 
   (I~out~) reported by the MODTRAN model. Is it greater or less than the heat 
   flux that you calculated was emitted by the ground?**

b) **Use the outgoing heat flux at the top of the atmosphere (I~out~) to 
   calculate the skin temperature (use the equation 
   $I_{\text{out}} = \varepsilon \sigma T_{\text{skin}}^4)$).
   What is the skin temperature, and how does it compare to the ground 
   temperature and the temperature at the tropopause, as reported by the 
   MODTRAN model (`t_tropo`)?**
   
   **Assuming an environmental lapse rate of 6K/km, and using the 
   skin temperature that you calculated above, and the ground temperature
   from the model, what altitude would you expect the skin height to be?**

c) **Double the CO~2~ concentration and run MODTRAN again. Do not adjust the
   ground temperature. Repeat the calculations from (b) of the skin
   temperature and the estimated skin height.**

   **What is the new skin temperature? What is the new skin height?**

d) **Put the CO~2~ back to today''s value, but add cirrus clouds, using the
   "standard cirrus" value for the clouds. Repeat the calculations from (b) of
   the skin temperature and the skin height.**
   
   **What is the new skin temperature? What is the new skin height?
   Did the clouds or the doubled CO~2~ have a greater effect on the
   skin height?**
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          401,
                          'FEEDBACK',
                          'Instructions for Lab #5: Clouds and Feedbacks',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_05/lab_05_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

# library(pacman)
# p_load(tidyverse, jsonlite, httr, magrittr, scales)
library(tidyverse)
library(magrittr)
library(scales)
library(jsonlite)
library(xml2)
library(httr)

theme_set(theme_bw(base_size = 10))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "modtran.R"), chdir = T)
source(file.path(script_dir, "rrtm.R"), chdir = T)
```
# Exercises with clouds and feedbacks

These are the exercises you will work for the lab this week.

## General Instructions

Just as with last week''s lab, when you write up the answers, I would
like you to integrate your R code chunks with your text.

For instance, you can describe what you''re going to do to answer the question, 
and then for each step, after you describe what you''re going to do in that
step, you can include an R code chunk to do what you just described, and then
the subsequent text can either discuss the results of what you just did
or describe what the next step of the analysis will do.

This way, your answer can have several small chunks of R code that build on
each other and follow the flow of your text.

## Exercise 1: Clouds and Infrared.

**Note:** this exercise only considers the effect of clouds on longwave
radiation and ignores the effect of clouds on albedo, which is also important.

a) Run the MODTRAN model with the default conditions: 
   present-day CO~2~ (400 ppm), a tropical atmosphere, and the sensor looking 
   down from an altitude of 70 km.
   Plot the outgoing infrared spectrum. 
   
   Run MODTRAN four times: first with no clouds, and then with three different
   kinds of clouds: standard cirrus, altostratus, and stratus
   (`clouds = "standard cirrus"`, `clouds = "altostratus"`, and 
   `clouds = "stratus"`). These correspond to clouds at high, medium, and low
   altitude, respectively.

   Describe the important differences between the spectra for the four cases.
   Describe the differences in the intensity of outgoing infrared radiation
   $I_{\text{out}}$ for the four cases.

   How do the four spectra compare for the band of wavenumbers from about 
   600--750 cm^-1^ (where CO~2~ absorbs strongly) and the band from about 
   800--1200 cm^-1^ (the atmospheric window)?

   Which kind of cloud has the greatest impact on outgoing infrared light?
   Why?

b) Keeping the default settings (sensor altitude = 70 km looking down), 
   Set `atmosphere = "midlatitude winter"` and `h2o_scale=1` and 
   run MODTRAN with no clouds.

   Next, run MODTRAN with the same settings, but with `altitude_km = 0` and 
   `looking="up"`.
   This means your sensor is on the ground looking up at the longwave radiation 
   coming down from the atmosphere to the ground instead of looking down from 
   the top of the atmosphere at the longwave radiation going out to space.
   
   Plot the two spectra (looking down from 70 km and looking up from the ground)
   and describe what you see. 
   Pay special attention to the parts of the spectrum corresponding to the 
   strong CO~2~ absorption (roughly 600--750 cm^-1^) and the infrared window 
   (roughly 800--1200 cm^-1^). 

   Which parts of the spectrum correspond to warmer temperatures
   temperatures when you look down, and which parts correspond to colder 
   temperatures?
   What about when you are looking up from the ground?
   Do you notice a pattern?
   
c) Now, run MODTRAN with the sensor looking up from the ground
   (`altitude = 0` and `looking = "up"`), but with stratus clouds 
   (`clouds = "stratus"`).

   When we''re looking up at the clouds, the base (bottom) of the clouds form
   a layer that is opaque to longwave radiation, with an emissivity of 1
   (i.e., a perfect black body).

   Make a note of 
   _I_~down~ for the clear sky and with clouds. 
   (Remember that the variable `i_out` in the MODTRAN output measures the 
   intensity of longwave radiation reaching the sensor.
   In this exercise, the sensor is on the ground looking up, so `i_out` 
   measures the downward radiation reaching the ground.)

   Plot the spectra for both cases and also compare _I_~down~.

   * What part of the spectrum is most affected by clouds? 
     (Answer both in terms of what ranges of wavelengths or wavenumbers are
     affected, and also what name we give to this part of the spectrum).
   * On a winter night in Nashville, would it be colder if the sky is clear or
     if it''s cloudy?

d) Now set `clouds` to `"none"`,
   and keep the sensor altitude at 0 km (`altitude_km = 0`) 
   looking up (`looking = "up"`). 
   
   Run MODTRAN first with `h2o_scale = 1` (the default), and then with
   `h2o_scale = 0` (no water vapor).
    
   Plot the two spectra (with water vapor and without water vapor) and compare 
   them. 
   Discuss why you see what you see:
    
   * For the atmosphere with no water vapor, compare the parts of the 
     spectrum corresponding to the strong CO~2~ absorption 
     (roughly 600--750 cm^-1^) and the infrared window 
     (roughly 800--1200 cm^-1^). 

     * Which parts of the spectrum correspond to higher emission temperatures 
       and which to lower temperatures? 
     * Why do you think this is?
    
   * For the atmosphere with normal water vapor (`h2o_scale = 1`), how does 
     water vapor change the spectrum you see from the ground?

     * Does it make the longwave radiation brighter (warmer) or dimmer
       (cooler)?
       * Why do you think this is?

## Exercise 2: Water Vapor Feedback

For this exercise, you will use the RRTM model to examine climate sensitivity
and the water vapor feedback in a radiative-convective atmosphere.

a) First, run the RRTM model with its default parameters (400 ppm CO~2~) and 
   note the surface temperature (`T_surface`).
   
   Then run it again with doubled CO~2~ concentration (`co2 = 800`).
   Adjust the surface temperature to bring the heat imbalance `Q` to zero
   (it may be easier to do this with the interactive model at 
   <http://climatemodels.uchicago.edu/rrtm/> and then paste the new surface
   temperature into your R code).
    
   The change in surface temperature between the 400 ppm CO~2~ and 
   800 ppm CO~2~ ($\Delta T_{2 \times \text{CO}_2}$) runs is the 
   **climate sensitivity**. What is it?

b) Now run the RRTM model again, with 400 ppm CO~2~, but this time 
   setting `relative_humidity = 0` (this turns off the water vapor feedback).
   Adjust  `T_surface` to bring the heat into balance (so the output has `Q` 
   equal to zero). Note the value of `T_surface`.
   
   Now double the CO~2~ concentration (to 800 ppm) and adjust `T_surface` to
   bring the heat into balance. 
   What is the climate sensitivity $\Delta T_{2 \times \text{CO}_2}$
   when there is no water-vapor feedback?
   
c) Compare the climate sensitivity ($\Delta T_{2 \times \text{CO}_2}$) in 
   part (a) (with water-vapor feedback) and part (b) (without water-vapor 
   feedback).
   The amplification factor for the water-vapor feedback is the ratio of the 
   climate sensitivity with water-vapor feedback to the sensitivity without the 
   feedback. 
   What is the amplification factor?

In your write-up, discuss how including the water vapor feedback changes the 
way that CO~2~ affects the climate.
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          501,
                          'LAPSE_CLOUD',
                          'Instructions for Lab #4: Convection and Clouds',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_04/lab_04_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, cache = FALSE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

library(tidyverse)
library(jsonlite)
library(httr)
library(magrittr)
library(scales)
library(xml2)

theme_set(theme_bw(base_size = 10))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "modtran.R"), chdir = T)
source(file.path(script_dir, "rrtm.R"), chdir = T)
```
# Note:

Three things to note:

* Because of a mixup on my part, I inadvertently briefly made the answers 
  available, so to keep things fair for everyone, I have posted my answers for 
  everyone to see.
* Because of the in-class reading days on Feb. 23--24, I did not want to make 
  this lab due during or right before or after those reading days, so it will 
  be due Monday March 1. Lab 5 will also be due Mar 1., so you will have to get 
  them both in by then, but between the answers being available and the extra 
  week for this lab, I hope this will give you a lot more flexibility in getting 
  the assignments done.
* One big piece of this lab is to use RMarkdown to write a report that really 
  integrates text with code and graphics and tables that are generated by 
  RMarkdown. Use the fact that you can easily check your answers to the specific 
  questions to give you some freedom to think about how you want to present your 
  answers. Don''t just copy and paste from my answers, but think about how you 
  would use RMarkdown to present your answers in your own way.

# Exercises with lapse rate and clouds.

In this lab, you will learn about a new climate model, RRTM.
RRTM stands for "Rapid Radiative Transfer Model."
This model is a radiative-convective model that uses code
from the radiative-transfer portion of a state-of-the-art global climate model
called the "Community Climate System Model," developed at the National Center
for Atmospheric Research in Boulder CO.

The entire CCSM model runs on giant supercomputers, but this radiative transfer
module can run efficiently on an ordinary computer. In order to speed up the
calculations, RRTM does not calculate the entire longwave spectrum the way
MODTRAN does, but uses a simplified approximation that is much faster when
the big climate models need to run this radiative transfer calculation
roughly 52 quadrillion 
(`r format_md(5.2E15, digits = 1, format = "scientific")`) times in a 
simulation of 100 years of the earth''s climate.

An advantage that RRTM has over MODTRAN, is that MODTRAN assumes that the
atmosphere is static (none of the air moves), whereas RRTM allows for
convective heat flow. This makes RRTM more realistic, even though it sacrifices
detail in its treatment of longwave radiation.

We will use RRTM to explore the role of convection in the earth system
and to examine the water-vapor feedback in the presence of convection.

You can run the RRTM model interactively on the web at
<http://climatemodels.uchicago.edu/rrtm/>
and I have also written a script that allows you to run it from R.

To run the model interactively, you can adjust various parameters, such as the
brightness of the sun, the albedo (it gives you a choice of many natural and
human-made surfaces, such as asphalt, concrete, forest, grassland, snow, ocean,
and the average for the earth) the concentrations of CO~2~ and methane,
the relative humidity, and the amount and type of high (cirrus) and
low (stratus) clouds.

You can also introduce aerosols typical of different parts of the earth, such as
cities (with soot, sulfates, and other pollution), deserts (with blowing dust),
oceans (with sea spray and salt), and a Pinatubo-like volcanic eruption.

Like MODTRAN, the RRTM model does not automatically adjust the surface 
temperature.
Instead, it calculates the upward and downward flux of longwave and shortwave
radiation at 51 different levels of the atmosphere and reports whether the heat
flow is balanced (heat in = heat out) at the top of the atmosphere.

If the earth is _gaining_ heat, you can manually _raise_ the surface temperature
until you balance the heat flow, and if the earth is _losing_ heat, you can
manually _lower_ the temperature.

## R Interface to RRTM

I have written an R function `run_rrtm` that allows you to manually run
RRTM from R. To use this function, you need to include the line
`source("_scripts/rrtm.R")` or `source(file.path(script_dir, "rrtm.R"))`
to load it.

* `run_rrtm()` allows you to automatically download a file
  with the data from a MODTRAN run. You call it with the following arguments:

  * `filename` is the name of the file to save the data to. The function
    returns the output data, so it''s optional to specify a file name.

  * `co2_ppm` is the amount of CO~2~ in parts per million. The default is 400.

  * `ch4_ppm` is the amount of methane in parts per million. The default is 1.7.

  * `relative_humidity` is the relative humidity, in percent. The default is
    80%.

  * `T_surface` is the surface temperature, in Kelvin.
    The default (for 400 ppm CO~2~, etc.) is 284.42.
    You adjust this to restore radiative equilibrium after you change the
    parameters (amount of CO~2~, lapse rate, etc.).

  * `I_solar` is the brightness of the sun, in Watts per square meter.
    The default value is 1360.

  * `surface_type` is the type of surface (this is used to calculate the
    albedo). The default is `earth average. The options are:

    * "`earth average`": The average albedo of the earth (0.30)
    * "`asphalt`": Dark asphalt (0.08)
    * "`concrete`": Concrete (0.55)
    * "`desert`": Typical desert (0.40)
    * "`forest`": Typical forest (0.15)
    * "`grass`": Typical grassland (0.25)
    * "`ocean`": Ocean (0.10)
    * "`snow`": Typical snow (0.85)
    * "`ice`": Large ice masses covering ocean or land (0.60)
    * "`soil`": Bare soil (0.17)
    * "`custom`": Custom albedo (if you choose this, you need to also supply
      a value for `albedo`)

  * `tropopause_km` is the altitude of the tropopause, in kilometers above
    sea level. The default value is 15, which is typical of middle latitudes.
    The tropopause varies from place to place around the Earth, from around 
    9 km at the poles to around 17 km near the equator.

  * `lapse_rate` is the lapse rate, in Kelvin per kilometer. The default is
    6, which is roughly the global average environmental lapse rate. 
    The dry adiabatic lapse rate is 10, so it''s physically impossible to
    have an persistent environmental lapse rate greater than 10 and results 
    with `lapse_rate` greater than 10 won''t make sense.

  * `low_cloud_frac` is the fraction (from 0.0--1.0) of the sky covered by
    low (stratus) clouds. The default is 0.0.

  * `high_cloud_frac` is the fraction (from 0.0--1.0) of the sky covered by
    high (cirrus) clouds. The default is 0.0.

  * `cloud_drop_radius` is the size of the water droplets in the clouds,
    in microns. The default is 10. (For reference, 10 microns is about the
    size of a red blood cell).
    You can make the droplets smaller to simulate the indirect aerosol effect.

  * `aerosols` allows you to set up the atmosphere with the kinds and
    quantities of aerosols typical of a number of different environments.
    Options are:

      * "`none`": No aerosols
      * "`ocean`": Typical ocean aerosols (sea-spray, salt, etc.)
      * "`desert`": Typical desert aerosols (dust, sand)
      * "`city`": Typical city with soot (black carbon) and sulfate aerosols.
      * "`city just sulfates`": Just sulfate aerosols typical of a city.
      * "`city just soot`": Just soot (black carbon) aerosols typical of a
        city.
      * "`land`": Typical rural land (dust, etc.)
      * "`polluted land`": Typical rural land suffering from pollution
        (e.g., from farming)
      * "`antarctic`": Typical aerosols for Antarctica
      * "`volcano`": Similar sulfate and dust to the Mt. Pinatubo volcanic
        eruption.

  Any arguments you don''t specify explicitly take on their default value.
  Thus, `run_rrtm(co2_ppm = 800, relative humidity = 10, T_surface = 300)`
  would run with all the default values, except for 800 ppm CO~2~,
  relative humidity of 10%, and a surface temperature of 300 Kelvin.

  `run_rrtm` returns a list of data containing:

  * Basic parameters of the model run:
    * `T_surface`
    * `co2_ppm`
    * `ch4_ppm`
    * `I_solar`
    * `albedo`
    * `lapse_rate`
    * `tropopause_km`
    * `relative_humidity`
    * `aerosols`,
    * `low_cloud_frac`
    * `high_cloud_frac`
    * `cloud_drop_radius`
  * Results of the model calculations:
    * `Q`: The heat imbalance $I_{\text{in}} - I_{\text{out}}$
    * `i_in`: The net solar radiation absorbed by the earth
      ($(1 - \alpha) I_{\text{solar}} / 4$)
    * `i_out`: The net longwave radiation emitted to space from the top
      of the atmosphere
    * `profile`: A tibble containing a profile of the atmosphere
      (altitude in km, pressure in millibar, and temperature in Kelvin)
    * `fluxes`: A tibble containing the fluxes (in Watts per square
      meter) of longwave, shortwave, and total radiation going up and
      down at 52 levels from the surface to the top of the atmosphere.
      The columns are `altitude` (km), `T` (temperature in K),
      `P` (pressure in millibar), `sw_up` (upward shortwave), `sw_down`
      (downward shortwave), `lw_up` (upward longwave), `lw_down`
      (downward longwave), `total_up` (`sw_up` + `lw_up`), and
      `total_down (`sw_down` + `lw_down`).

There are also functions for reading RRTM data files and plotting RRTM data:

* `read_rrtm(file)` reads an RRTM file saved by `run_rrtm` and returns a
  list of data just like the one returned by `run_rrtm`.

* `plot_heat_flows()`: plots the upward and downward fluxes of radiation from
  an RRTM file or data structure. You can call it either with
  `plot_rrtm(file = "filename")` or `plot_rrtm(data = rrtm_data)`, where
  "`filename`" and "`rrtm_data`" stand for your own file name or RRTM data
  structure returned by `run_rrtm` or `read_rrtm`.

    You can also specify which wavelengths to plot. By default, it plots
    shortwave (SW), longwave (LW), and total (SW + LW), but you can specify
    one or more of `sw = FALSE`, `lw = FALSE`, or `total = FALSE` to
    omit wavelengths.

## Example of running RRTM

Here is an example of running RRTM:

```{r rrtm_example}
default_rrtm = run_rrtm()

# Surface temperature:
default_rrtm$T_surface

# Heat imbalance:
default_rrtm$Q
```

This run has surface temperature
`r format_md(default_rrtm$T_surface, digits = 2)` K and a heat imbalance of
`r format_md(default_rrtm$Q, digits = 2)` Watts per square meter.

### Interpreting RRTM Results

We can plot the heat flows as a function of altitude:
```{r plot_rrtm_example}
plot_heat_flows(default_rrtm)
```

What you see in this plot are thick lines representing downward heat flow
and thin lines representing upward flow. The different colors represent
shortwave, longwave, and total (shortwave + longwave).

A few things to notice: At the top of the atmosphere, at
`r format_md(max(default_rrtm$fluxes$altitude), digits = 0)` km,
there is very little longwave going down, but a lot of shortwave going down
(around `r format_md(tail(default_rrtm$fluxes$sw_down, 1), digits = 1)` W/m^2^).
Conversely, there is a modest amount of shortwave going up
(around `r format_md(tail(default_rrtm$fluxes$sw_up, 1), digits = 0)` W/m^2^),
but a lot of longwave going up (around
`r format_md(tail(default_rrtm$fluxes$lw_up, 1), digits = 1)` W/m^2^).

The upward shortwave radiation is sunlight reflected from the atmosphere and
the earth''s surface.

The upward longwave radiation is emitted from the surface and the atmosphere.
You can see that the longwave radiation, both up and down, is greater closer to
the surface, where temperatures are warmer, and smaller at higher altitudes,
where the atmosphere is cooler.

If we look at the total radiation, we see that there is a good balance near the
top of the atmosphere (the upward and downward lines come together), but
in the lower atmosphere, there is a serious imbalance with downward fluxes
significantly larger than the upward ones.

This is a consequence of convection: The difference between the downward and
upward radiative fluxes is taken up by convection, which moves heat upward
when warm air rises and cool air sinks.

### Determining Climate Sensitivity with RRTM

We can also use the RRTM model to study what happens when we double CO~2~:
```{r rrtm_warming}
rrtm_double_co2 = run_rrtm(co2_ppm = 800)
```
```{r rrtm_doubled_co2_balanced, echo=FALSE, include=FALSE}
new_ts = 286.9 # Kelvin
rrtm_double_co2_balanced = run_rrtm(co2_ppm = 800, T_surface = new_ts)
```
When we double CO~2~ without changing the surface temperature
(T~surface~ = `r format_md(rrtm_double_co2$T_surface, digits = 3)` K),
this creates a heat imbalance of `r format_md(rrtm_double_co2$Q, digits = 1)`
W/m^2^. We can use the online interactive version of RRTM to adjust surface
temperature until the heat flows balance. The surface temperature where this
happens is `r format_md(new_ts, digits = 3)` K and we can paste it into our
R code:
```{r rrtm_sensitivity, echo = TRUE, include = TRUE, ref.label="rrtm_doubled_co2_balanced"}
```

When we set T~surface~ to
`r format_md(rrtm_double_co2_balanced$T_surface, digits = 3)` K, the heat
imbalance becomes `r format_md(rrtm_double_co2_balanced$Q, digits = 2)`
Watts/m^2^. The climate sensitivity is the change in equilibrium
T~surface~ when you double CO~2~:
$\Delta T_{2\times \text{CO}_2} = `r format_md(rrtm_double_co2_balanced$T_surface, digits = 3)`~\mathrm{K} -
`r format_md(default_rrtm$T_surface, digits = 3)`~\mathrm{K} =
`r format_md(rrtm_double_co2_balanced$T_surface - default_rrtm$T_surface, digits = 1)`~\mathrm{K}$.
You may remember that in last week''s lab, we calculated the climate sensitivity 
with MODTRAN (using constant relative humidity to enable water-vapor feedback) 
and got $\Delta T_{2\times\text{CO}_2} = 1.2$ K for the tropical atmosphere 
(it''s smaller for the other atmospheres), so this shows that including 
convection in our calculations roughly doubles the climate sensitivity.

# New R and RMarkdown tricks

Sometimes you may want to use different text into your document, depending
on what the result of a calculation is.

For instance, I might have a function called `foo` that returns a number
and I want to write something different if `foo(x)` > x than if
`foo(x)` < x. Here, the function `ifelse` can come in handy.
```{r define_foo}
foo = function(x) {
  x^2
}
```
Now I can write `ifelse(foo(x) < x, "less than", "greater than")`. 
The following RMarkdown text:
```
When x = 0.5, `foo(x)` is
``r ''r''` x = 0.5; ifelse(foo(x) < x, "less than", "greater than")` x,
but when x = 2.0, `foo(x)` is
``r ''r''` x = 2.0; ifelse(foo(x) < x, "less than", "greater than")` x.
```
becomes 

> When x = 0.5, `foo(x)` is
> `r x = 0.5; ifelse(foo(x) < x, "less than", "greater than")` x,
> but when x = 2.0, `foo(x)` is
> `r x = 2.0; ifelse(foo(x) < x, "less than", "greater than")` x.

You may have spotted a problem with the code above: What if `foo(x)` = x?
Then I need another `ifelse`:
`ifelse(foo(x) < x, "less than", ifelse(foo(x) > x, "greater than", "equal to"))`.
This is cumbersome to type into your text, so you might want to write a function:
```{r compare_foo}
compare_f = function(f, x) {
  # f is a function
  # x is a number or a numeric variable
  result = f(x)
  ifelse(result < x, "less than",
         ifelse(result > x, "greater than",
                "equal to"))
}
```
Now I can just write `compare_f(foo, x)`:
The following RMarkdown text:
``` r
When x = 0.5, `foo(x)` is ``r ''r''` compare_f(foo, 0.5)` x, but
when x = 2.0, `foo(x)` is ``r ''r''` compare_f(foo, 2.0)` x, and
when x = 1.0, `foo(x)` is ``r ''r''` compare_f(foo, 1.0)` x.
```
becomes 

> When x = 0.5, `foo(x)` is `r compare_f(foo, 0.5)` x, but
> when x = 2.0, `foo(x)` is `r compare_f(foo, 2.0)` x, and
> when x = 1.0, `foo(x)` is `r compare_f(foo, 1.0)` x.

This may seem kind of strange, but a lot of people and organizations use
RMarkdown to prepare reports regularly using different data.
For instance, many businesses use RMarkdown to generate monthly reports
on sales, finances, etc., and using code like the `compare` function I
showed here can help to automate the reports, so that when they run the 
report each month using different data, the text will adjust automatically to 
reflect the new numbers.

It is also applicable to climate science, where many laboratories like to
update their reports every month or every year with the latest climate data.

# Exercises

These are the exercises you will work for the lab this week.

## General Instructions

In the past three weeks, we focused on mastering many of the basics of using
R and RMarkdown. For this week''s lab, when you write up the answers, I would
like you to think about integrating your R code chunks with your text.

For instance, you can describe what you''re going to do to answer the question,
and then for each step, after you describe what you''re going to do in that
step, you can include an R code chunk to do what you just described, and then
the subsequent text can either discuss the results of what you just did
or describe what the next step of the analysis will do.

This way, your answer can have several small chunks of R code that build on
each other and follow the flow of your text.

For this lab, you will use the RRTM model, which includes both radiation and
convection.

### Exercise 1: Lapse Rate

Run the RRTM model in its default configuration and then vary the lapse rate
from 0 to 10 K/km. For each value of the lapse rate, adjust the surface
temperature until the earth loses as much heat as it gains (i.e., the value of
_Q_ in the `run_rrtm` model output is zero.)

It will probably be easier to do this with the interactive version of the RRTM
model at <http://climatemodels.uchicago.edu/rrtm/> than with the R interface
`run_rrtm`.

a) Make a tibble containing the values of the lapse rate and the corresponding
   equilibrium surface temperature, and then (in your report):
   * Make a table showing lapse rate and temperature.
   * Make a plot with lapse rate on the horizontal axis and surface temperature 
     on the vertical axis.

b) Describe how the equilibrium surface temperature varies as the lapse rate
   varies.

## Exercises on Albedo and Clouds

For the following exercises, start off with the RRTM model in its default 
configuration. 
Record the ground temperature.
For each part of this exercise you will do the following:

1. You will adjust the albedo or the clouds.
2. You will compare the visible and longwave radiation going down through the 
   atmosphere to the surface and also the visible and longwave radiation 
   going up from the surface, through the atmosphere, to space.
   
   The results of an RRTM model run have a tibble called `fluxes` with columns
   for `altitude`, `sw_down`, `sw_up`, `lw_down`, `lw_up`, `total_down`, and
   `total_up`, where `sw` means shortwave, `lw` means longwave, and `total`
   is the sum of shortwave plus longwave.
   
   The first row of this tibble is at ground-level and the last row
   is at the top of the atmosphere.
   
   ``` r 
   default_data = run_rrtm()
   fluxes = default_data$fluxes
   surface_fluxes = head(fluxes, 1) # get the first row
   space_fluxes = tail(fluxes, 1)   # get the last row
   ```
   
3. You will adjust the ground temperature until the heat coming in balances
   the heat going out (the model will say, 
   "If the Earth has these properties ... then it loses as much energy as it
   gains."

### Exercise 2: The urban heat island

First, run the RRTM model in its default configuration and note the surface
temperature and the albedo.

```{r RRTM_default}
default = run_rrtm()
albedo_default = default$albedo
T_surface_default = default$T_surface
```

a) Change the surface type from "Earth''s average" to "Asphalt" (don''t change
   the surface temperature until the instructions tell you to) and describe
   the changes in the local climate:
   * What is the albedo?
   * Report the changes in shortwave and longwave light absorbed by 
     the surface and going out to space.
   * How much does the total balance of heat change (i.e., how many W/m^2^ does
     the Earth lose or gain)?
   * Now, adjust the ground temperature until the Earth loses as much energy as 
     it gains. 
   * What is the new surface temperature? 
     How does it compare to the surface temperature in the default 
     configuration?

b) Change the surface albedo to "Concrete". Answer the same questions as in part
   (a).
   
c) In cities, streets and parking lots are usually paved with asphalt.
   Roofs of houses and other buildings are often covered with asphalt shingles 
   or black rubber-like compounds. 

   The results you got in this exercise represent covering _the entire planet_
   with asphalt or concrete, so they are far more extreme than you would get
   from only covering _part of a city_ with one material or the other, but 
   the general principle holds and in a city you would have much smaller 
   changes, but they would be in the same direction as you found here.

   How would the choice of using asphalt for roads, parking lots, and roofs in
   a large city affect the local climate in the city?
   Would using low-albedo materials, such as concrete for streets and parking 
   lots and light-colored polymers for the roofs of buildings have a benefit 
   for the people living in the city?

### Exercise 3: Clouds

First, run the RRTM model in its default configuration and note the surface
temperature and the albedo.

a) Change the low cloud fraction to 0.70 (70%)
   * Report the changes in shortwave and longwave light absorbed by the 
     surface and going out to space.
   * How much does the total balance of heat change 
     (i.e., how many W/m^2^ does the Earth lose or gain)?
   * Adjust the temperature to bring the heat flows back into balance.
   * How much did the temperature change?

b) Repeat part (a), but with the low cloud fraction set to 0 and the high-cloud
   fraction set to 0.20 (20%).
   
c) Use the `plot_heat_flows()` function to plot the heat flows for the 
   low clouds and the high clouds. Describe the changes you see in the upward 
   and downward heat flows (shortwave, longwave, and total) for the two cases.
   Which kind of cloud had the biggest effect on the outgoing radiation?
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          601,
                          'GEOCARB',
                          'Instructions for Lab #6: The Carbon Cycle',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_06/lab_06_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, cache = FALSE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
  knitr::opts_chunk$set(fig.width = 6, fig.height = 4)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

if (!dir.exists(data_dir)) dir.create(data_dir)

library(tidyverse)
library(knitr)
library(xml2)
library(scales)

theme_set(theme_bw(base_size = 15))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "geocarb.R"), chdir = T)
```
# Carbon Cycle

For the following exercises, you will use the GEOCARB model, 
which simulates the earth''s carbon cycle.

The GEOCARB model has two time periods: 

* First, it runs for 5 million years with the _"Spinup"_ settings in order to
  bring the carbon cycle and climate into a steady state. 
  Only the last 1000 years of the _spinup_ are saved.

* Then, at time zero, it abruptly changes the parameters to the _"Simulation"_
  settings and also dumps a "spike" of CO~2~ into the atmosphere and runs for 
  another 2 million years with the new parameters to see how the climate and
  carbon cycle adjust to the new parameters and the CO~2~ spike.

The quantities that are graphed in the online version of the model include:

`pCO2`
: is the concentration of CO~2~ in the atmosphere, in parts per million.

`WeatC`

: is the rate of CO~2~ being weathered from carbonate rocks and moved to the 
  oceans.

`BurC`

: is the rate of carbonate being converted into limestone and buried on the 
  ocean floor.

`WeatS`

: is the rate of SiO~2~ being weathered from silicate rocks and moved to the 
  oceans.

`Degas`

: is the rate at which CO~2~ is released to the atmosphere by volcanic activity

`tCO2`

: is the total amount of CO~2~ dissolved in the ocean, adding all of its forms:
  $$ \ce{\text{tco2} = [CO2] + [H2CO3] + [HCO3-] + [CO3^{2-}]}. $$

`alk`

: is the ocean alkalinity: the total amount of acid ($\ce{H+}$) necessary to
  neutralize the carbonate and bicarbonate in the ocean. The detailed definition
  is complicated, but to a good approximation, 
  $\ce{\text{alk} = [HCO3-] + 2 [CO3^{2-}]}$. 
  This is not crucial for this lab.

`CO3`
  
: is the concentration of dissolved carbonate ($\ce{CO3^{2-}}$) in the ocean,
  in moles per cubic meter.

`d13Cocn`

: is the change in the fraction of the carbon-13 ($\ce{^{13}C}$) isotope, 
  relative to the more common carbon-12  ($\ce{^{12}C}$) isotope, in the 
  various forms of carbon dissolved in the ocean water.

`d13Catm`

: is the change in the fraction of $\ce{^{13}C}$, 
  relative to $\ce{^{12}C}$ in atmospheric CO~2~.

`Tatm`

: is the average air temperature.

`Tocn`

: is the average temperature of ocean water.


## Running the GEOCARB model from R

I have provided functions for running the GEOCARB model from R:

To run the model:
``` r
run_geocarb(co2_spike, filename, degas_spinup, degas_sim,
            plants_spinup, plants_sim, land_area_spinup, land_area_sim,
            delta_t2x, million_years_ago, mean_latitude_continents)
```

You need to specify `co2_spike` (the spike in CO~2~ at time zero, measured in
billions of tons of carbon).

The other parameters will take default values if you don''t specify them,
but you can override those defaults by giving the parameters a value.

The arguments to the function are:

`filename`
: an optional file to save the results of the run to. You can read them back
  in using the `read_geocarb()` function:
  ``` r
  run_geocarb(spike = 1000, filename = "test_run.txt")
  data = read_geocarb("test_run.txt")
  ```

`degas_spinup` and `degas_sim` 
: the rates of CO~2~ degassing from volcanoes for the spinup and simulation 
  phases, in trillions of molecules per year.

`plants_spinup` and `plants_sim` 
: `TRUE` or `FALSE` values for whether to include the role of plants in 
  weathering (their roots speed up weathering by making soil more permeable 
  and by releasing CO~2~ into the soil), and `land_area` is the total area of 
  dry land, relative to today. 

`land_area_spinup` and `land_area_sim`
: The amount of land area, compared to today (1.0 means the same amount of
  land as today).

`delta_t2x`
: The climate sensitivity (the amount warming for each time CO~2~ is 
  doubled), in degrees Celsius.

`million_years_ago`
: Simulate past climates when the sun was not as bright as today.
  The value of this variable is how many million years ago the year zero of
  the simulation should be.
  This is not currently working because of a bug in the web version of 
  GEOCARB.

`mean_latitude_continents` 
: The mean latitude, in degrees, of the continents.
  
The default values are: `degas` = 7.5, `plants` = `TRUE`, and `land_area` = 1
for both the spinup and the simulation. 

The default value for `delta_t2x` is 3.0, `million_years_ago` is 0,
and `mean_latitude_continents` is 30, which corresponds to today''s world.

`mean_latitude_continents` and `land_area` allow you to explore conditions in
earth''s past, where the continents had different areas and were located in
different parts of the world. 

`million_years_ago` is meant to allow you to explore how the silicate weathering
thermostat worked in earth''s past, when the sun was a lot less intense than it
is today. However, this part of the model is not working now.

After you run `run_geocarb`, you would read the data in with
`read_geocarb(filename)`. This function will return a data frame with the columns
`year`, `co2_total`, `co2_atmos`, `alkalinity_ocean`, 
`delta_13C_ocean`, `delta_13C_atmos`, `carbonate_ocean`, 
`carbonate_weathering`, `silicate_weathering`, `total_weathering`,
`carbon_burial`, `degassing_rate`, `temp_atmos`, and `temp_ocean`.

## Refresher on Plotting Several Variables

You may want to go back to the documentation for Lab #2 and refresh your 
memory about the `pivot_longer()` function for manipulating data frames and 
tibbles, and the different ways we can use `ggplot` to plot several variables
on the same plot.

Suppose you have a tibble with columns `time`, `foo` and `bar`,
as shown below:

```{r pivot_example}
df = tibble(time = seq(100), foo = -1 + 0.1 * time - 0.001 * time^2, 
            bar = sin(time / 10))
kable(head(df), digits = 2)
```

Now, suppose you want to plot `foo` and `bar` on the same graph.
You can do 
```{r example-plot}
ggplot(df, aes(x = time)) + geom_line(aes(y = foo), color = "darkred") +
  geom_line(aes(y = bar), color = "darkblue")
```
But it is more elegant to write
```{r example-pivot}
df_tidy = pivot_longer(df, cols = -time, names_to = "variable", 
                       values_to = "value")
kable(head(df_tidy))
```

Now you can plot this:
```{r example_tidy_plot}
ggplot(df_tidy, aes(x = time, y = value, color = variable)) + geom_line() +
         scale_color_manual(values = c(foo = "darkred", bar = "darkblue"))
```

And you can put this all together in a single expression using pipes:
```{r example_piped_tidy_plot}
pivot_longer(df, cols = -time, names_to = "variable", 
             values_to = "value") %>%
  ggplot(aes(x = time, y = value, color = variable)) + geom_line() +
  scale_color_manual(values = c(foo = "darkred", bar = "darkblue"))
```

## Modifying the Axes of a Plot

Sometimes you have a lot of data and you just want to plot a small part of it.
Consider the following GEOCARB model run:
```{r geocarb-axes-example}
geocarb_data = run_geocarb(1000)
ggplot(geocarb_data, aes(x = year, y = co2_atmos)) + geom_line() +
  labs(x = "Year", y = "CO2")
```

This shows us all 2 million years of the model run, but we can''t see the detail
of what''s happening near year zero. There are several ways we can zoom our plot
in to look only at the region near year zero:

1. Use the `xlim` and `ylim` functions to set limits:
   ```{r xlim-example, warning=FALSE}
   ggplot(geocarb_data, aes(x = year, y = co2_atmos)) + geom_line() + 
     xlim(-500, 1000) + labs(x = "Year", y = "CO2")
   ```

   If you only want to change one limit, and leave the other at its default,
   you can put `NA` for the limit you want to leave alone:

   ```{r xlim-example-2, warning=FALSE}
   ggplot(geocarb_data, aes(x = year, y = co2_atmos)) + geom_line() + 
     xlim(NA, 1000) + labs(x = "Year", y = "CO2")
   ```


2. Use the `scale_x_continuous` and `scale_y_continuous` functions
   ```{r scale-example, warning=FALSE}
   ggplot(geocarb_data, aes(x = year, y = co2_atmos)) + geom_line() + 
     scale_x_continuous(limits = c(NA, 1E4), labels = label_comma()) +
     labs(x = "Year", y = "CO2")
   ```

   Using the `scale_x_continuous` and `scale_y_continuous` functions lets you 
   also modify the way numbers are formatted on the axis.
   Here, I used the `label_comma()` function to insert commas in the thousands
   and millions places. Other label commands include `label_percent`.
   You can read more about these at the web page for the `scales` package.

3. Another approach to limiting the extent of the plot is to filter the 
   data before you call `ggplot`
   ```{r filter-example, warning=FALSE}
   geocarb_data %>% filter(year >= -500, year <= 1000) %>%
     ggplot(aes(x = year, y = co2_atmos)) + geom_line() + 
     labs(x = "Year", y = "CO2")
   ```

# Exercises for Lab #6

## Exercise 1: Weathering as a Function of CO~2~

In the steady state, the rate of weathering must balance the rate of CO~2~
degassing from the Earth, from volcanoes and deep-sea vents. 

Write this exercise up as a discussion of what happens when the rate of volcanic
degassing changes. This rate has changed many times in Earth''s history.

* Discuss how CO~2~ and temperature change both in the first thousand years
  after the rate of degassing changes, and also in the longer term, over the
  course of one or two million years.
* Discuss what causes the amount of CO~2~ in the atmosphere to stabilize after
  the degassing rate changes.
* Discuss how the size of the change in degassing rage affects the amount of 
  change in CO~2~ and temperature between the original climate and where they 
  finally stabilize with the new degassing rate.
* Explain the role of the silicate weathering thermostat in stabilizing the 
  amount of CO~2~, and what determines the final stable value of CO~2~.
  
### Details:

Run a simulation with `co2_spike` set to zero, and set the model to increase
the degassing rate at time zero (i.e., set `degas_sim` to a higher value than
`degas_spinup`). Leave `degas_spinup` at 7.5 and start out by setting 
`degas_sim = 10`.

a) Does an increase in CO~2~ degassing drive atmospheric CO~2~ up or down?
   How long does it take for CO~2~ to stabilize after the degassing increases 
   at time zero?
   
   For the purposes of this exercise, consider that CO~2~ has stabilized when
   the rate of change in `co2_atmos` for a time-step in the model is less 
   `r format_md(2E-5, digits = 0, format = "scientific")` ppm per year.
   
   **Hint:** Look back to the discussion of the `lag()` function in Lab #2. 
   The expression `co2_atmos - lag(co2_atmos)` will tell you the change in
   `co2_atmos` from the previous row to the current one in a tibble or 
   data frame, and the expression `year - lag(year)` will tell you the number
   of years that passed from the previous row to the current one.
   Then `(co2_atmos - lag(co2_atmos)) / (year - lag(year))` will tell you the
   rate of change of CO~2~, in ppm per year.
   
   If you have a tibble of data from a GEOCARB run, you can use the `mutate` 
   function to add a new column to your tibble, and then use the `filter` 
   function to select only the rows where `year > 0` (so you''re looking after
   the change in degassing) and where the rate of change of CO~2~ is less than
   `r format_md(2E-5, digits = 0, format = "scientific")` ppm per year.
   Remember that in R, you would write 
   `r format_md(2E-5, digits = 0, format = "scientific")` as `2E-5` or `2.0E-5`.

b) Check that the model balances silicate weathering against CO~2~ degassing
   when the CO~2~ in the atmosphere stabilizes.
   Use `ggplot` to make a graph illustrating this balance.
   What is causing the silicate weathering rate to change?
   
   **Hint:** This is a good place to use the `pivot_longer` function to make a 
   plot with two different variables, as I described above.

c) Repeat this run with a range of degassing values for the simulation phase
   and make a table or a graph of the equilibrium CO~2~ concentration versus 
   the degassing rate.

   Does the weathering rate always balance the degassing rate when the CO~2~
   concentration stabilizes?

d) Take the last row from each of the the simulations you ran in part (c). 
   This gives the values of all the variables 1.95 million years after the
   simulation began. 
   Combine these into a single data frame, or tibble, and plot the 
   silicate weathering rate versus the atmospheric CO~2~ concentration.
   What does the relationship look like?
   
e) Take the same data you used in part (d) and plot the silicate weathering
   rate versus the atmospheric temperature. 
   
   What does this relationship look like?

## Exercise 2: The long-term fate of fossil fuel CO~2~

Write this exercise up as a discussion of what happens if 2000 billion tons of
carbon is released into the atmosphere as CO~2~.
What do you learn from GEOCARB about where that CO~2~ ends up and how the earth
removes it from the atmosphere. Discuss how long the removal takes and what
the implications are for how we should think about CO~2~ in comparison to 
other kinds of pollution.

### Details

Use the GEOCARB model in its default configuration.

a) Run the model with no CO~2~ spike at the transition. What happens to 
   the weathering rates (Silicate, Carbonate, and Total) at the transition
   from spinup to simulation (i.e., year zero)?

   This is not a trick question. The answer should be obvious and simple.

b) Now set the CO~2~ spike at the transition to 2000 
   (2000 billion tons of carbon). 

   * What happens to the weathering at the transition? How does weathering
     change over time after the transition?
    
   * How long does it take for CO~2~ to roughly stabilize (stop changing)?

c) In the experiment from (b), how do the rates of total weathering and 
   carbonate burial change over time? 
   
   * Plot what happens from shortly before the transition until 10,000
     years afterward.
     
     **Hint:** See the discussion at the beginning of the lab instructions
     where I describe how to plot only a certain range of the data.

   * Now plot the carbon burial and total weathering for the range
     1 million years to 2 million years. How do the two rates compare?


## Exercise 3 (Graduate Students Only): How the Land Plants Changed the Carbon Cycle

The roots of plants accelerate weathering by two processes: First, as they 
grow, they open up the soil, making it more permeable to air and water.
Second, the roots pump CO~2~ down into the soil.

Write this exercise up as a report on the effects plants have on atmospheric
CO~2~ concentrations. If you turn off the plants during the spinup and then
turn them on during the simulation, this simulates vascular land plants 
(plants with roots, stems, etc.) suddenly appearing in a world where they did
not previously exist. How would this have affected the global carbon cycle and 
the composition of the atmosphere?

### Details

Run a simulation with no CO~2~ spike at the transition and with no plants in 
the spinup, but with plants present in the simulation.

a) What happens to the rate of weathering when plants are introduced in year zero? 
Does it go up or down right after the transition? WHat happens later on?

b) What happens to atmospheric CO~2~, and why?

c) When the CO~2~ concentration changes, where does the carbon go?

'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          701,
                          'PRE_PROJECT',
                          'Preparing for Independent Project',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_07/lab_07_instructions.pdf',
                          NULL,
                          '
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(lubridate)

topic_approval_date = ymd("2021-03-12")
due_date = ymd_hms("2021-04-01 23:59:00", tz="America/Chicago")

date_fmt = function(d) {
  strftime(d, format = "%b. %e") %>% str_trim() %>% str_replace_all(" +", " ")
}

time_fmt = function(d) {
  strftime(d, format = "%l:%M %p") %>% str_trim() %>% str_replace_all(" +", " ")
}
```

# Introduction

You have done several structured labs that provided opportunities to learn 
about R, RMarkdown, and several different aspects of climate science (data 
analysis and several computer models).  
For the next few weeks, you will have a chance to utilize the skills you have 
learned thus far in lab to take one of the previous labs you have worked on 
and dig more deeply into the details, and develop it into a formal report about 
a particular aspect of climate change. 
This series of labs consists of creating a detailed written lab report in 
RMarkdown. 

For this project, you will choose a lab you worked on before and explore
it more deeply, doing some library research on the topic and connecting 
that with your computational analysis. Your analysis should begin with the 
work you did for the original lab, but dig into the details of how you draw
conclusions from the data you analyzed.

## Solo or Team Projects

You may choose to do this project individually or with a partner as a team 
effort. If you work with a partner, you may work together to design the 
question, obtain and analyze data, and write a report together. 
We expect teams to include a note in the report that indicates which
member contributed what to the report (this does not need to be super detailed
and can say, "Alice and Bob designed the experiment together. Bob wrote the
code to run the models. Alice wrote the code for the data analysis. 
Alice and Bob contributed equally to writing the discussion and conclusions.")
This is similar to the requirement at many research journals that 
co-authored papers include a statement of what each author contributed.

## Choosing a Topic

**By the end of the day on `r date_fmt(topic_approval_date)` you need to
submit a proposed topic for your project on Brightspace.** 
This proposal only needs to be a couple of paragraphs and it should describe
what you want to investigate and what kinds of data you will need to study 
it (e.g., model output or data that you will download from an online climate
data archive).

For undergraduates, we recommend that you choose a topic from one of the 
exercises that you did in labs #2--6 and think of a way to go a little more 
deeply into the topic of the questions that exercise asked. What I am looking
for is not for you to investigate a brand new question or research topic, 
but for you to focus on the details of the exertise you did and think about 
how to present it to the reader, explaining in clear prose how you used data
to answer a question about the climate.

For graduate students, we expect you to try something more ambitious than just 
simple extensions of the questions from the lab exercises, but it is still fine 
to take one of the lab exercises as a starting point.

If you want to do something really different than what we have done previously 
in lab, that is fine. But check with one of us to make sure your plan is 
appropriate and feasible (we don''t want you to bite off more than you can chew).
Just writing up the details on one of the lab exercises should be plenty of 
work.

**Be creative!** Now is the time to really explore parts of the class that you 
have found interesting and present your findings in a unique, exciting way. 

# Writen Report (Due `r date_fmt(due_date)`)

Your report should be comprehensive, yet not overly verbose. One recommendation 
for achieving this is to create an outline to organize your thoughts before 
initializing writing and data analysis. The report needs to include the 
following components:

* Introduction

  * _Provide background information that frames the problem you are 
    addressing (e.g., an exercise from one of the previous labe). 
    At the end of the introduction, the reader should understand 
    exactly **what the problem is** that you are addressing and why that 
    problem is **interesting** and **relevant** to the climate system._
    
* Methods

  * _Describe the methods for answering your question. The methods section 
    should be written such that someone who doesn''t know about your 
    project could follow your steps and recreate your results._

  * This section should contain the R code you use to do the analysis:
  
    * Identifying the sources of data: what data did you use (observations,
      model output, etc.), and why is that data useful for addressing your
      research problem.

    + How did you get your data into R? Did you download from the internet, 
      read it in from files on your computer, run models, etc.

    + How did you process your data to clean it up? Describe what your
      R code did to manipulate the data to make it easier to analyze. 
      Think of how you used functions like `mutate`, `gather`, 
      `summarize`, etc. to convert the data into a useful form.

    + How did you analyze data? What did you do to analyze the data, such 
      as generating descriptive statistics like the mean or standard 
      deviation, fitting linear models to get slopes (rates of change), etc.
        
  * The R code does not speak for itself, so describe what you did in words.
    Don''t tell the reader every little detail, but present a clear overview 
    of the big picture of how you obtained, cleaned, and analyzed your data.
    If there were particular challenges or difficulties, briefly describe 
    them.

* Results

  * _Describe the results of your analyses. Include apropriate charts, 
    tables, graphs, and other quantitative representations of data._ 

  * This section should have R code for making graphs, tables, etc.

* Conclusions/Discussion

  * _Discuss how you drew conclusions from your analysis._
  
    * What conclusions can you draw from your results about the research 
      question or questions?

    * How does the data (and your analysis of it) support those conclusions?

* Works Cited

  * _Include a works cited section to credit the research and thoughts that 
    are not your own. Be sure to use citations throughout your report where 
    necessary._

  * I will post a separate document that explains how to do citations and 
    bibliographies in RMarkdown.

Final reports are to be pushed to your Lab 8 Github repository 
_no later than `r time_fmt(due_date)` on `r date_fmt(due_date)`_. 
**You must push the .Rmd file *and* the knitted PDF** to Github. 
A portion of your final report grade will reflect effective use of 
R/RMarkdown/Github, the clarity and succinctness of your writing, 
visual representations of data, appropriate discussion of results, 
and insights into future analyses. 
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          801,
                          'PROJECT',
                          'Instructrions for Writing Up Lab Results',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_08/lab_08_instructions.pdf',
                          NULL,
                          '
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(lubridate)

topic_approval_date = ymd("2021-03-12")
due_date = ymd_hms("2021-04-01 23:59:00", tz="America/Chicago")

date_fmt = function(d) {
  strftime(d, format = "%b. %e") %>% str_trim() %>% str_replace_all(" +", " ")
}

time_fmt = function(d) {
  strftime(d, format = "%l:%M %p") %>% str_trim() %>% str_replace_all(" +", " ")
}
```

# Introduction

You have done several structured labs that provided opportunities to learn 
about R, RMarkdown, and several different aspects of climate science (data 
analysis and several computer models).  
For the next few weeks, you will have a chance to utilize the skills you have 
learned thus far in lab to take one of the previous labs you have worked on 
and dig more deeply into the details, and develop it into a formal report about 
a particular aspect of climate change. 
This series of labs consists of creating a detailed written lab report in 
RMarkdown. 

For this project, you will choose a lab you worked on before and explore
it more deeply, doing some library research on the topic and connecting 
that with your computational analysis. Your analysis should begin with the 
work you did for the original lab, but dig into the details of how you draw
conclusions from the data you analyzed.

## Solo or Team Projects

You may choose to do this project individually or with a partner as a team 
effort. If you work with a partner, you may work together to design the 
question, obtain and analyze data, and write a report together. 
We expect teams to include a note in the report that indicates which
member contributed what to the report (this does not need to be super detailed
and can say, "Alice and Bob designed the experiment together. Bob wrote the
code to run the models. Alice wrote the code for the data analysis. 
Alice and Bob contributed equally to writing the discussion and conclusions.")
This is similar to the requirement at many research journals that 
co-authored papers include a statement of what each author contributed.

## Choosing a Topic

For undergraduates, we recommend that you choose a topic from one of the 
exercises that you did in labs #2--6 and think of a way to go a little more 
deeply into the topic of the questions that exercise asked. What I am looking
for is not for you to investigate a brand new question or research topic, 
but for you to focus on the details of the exertise you did and think about 
how to present it to the reader, explaining in clear prose how you used data
to answer a question about the climate.

For graduate students, we expect you to try something more ambitious than just 
simple extensions of the questions from the lab exercises, but it is still fine 
to take one of the lab exercises as a starting point.

If you want to do something really different than what we have done previously 
in lab, that is fine. But check with one of us to make sure your plan is 
appropriate and feasible (we don''t want you to bite off more than you can chew).
Just writing up the details on one of the lab exercises should be plenty of 
work.

**Be creative!** Now is the time to really explore parts of the class that you 
have found interesting and present your findings in a unique, exciting way. 

# Writen Report (Due `r date_fmt(due_date)`)

Your report should be comprehensive, yet not overly verbose. One recommendation 
for achieving this is to create an outline to organize your thoughts before 
initializing writing and data analysis. The report needs to include the 
following components:

* Introduction

  * _Provide background information that frames the problem you are 
    addressing (e.g., an exercise from one of the previous labe). 
    At the end of the introduction, the reader should understand 
    exactly **what the problem is** that you are addressing and why that 
    problem is **interesting** and **relevant** to the climate system._
    
* Methods

  * _Describe the methods for answering your question. The methods section 
    should be written such that someone who doesn''t know about your 
    project could follow your steps and recreate your results._

  * This section should contain the R code you use to do the analysis:
  
    * Identifying the sources of data: what data did you use (observations,
      model output, etc.), and why is that data useful for addressing your
      research problem.

    + How did you get your data into R? Did you download from the internet, 
      read it in from files on your computer, run models, etc.

    + How did you process your data to clean it up? Describe what your
      R code did to manipulate the data to make it easier to analyze. 
      Think of how you used functions like `mutate`, `gather`, 
      `summarize`, etc. to convert the data into a useful form.

    + How did you analyze data? What did you do to analyze the data, such 
      as generating descriptive statistics like the mean or standard 
      deviation, fitting linear models to get slopes (rates of change), etc.
        
  * The R code does not speak for itself, so describe what you did in words.
    Don''t tell the reader every little detail, but present a clear overview 
    of the big picture of how you obtained, cleaned, and analyzed your data.
    If there were particular challenges or difficulties, briefly describe 
    them.

* Results

  * _Describe the results of your analyses. Include apropriate charts, 
    tables, graphs, and other quantitative representations of data._ 

  * This section should have R code for making graphs, tables, etc.

* Conclusions/Discussion

  * _Discuss how you drew conclusions from your analysis._
  
    * What conclusions can you draw from your results about the research 
      question or questions?

    * How does the data (and your analysis of it) support those conclusions?

* Works Cited

  * _Include a works cited section to credit the research and thoughts that 
    are not your own. Be sure to use citations throughout your report where 
    necessary._

  * I will post a separate document that explains how to do citations and 
    bibliographies in RMarkdown.

Final reports are to be pushed to your Lab 8 Github repository 
_no later than `r time_fmt(due_date)` on `r date_fmt(due_date)`_. 
**You must push the .Rmd file *and* the knitted PDF** to Github. 
A portion of your final report grade will reflect effective use of 
R/RMarkdown/Github, the clarity and succinctness of your writing, 
visual representations of data, appropriate discussion of results, 
and insights into future analyses. 
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          802,
                          'PROJECT',
                          'Citations and Bibliographies',
                          'Jonathan Gilligan',
                          'citations_bibliographies',
                          '/files/lab_docs/lab_08/citations_bibliographies.pdf',
                          'lab-08.bib',
                          '
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Introduction


The simplest way to do citations and bibliographies in RMarkdown is simply
to use author-date citation like this:

> The Urey reaction (Archer 2011, p. 98) shows how silicate weathering can
> convert atmospheric carbon (in the form of CO~2~) into rocks at the bottom
> of the ocean (in the form of CaCO~3~).

And then just manually enter a bibliography at the end of the document:

> * Archer, David (2011). _Global Warming: Understanding the Forecast_
>   (Wiley)
>
> * Rogelj, Joeri, McCollum, David L., Reisinger, Andy, Meinshausen, Malte,
>   and Riahi, Keywan (2013). 
>   Probabilistic cost estimates for climate change mitigation,
>   _Nature_ **493**, 79--83.

## Getting fancy with citations and bibliographies

However, if you want to experiment with something fancier, 
RMarkdown has the ability to automatically format bibliographic information and
manage citations. Using this is a little complicated because you need to have
file with your bibliographic information entered in a certain format. 

Everything that follows describes how to do citations and bibliographies
with RMarkdown using bibliography files. If you wish, you may ignore the
rest of this document and manage your citations and bibliographies manually,
as described at the top of this file.

RMarkdown can work with a wide variety of file formats for bibliographies, 
including those produced by many common software packages, such as 
EndNote, Zotero, and Mendeley.
You can find further documentation about bibliographies and citations
at <http://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html>


# Bibliography Files

RMarkdown reads bibliography entries from an external bibliography file.
To specify the bibloography file, you would 
just add a line to the header of your RMarkdown document: for instance,

```
---
title: "My Lab Report"
subtitle: "EES 3310: Global Climate Change"
author: "Jonathan Gilligan"
date: "Sept. 27, 2018"
bibliography: "my-bibliography.bib"
---
```

RMarkdown can figure out the kind of bibliography file it is from the file 
extension (`.bib`, etc.). I have provided an example BibTeX file, `lab-05.bib` 
that has examples of entries.

For the examples here, I will work with a format called BibTeX because most
common software packages can export bibliographies in BibTeX format, and 
Google Scholar can also provide citations in BibTeX format that you can copy 
and past from a browser. BibTeX files are plain text and you can edit them in
RStudio.[^1]

[^1]: If you will use BibTeX files often, I recommend a free tool
called JabRef, which lets you edit the information in a BibTeX file
in a graphical interface without having to worry about the details of the 
BibTeX format. You can get JabRef from <http://www.jabref.org/>.
It runs on Windows, MacOS, and Linux.

If you prefer, you can also use bibliographic software, such as 
Zotero,[^2] Mendeley, or EndNote, and export your bibliography in
RIS format (as a `.ris` file), BibTeX format (as a `.bib` file),
or BibLaTeX format (as a `.biblatex` file).
RMarkdown claims to support the following file types as well, but I 
have not tried them, so I would not be able to provide much help if you
try them and run into trouble.

[^2]: I recommend Zotero, which is a free, easy to use, and very powerful
bibliography tool that supports Windows, MacOS, and Linux, and has
add-ins that integrate very nicely with most browsers (Chrome, Firefox, Safari, 
and Opera) and also has a good add-in to let you use it in 
Microsoft Word. Zotero has hundreds of bibliography styles for different 
uses, including standard ones, such as Chicago, APA, and MLS.
You can get Zotero from <https://zotero.org>. One reason I like Zotero 
enormously is that the web browser add-in creates an icon in the browser''s 
toolbar that recognizes when you are reading an article in a scholarly journal,
a newspaper, a magazine, a blog, etc., and you can just click on the icon to 
import whatever you''re reading in your browser into your bibliography database.
You can also sign up for a free account on 
<https://www.zotero.org/user/register>
that will let you back up your bibliography database to the cloud, synchronize
your bibliographies across multiple computers, and share bibliographies with 
other people.

\clearpage

| Format | File extension |
|:-------|:--------------|
| EndNote | `.enl` |
| EndNote XML | `.xml` |
| RIS | `.ris` |
| BibTeX | `.bib` |
| ISI | `.wos` |
| MEDLINE | `.medline` |
| MODS | `.mods` |
| Copac | `.copac` |
| JSON citeproc | `.json` |

You can export files in many of these formats (especially RIS and BibTeX) from
most bibliographic software packages, such as EndNote, Mendeley, and Zotero.

# Citations

In your document, you can cite books, articles, etc. by the identifiers, or 
_keys_, that appear in the database.[^3] 
If you open the bibliography file in RStudio, you will see that all references
begin with a reference type, starting with `@` (e.g., `@book` for a book,
`@article` for an article in a journal, etc.) and then all the data for the 
reference is contained between a pair of braces `{...}`.
The first thing after the opening brace will be the citation key,
followed by a comma:
```
@book{archer.forecast.2011,
  title = {Global Warming: Understanding the Forecast},
  author = {Archer, David},
  publisher = {Wiley},
  address = {Hoboken, NJ},
  year = {2011},
  edition = {2nd}
}

@article{rogelj2013probabilistic,
  title={Probabilistic cost estimates for climate change mitigation},
  author={Rogelj, Joeri and McCollum, David L and Reisinger, Andy and 
          Meinshausen, Malte and Riahi, Keywan},
  journal={Nature},
  volume={493},
  pages={79--83},
  year={2013},
}
```
The citation keys for these two references are 
`archer.forecast.2011` and `rogelj2013probabilistic`.

[^3]: In BibTeX files, the identifiers can
be any sequence of letters, numbers, and any of the following punctuation:
''`_`'', ''`.`'', ''`:`'', and ''`;`''.


I can insert citations in an RMarkdown document by putting them inside
square brackets (`[...]`) and putting an `@` in front of the citation key:
`[@archer.forecast.2011]` will become [@archer.forecast.2011].
I can cite a specific page with 
`[@archer.forecast.2011, p. 143]`, which becomes [@archer.forecast.2011, p. 143].
I can also add some preceding text: 

```
[See, e.g., @archer.forecast.2011, pp. 75--78]
```
becomes
[See, e.g., @archer.forecast.2011, pp. 75--78].

I can cite multiple authors: 
```
[@archer.forecast.2011, @nordhaus.casino.2013, and @pielke.climate.fix.2010].
```
becomes

> [@archer.forecast.2011, @nordhaus.casino.2013, and @pielke.climate.fix.2010].

If I want to omit the name of the author (for instance, if I have named him or her
earlier in the text), I can put a minus sign in front of the `@`:
```
Archer describes the water-vapor feedback [-@archer.forecast.2011].
```
becomes

> Archer describes the water-vapor feedback [-@archer.forecast.2011].
    
I can also put citations in-line by omitting the square brackets:

```
@jaeger.adams.fallacy.2008 argue that focusing only on the economic 
impacts of climate change is misleading.
```
becomes

> @jaeger.adams.fallacy.2008 argue that focusing only on the economic 
> impacts of climate change is misleading.

and I can also add page numbers or other text to follow the year in the citation
by putting them in square brackets after an in-text citation:
```
@rogelj2013probabilistic [Fig. 2, p. 81] show that if political inaction
causes even modest delays in reducing carbon emissions, it can dramatically 
increase the cost of mitigating climate change.
```
becomes

> @rogelj2013probabilistic [Fig. 2, p. 81] show that if political inaction
> causes even modest delays in reducing carbon emissions, it can dramatically 
> increase the cost of mitigating climate change.

# The Bibliography

RMarkdown will insert a formatted bibliography at the end of your document.
It will not automatically put a section heading, so you probably want to put
a section heading called "Bibliography" or "Works Cited" to set this off
from your text. 

At the bottom of this `.Rmd` file, I have inserted the line
```
# References
```

## Adding entries to the bibliography file

If you want to add new references to the bibliography file, you can 
open `lab-08.bib` in RStudio and edit it by hand, but that may be difficult
and confusing, so I would recommend one of three options:

* From Google Scholar, you can export a BibTeX entry: 

    1. Open `lab-08.bib` in RStudio and then open a web browser, go to 
       <https://scholar.google.com> and search for your reference.

    2. When you find the reference you want in Google Scholar, and click on the 
       "Cite" button, as shown below:

        ![Google Scholar search page. Click on the "Cite" button, as shown here.](_images/lab_08/scholar_1.png)\

    3. Click on "BibTeX" at the bottom of the citation page, as shown below:

        ![Google Scholar citation page: Click on "BibTeX"](_images/lab_08/scholar_2.png)\

    4. You will see something like this:

       ```
       @article{rogelj2012global,
       title={Global warming under old and new scenarios using IPCC climate 
              sensitivity range estimates},
       author={Rogelj, Joeri and Meinshausen, Malte and Knutti, Reto},
       journal={Nature climate change},
       volume={2},
       number={4},
       pages={248},
       year={2012},
       publisher={Nature Publishing Group}
       }
       ```

       Copy the entry and paste it into `lab-08.bib` in RStudio.

       In this entry, `rogelj2012global` is the key you would use
       for citing and the other fields are pretty much self-explanatory.

       You can export in other formats that are used by other bibliographic
       software, but these are more cryptic and confusing to use. 
       
       For instance, if you clicked on "EndNote", you would see something like 
       this:
       ```
       %0 Journal Article
       %T Global warming under old and new scenarios using IPCC climate 
          sensitivity range estimates
       %A Rogelj, Joeri
       %A Meinshausen, Malte
       %A Knutti, Reto
       %J Nature climate change
       %V 2
       %N 4
       %P 248-253
       %@ 1758-6798
       %D 2012
       %I Nature Publishing Group
       ```
       
       and if you clicked on "RefMan", you would see something like this:
       ```
       TY  - JOUR
       T1  - Global warming under old and new scenarios using IPCC climate 
             sensitivity range estimates
       A1  - Rogelj, Joeri
       A1  - Meinshausen, Malte
       A1  - Knutti, Reto
       JO  - Nature climate change
       VL  - 2
       IS  - 4
       SP  - 248
       EP  - 253
       SN  - 1758-6798
       Y1  - 2012
       PB  - Nature Publishing Group
       ER  - 
       ```
       
       I find the BibTeX (`.bib`) format easier to work with because the
       data has names that make sense to people, like "journal" instead of
       "`JO`" or "`%J`".

* If you have a bibliographic program like Zotero, Mendeley, or EndNote, 
  export the references you want as BibTeX files.
   
     For instance, in Zotero,[^5] highlight the references, right click, and from 
     the context menu choose "Export Items..."; then select "BibTeX" format, 
     click "OK" and save the exported items to a file.)
    
     Next, open the file you just exported and `lab-05.bib` in RStudio and
     copy and past the references from the exported file into `lab-05.bib`.
     
* If you have JabRef[^6] installed on your computer, you open `lab-08.bib`,
  manually create a new bibliographic entry and fill in the relevant data.

[^5]: Zotero is free software that runs on Windows, MacOS, and Linux, and you
can download it from <https://zotero.org>

[^6]: JabRef is free software that runs on Windows, MacOS, and Linux and you can
download it from <https://jabref.org>.


# References

'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          901,
                          'DECARB_BOTTOM_UP',
                          'New Tools for Data Analysis',
                          'Jonathan Gilligan',
                          'new_tools',
                          '/files/lab_docs/lab_10/new_tools.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(broom)
library(magrittr)
library(kayadata)

theme_set(theme_bw())
```
# Some New Tools for Working with Data

There are two new tools we will use in working with data for this lab:

## Getting fancy with the pipe operator (`%>%`)

With the tidyverse, we often use the "pipe" operator `%>%` to send the
output from one function into the input of another function. In most cases,
this works very simply and it uses the output from the function on the
left as the first argument of the function on the right. 

For instance, the `filter` function selects certain rows in a data frame or
tibble. I will work here with examples from the built-in `storms` data
frame that lists a subset of hurricanes from the National Oceanic and 
Atmospheric Administration''s Atlantic hurricane database.
The data includes the positions and attributes of 198 tropical storms, measured
every six hours during the lifetime of the storm.

Let''s select Hurricane Katrina from 2005 (I specify the year because there
were two earlier Katrinas in 1981 and 1999; storm names are re-used 
periodically unless they are retired because a storm with that name becomes 
historically important).
```r
data(storms)
katrina = filter(storms, name == "Katrina", year == 2005)
```
and we can also do the same thing using the pipe operator like this:
```r
storms %>% filter(name == "Katrina", year == 2005)
```
What the pipe operator `%>%` does behind the scenes is take that output of
whatever is on the left (the data frame `storms`) and stick it in front
of the arguemnts for the function on the right so the two examples given
above are equivalent.

We have been usuing the pipe operator throughout the semester to combine 
functions. 
Suppose we want to `mutate` the `storms` data frame to add a new 
column `ts_area`
that is equal to `pi * (ts_diameter / 2)^2`, where `ts_diameter` is a column
in `storms` that corresponds to the diameter (in nautical miles) of the area 
in which winds are tropical storm strength or greater (36 knots), 
and then we want to select only the data where the tropical storm area is 
greater than 10,000 square nautical miles, and finally sort the data so the
rows of the data frame go from largest to smallest tropical storm area.
We can do that as follows:
```r
# First way
df1 = arrange(filter(mutate(storms, ts_area = pi * (ts_diameter / 2.0)^2), 
     ts_area > 10000), desc(ts_area))

# Second way, using a temporary variable
df2 = mutate(storms, ts_area = pi * (ts_diameter / 2.0)^2)
df2 = filter(df2, ts_area > 10000)
df2 = arrange(df2, desc(ts_area))

# Third way, using the pipe operator
df3 = storms %>% mutate(storms, ts_area = pi * (ts_diameter / 2.0)^2) %>%
     filter(ts_area > 10000) %>% arrange(desc(ts_area))
```
We use pipes because often they are simpler to understand. If we use the first
way in the example above, if we are combining many functions, nesting functions
inside other functions becomes very difficult to read and understand.
The second way, of using temporary variables is fine, but it can get confusing 
to have lots of variable names that we use only one time to pass data from
one function to another. The third way, using the pipe operator makes it easier
to understand how the data is moving through the processing pipeline.

But the way pipe operators work can sometimes get in the way of things we want
to do.

First, suppose that I want to send the results of a function into the second
or third argument of a subsequent function instead of the first argument?
We use the `lm` function to calculate the slope and intercept of a trend line
that best fits some data. The lm function expects the formula for the line
to fit to be the first argument and the data to be the second.

Suppose I want to examine hurricanes from  the year 2005 and look for a 
relationship between the air pressure in the eye and the wind speed,
but only during the time when they are classified as hurricanes.

I can do this as follows:
```r
hurricanes_2005 = storms %>% filter(status == "hurricane", year == 2005)
lin_fit = lm(wind ~ pressure, data = hurricanes_2005)
```
The `lm` function looks at the data given by the `data` argument and
then finds the best line that characterizes the linear relationship
`wind ~ pressure`, which means that the wind is a linear function of the
pressure (this would be the slope of a graph where `wind` is on the y-axis
and `pressure` is on the x-axis).

Suppose that I would like to pipe data from the `filter` function to the
`lm` function. I have a problem because the pipe operator would put the
output from `filter` as the first argument of the `lm` function, but in
`lm` the first argument is the formula and `data` is the second.
I can do this as follows:
```r
lin_fit2 = storms %>% filter(status == "hurricane", year == 2005) %>%
           lm(wind ~ pressure, data = .)
```
The pipe operator creates a new variable `.` (the period), which gets the
value of whatever is on the left of the operator. If I don''t use the `.`
in the function on the right, the pipe operator invisibly puts `.` in
the first argument so `foo(x) %>% bar(y, z)` is re-written behind the 
scenes to become
```r
. = foo(x)
bar(., y, z)
```
However, if I want to use the `.` somewhere else, I can do that explicitly
and when the pipe operator looks at the function on its right, it knows
not to stick the `.` in the first argument if I use `.` in the function
call. This, I could write `foo(y) %>% bar(x, ., z)` if I want to substitute
the output of `foo(y)` for the second argument of `bar`.

## Extracting columns from a data frame in a pipeline

If I just want to look at the names of the hurricanes from the `storms` data
frame, I can use the `$` operator:
```r
names = storms$name
```
But suppose that I want to filter the storms and then extract the names.
What are the names of category 5 hurricanes?
```r
cat_5 = storms %>% filter(category == 5)
names = cat_5$name
```
Suppose I want to do this without creating a variable `cat_5`?
I could try 
```r
# This will give an error
names = storms %>% filter(category == 5)$name
```
but it turns out that this doesn''t work because of the way the pipe operators
work.
To do this, I can use the `pull` function from the `tidyverse`:
```r
# This will work
names = storms %>% filter(category == 5) %>% pull(name)
```

This will be useful for what comes next.

## Tidying up results of statistical modeling

`lm` is one example of a lot of powerful functions in R that let you analyze
data by fitting models. A statistical model is an idealized functional relationship
between different attributes of the data (attributes are represented by columns
in a data frame). 
For instance, a linear model idealizes two columns in the data frame in terms
of a linear relationship. For instance `y~x` represents a model in which
$y = a + b x$. In fact, the data rarely lie exactly along a line, but 
the `lm` function will find the values for `a` and `b` that define the line
that best  relates _y_ to _x_ (specifically this will be the line such that
the minimizes the sum of the square of the errors between the actual _y_
and the line:
$\sum_i (y_i - (a + b x_i))^2$.

We will be using `lm` in this lab to find the rates of change of different
parameters in the Kaya identity. For that we want to examine the slopes of the
lines identified by `lm`. We can do that as follows for the slope that relates
wind speed to pressure for a hurricane.

First, let''s plot the two variables to see wether there''s an apparent 
relationship. 
Let''s look at hurricanes from 2005:

```{r plot_pressure_wind, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
storms %>% filter(status == "hurricane", year == 2005) %>%
  ggplot(aes(x = pressure, y = wind)) + geom_point(na.rm = T)
```

The data clearly doesn''t lie on a straight line, but there is a clear
relationship that lower pressures tend to go along with higher wind
speeds and higher pressures with lower wind speeds.

First, let''s review how we can fit a relationship between wind speed and 
pressure for hurricanes from 2005:
```r
lin_fit = storms %>% filter(status == "hurricane", year == 2005) %>%
           lm(wind ~ pressure, data = .)
```
But how can we get the slope out of the variable `lin_fit`?
Here we use the `broom` package, which gives us a `tidy` function
that will tidy up the results of statistical models and put them
into a nice data frame:

```{r tidy_fit_1, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
lin_fit = storms %>% filter(status == "hurricane", year == 2005) %>%
           lm(wind ~ pressure, data = .)
tidy(lin_fit)
```

Here, `term` tells us the parameter: `(Intercept)` is the intercept 
(_a_ in the formula above), and `pressure` is the slope with respect to the
pressure (_b_ in the formula above).
`estimate` is the estimate of the parameter (intercept or slope),
`std.error` is the uncertainty about the estimate of the parameter,
`statistic` and `p.value` are used for statistical hypothesis testing and we
will not use them so you can ignore them.

If I just want the slope, I can get that as follows:
```{r tidy_fit_2, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
lin_fit = storms %>% filter(status == "hurricane", year == 2005) %>%
           lm(wind ~ pressure, data = .)
slope = tidy(lin_fit) %>% filter(term == "pressure") %>% pull(estimate)
slope
```

Here, `filter` selects the row where term equals "pressure" and `pull(estimate)`
then selects the `estimate` column.

We can write this more compactly as follows:
```{r tidy_fit_3, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
slope = storms %>% 
           filter(status == "hurricane", year == 2005) %>%
           lm(wind ~ pressure, data = .) %>% 
           tidy() %>% 
           filter(term == "pressure") %>% pull(estimate)
slope
```

# Writing functions

If you are going to do the same calculation many times in R it is often useful
to define a function that performs that calculation and then you can simply
call the function whenever you want to do the calculation with new values.

For instance, in the "Growth Rates and Trends" section of the assignment
for the bottom-up decarbonization lab, we see that if we have a quantity
_q_ that is growing at a steady percentage rate $r_q$ each year and we know
the value in one year $y_0$ and want to predict what the value will be at
a future year $y$, we can calculate this as follows:
$$ q(y) = q(y_0) \times \exp(r_q \times (y - y_0)). $$
We can write this as an R function that we can call for different quantities and
years:
```{r growth_function, echo=TRUE, include=TRUE}
growth = function(q_0, rate, start_year, end_year) {
  q_0 * exp(rate * (end_year - start_year))
}
```
A function definition has three parts:
First we have the name of the function (`growth`), then we have the word
`function`, followed by the arguments that the user must supply to the function
`(q_0, rate, start_year, end_year)`, and then the body of the function, between
curly braces `{ ... }`.
When you call the function, it executes all of the code between the curly braces
and returns the last value calculated before the closing brace.
Thus, we can call the function like this to estimate the world population 
in 2050
```{r call_function, echo=TRUE, include=TRUE}
P_2017 = 7.53 # world population was 7.53 billion
r_P = 0.0141  # growth rate is 1.41% per yer
P_2050 = growth(q_0 = P_2017, rate = r_P, start_year = 2017, end_year = 2050)
P_2050
```
If you don''t specify the name of the parameter, the function fills them out in
order, so we could also write 
```{r call_function_2, echo=TRUE, include=TRUE}
P_2017 = 7.53 # world population was 7.53 billion
r_P = 0.0141  # growth rate is 1.41% per yer
P_2050 = growth(P_2017, r_P, 2017, 2050)
P_2050
```

# `kayadata`: an R package for analyzing Kaya-identity data

You can install the `kayadata` package as follows:

```r
library(devtools)
install_github("jonathan-g/kayadata")
```
or
```r
library(pacman)
p_load_current_gh("jonathan-g/kayadata")
```

Once you have installed the `kayadata` package, you load it as follows:
```r
library(kayadata)
```

This package has several useful functions:

* `get_kaya_data(region_name)`: Get Kaya-identity data for a country or region.
  * **Argument:** `region_name` is the name of the country or region you want 
    data for (e.g., "United States", "World", "China", etc.).
      
    You can inspect a list of countries and regions by running 
    `kaya_region_list()`.
    * **Results:** The function returns a data frame with the following columns:
      * `region`: The country or region.
      * `year`: The year.
      * `P`: The population (in billions).
      * `G`: The gross domestic product (in trillions).
      * `E`: The primary energy consumption (in quads).
      * `F`: The energy-related CO~2~ emissions (in millions of metric tons 
        of CO~2~).
      * `g`: Per-capita GDP (in thousands of dollars per person).
      * `e`: The energy intensity of the economy (in quads per trillion 
        dollars of GDP).
      * `f`: The emissions intensity of the energy supply (in millions of 
        metric tons of CO~2~ per quad).
      * `ef`: The emissions intensity of the economy (in millions of metric 
        tons of CO~2~ per trillion dollars of GDP).
* `get_top_down_values(region_name)`: Get projections of the future
  values of Kaya-identity variables for a country, from the top-down 
  International Energy Outlook analysis by the U.S. Energy Information 
  Administration.
  * **Argument:** `region_name` is the name of the country or region you want 
    data for (e.g., "United States", "World", "China", etc.).
  * **Results:** The function returns a data frame with the following columns:
    * `region`: The country or region.
    * `year`: The year (five-year intervals from 2015--2050).
    * `P`: The population (in billions).
    * `G`: The gross domestic product (in trillions).
    * `E`: The primary energy consumption (in quads).
    * `F`: The energy-related CO~2~ emissions (in millions of metric tons 
      of CO~2~).
    * `g`: Per-capita GDP (in thousands of dollars per person).
    * `e`: The energy intensity of the economy (in quads per trillion 
      dollars of GDP).
    * `f`: The emissions intensity of the energy supply (in millions of 
      metric tons of CO~2~ per quad).
    * `ef`: The emissions intensity of the economy (in millions of metric 
      tons of CO~2~ per trillion dollars of GDP).
* `get_top_down_trends(region_name)`: Get the trends for Kaya-identity variables 
  for a country, from the top-down International Energy OUtlook analysis by the 
  U.S. Energy Information Administration.
  * **Argument:** `region_name` is the name of the country or region you 
    want data for (e.g., "United States", "World", "China", etc.).
  * **Results:** The function returns a data frame with the following columns:
    * `region`: The country or region
    * `P`: The rate of change of the population (multiply by 100 to get 
      the rate in percent per year).
    * `G`: The rate of change of GDP.
    * `E`: The rate of change of primary energy consumption.
    * `F`: The rate of change of CO~2~ emissions.
    * `g`: The rate of change of per-capita GDP.
    * `e`: The rate of change of the energy intensity of the economy.
    * `f`: The rate of change of the emissions intensity of the energy 
      supply.
    * `ef`: The rate of change of the emissions intensity of the economy.
* `project_top_down(region_name, year)`: Calculate projected values for 
  Kaya identity variables at a future year from the present through 2050.
  * **Arguments:** 
    * `region_name` is the name of the country or region you want 
      data for.
    * `year`: The year you want projected data for (through 2050).
    * **Results:** A data frame with one row and columns for `region`,
      `year`, and the Kaya variables: _P_, _G_, _E_, _F_, _g_, _e_, _f_, and
      _ef_.
* `get_fuel_mix(region_name)`: Get the mixture of primary energy sources used
  by a country or region.
    * **Argument:** `region_name` is the name of the country or region you 
      want data for (e.g., "United States", "World", "China", etc.).
    * **Results:** The function returns a data frame with the following columns:
      * `region`: The country or region
      * `region_code`: A three-letter code for the country or region.
      * `geography`: The kind of region ("nation", "region", or "world").
      * `year`: The year the data represents.
      * `fuel`: The kind of energy source ("Oil", "Natural Gas", "Coal", 
        "Nuclear", "Hydro", or "Renewables")
      * `quads`: The number of quads of that kind of energy consumed in that 
        year.
      * `pct`: The percent of total primary energy consumption that came from
        that kind of energy source.
* `plot_kaya(kaya_data, variable, start_year, stop_year, y_lab, log_scale,
   trend_line, points, font_size)`: Plot a time series showing trends in a 
   Kaya variable.
   * **Arguments:**
     * `kaya_data`: A data frame, like those returned by `get_kaya_data`.
     * `variable`: A quoted Kaya variable name ("P", "G", "E", "F", "g", 
          "e", "f", or "ef").
     * `start_year` (optional): If you want to do trend analysis, you can
       specify the year to start calculating the trend.
       The graph will color the years from `start_year` to `stop_year`
       in a darker color.
          
       If you don''t specify `start_year`, the default value is 1980.
       You can eliminate the special coloring and trend analysis 
       by setting `start_year = NULL`.
     * `stop_year` (optional): The year to stop the trend analysis. 
       If you don''t specify `stop_year`, it defaults to the last year
       in the data frame.
     * `y_lab` (optional): The label for the y-axis. If you don''t specify 
       this, R will pick an appropriate label based on which variable you
       choose.
     * `log_scale` (optional): Set this to `TRUE` or `FALSE` to specify 
       whether to plot the y-axis on a logarithmic scale. 
       The default is to set `log_scale = FALSE` if you don''t specify a 
       value.
     * `trend_line` (optional): Set this to `TRUE` or `FALSE` to specify 
       whether to plot a trend line. 
       The default is to set `trend_line = FALSE` if you don''t specify a 
       value.
     * `points` (optional): Set this to `TRUE` or `FALSE` to specify 
       whether to plot points on the line. If you are making a small
       graph, the points may make the graph too busy.
       The default is to set `points = TRUE` if you don''t specify a 
       value.
     * `font_size` (optional): This lets you adjust the size of the fonts
       used in labeling the axes on the graph.
       If you are making small plots and the y-axis label won''t fit on
       the side of the graph, you might want to use a smaller font size.
       The default is to set `font_size = 20` if you don''t specify a value.
   * **Result:** This function returns a plot object.
   * **Example:**
     ```{r example_kaya_plot, echo=TRUE, include=TRUE}
     kd = get_kaya_data("World")
     plot_kaya(kd, "F")
     ```
     ```{r example_kaya_plot_2, echo=TRUE, include=TRUE}
     plot_kaya(kd, "F", log_scale = TRUE, font_size = 12, trend_line = TRUE)
     ```
     ```{r example_kaya_plot_3, echo=TRUE, include=TRUE}
     plot_kaya(kd, "F", points = FALSE, start_year = NULL, font_size = 12)
     ```
* `plot_fuel_mix(fuel_mix, collapse_renewables)`: Make a "donut" chart showing
  the amount of energy the country got from different energy sources.
  * **Arguments:**
    * `fuel_mix`: A data frame with the fuel mix for the country, like the
      ones returned by `get_fuel_mix()`
    * `collapse_renewables` (optional): Set this to `TRUE` or `FALSE` to
      specify whether to combine "Hydro" with other renewables to make one
      "Renewables" category (`TRUE`), or plot "Hydro" separately from the
      other renewables (`FALSE`).
          
      If you don''t specify `collapse_renewables`, the default is to set
      `collapse_renewables = TRUE`.
      Setting `collapse_renewables = FALSE` will only work if you also
      specified `collapse_renewables = FALSE` when you retrieved the fuel
      mix using `get_fuel_mix()`.
    * **Results:** A plot object with a donut chart.
    * **Example:**
      ```{r example_fuel_plot, echo=TRUE, include=TRUE}
      fm = get_fuel_mix("World")
      plot_fuel_mix(fm)
      ```
      ```{r example_fuel_plot_2, echo=TRUE, include=TRUE}
      fm = get_fuel_mix("World", collapse_renewables = FALSE)
      plot_fuel_mix(fm, collapse_renewables = FALSE)
      ```
* `kaya_region_list()`: Get a list of regions and countries for which you can
  get Kaya data.
* `emissions_factors()`: Get a data frame with columns for 
  * `fuel`: The energy source
  * `emission_factor`: The emissions from that energy source, in million
    metric tons of CO~2~ per quad of energy.
* `generation_capacity()`: Get a data frame with generation capacity of a 
  typical power plant for different kinds of energy sources. 
  This data frame has columns:
  * `fuel`: The energy source.
  * `description`: A description of the kind of power plant.
  * `nameplate_capacity`: The "nameplate capacity" of a typical power plant
    of that type. The nameplate capacity is the power output when the
    plant is running at its maximum capacity.
  * `capacity_factor`: The capacity factor. This is the fraction of the 
    nameplate capacity that the power plant can produce over an average 
    year.
      
    The average power output from a power plant is the nameplate capacity
    times the capacity factor:
    $$ \text{average power} = \text{nameplate capacity} \times 
       \text{capacity factor} $$

'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          902,
                          'DECARB_BOTTOM_UP',
                          'Instructions for Bottom-Up Decarbonization Policy Analysis',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_10/lab_10_instructions.pdf',
                          'decarbonization.bib',
                          '```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = FALSE)

is_output_html <- function() {
  is_html <- TRUE
  header <- rmarkdown:::parse_yaml_front_matter(
    readLines(knitr::current_input())
  )
  if ("output.blogdown::html_page" %in% names(header)) {
    is_html <-  TRUE
  } else if ("output" %in% names(header)) {
    if (is.list(header$output)) {
      output <- names(header$output)[1]
    } else {
      output <- header$output[1]
    }
    if (str_detect(output, regex("(pdf|word)_document", ignore_case = TRUE))) {
      is_html <- FALSE
    }
  }
  is_html
}


getOutputFormat <- function() {
  output <- rmarkdown:::parse_yaml_front_matter(
    readLines(knitr::current_input())
    )$output
  if (is.list(output)){
    return(names(output)[1])
  } else {
    return(output[1])
  }
}

data_dir = "_data"
script_dir = "_scripts"

library(magrittr)
library(tidyverse)
library(scales)
library(lubridate)
library(knitr)
library(broom)
library(kayadata)

theme_set(theme_bw(base_size = 15))

if (!dir.exists(data_dir)) dir.create(data_dir)

source(file.path(script_dir, "utils.R"), chdir = T)

due_date_1 <- lubridate::date("2021-04-14")

long_due_date_1 <- stamp("Monday, March 1")(due_date_1)
short_due_date_1 <- stamp("Mar. 1")(due_date_1)

current_year <- max(get_kaya_data("United States")$year, na.rm = T)
after_current_year <- current_year + 1

ref_year <- 2005
target_year  <- 2050
target_reduction <- 0.80

eia_report_year <- max(get_top_down_values("United States")$year, na.rm = T)
donut_year <- max(kayadata::get_fuel_mix("United States")$year, na.rm = T)

IEO_url <- "http://www.eia.gov/forecasts/ieo/"
EIA_table_url <- "http://www.eia.gov/oiaf/aeo/tablebrowser"

# bottom_up_country_assignments <- bind_rows(
#   tibble(class = "Undergraduates", 
#          region = c("World", "United States", "China",
#                     "South Korea", "Canada", "India",
#                     "Sweden")),
#   tibble(class = "Grad Students", 
#          region = c("World", "United States", "China",
#                      "India", "Brazil"))
# )

rcp_26 <- tribble(
  ~region, ~target_year, ~ref_year, ~reduction,
  "Australia/New Zealand", 2050, 2005,  0.82,
  "Canada",                2050, 2005,  0.72,
  "China",                 2050, 2005,  0.78,
  "India",                 2050, 2005,  0.73,
  "Japan",                 2050, 2005,  0.66,
  "South Korea",           2050, 2005,  0.67,
  "United States",         2050, 2005,  0.73,
  "Africa",                2050, 2005,  0.28,
  "Latin America",         2050, 2005,  0.40,
  "Middle East",           2050, 2005,  0.32,
  "Southeast Asia",        2050, 2005, -0.17,
  "Western Europe",        2050, 2005,  0.74,
  "World",                 2050, 2005,  0.36
)

```
# Introduction

The purpose of this lab is to get a sense of the challenges to cutting 
emissions significantly by analyzing a two representative emissions-reduction
policies.
These policy analyses will follow the methods Roger Pielke used in 
Chapters 3--4 of _The Climate Fix_.

I encourage you to work with a partner on this lab, but you should write up
your own lab report individually.

## Data Resources

To make things simple for you, I have prepared an interactive web application, 
available at <https://ees3310.jgilligan.org/decarbonization/}, with almost all 
the data you will need for this project. 
It contains historical data on population, GDP, energy consumption, and 
CO~2~ emissions for many countries and regions of the world. 

I have also provided an R package that you can install on your own computer 
through R Studio:
```r
library(pacman)
p_load_("kayadata")
```

Finally, there is an experimental version of the interactive web application
that you can install and run on your computer using RStudio, but it is still
experimental and may not work perfectly.
You can install it in RStudio like this:
```r
library(pacman)
p_install_gh("jonathan-g/kayatool")
```
and then you can run the application like this:
```r
library(kayatool)
launch_kayatool()
```
**Note:** you should not put `launch_kaya_tool()` in RMarkdown documents,
like your lab report, because it''s for launching an interactive web application,
which is not something that makes sense in a document. Also, launching an 
interactive application when you knit your report will prevent the report from 
knitting correctly.

### Using the interactive web application:

To use the decarbonization web app, start by selecting a country, region, or 
group of countries on the 
left-hand control panel. Then you can set the parameters for your policy goals: 
The target year for accomplishing the emissions reductions, the reductions you 
hope to achieve for the country or region, and the reference year. 

For instance, if your 
goal is for emissions in `r target_year` to be 
`r label_percent(accuracy=1)(target_reduction)` less than they were in 
`r ref_year`, you would 
put 
`r target_year` for the target year, 
`r label_percent(accuracy=1)(target_reduction)` for the emissions reduction, 
and `r ref_year` for the reference year.  
If you want to indicate a growth in emissions, rather than a reduction, 
just enter a negative number for the emissions reduction.

You can also select what year to use for starting the calculation of bottom-up 
trends in the Kaya-identity parameters 
population _P_, 
per-capita gross-domestic product _g_, 
energy intensity of the economy _e_, 
and carbon intensity of the energy supply _f_. 
When you calculate decarbonization rates in this homework project, you will be 
focusing on the carbon intensity of the economy, which is given by the 
product _ef_.

After you have set the parameters you want, the bottom of the left panel will 
show a "Bottom-up Analysis" table that shows the average percentage growth 
rates for the Kaya parameters, their actual values in 2017, and the bottom-up 
projections for what their values will be in the target year (2050 by default).

The tabs on the right-hand side of the web page show:

* "**Trends:**" shows historical trends and the calculated growth rate for the 
  Kaya parameters. You select a variable (_P_, _g_, _e_, _f_, or various 
  multiples _ef_, $G = Pg$, $E = Pge$, or $F = Pgef$) The app shows two graphs: 
  on the right, the value of the parameter and on the left, 
  the natural logarithm of the parameter, which we use to calculate 
  percentage growth rates. 
  The graphs show the points that are used in calculating the trends in 
  darker red and the points not used in the trend calculation in lighter red. 
  If you change the starting year on the left-hand panel, you will see the 
  colors of the dots change to reflect this.

  The trend is shown in black on the left-hand graph. If the quantity is 
  changing at a steady rate, the data points will follow a straight line 
  (the trend line). Sometimes you will see that the variables _e_ and _f_ do 
  not seem to be changing at a steady rate, but the product _ef_ is. 
  Explore the trends for the different variables and notice which seem to be 
  following a steady growth or reduction and which do not.

  If you hold the mouse pointer over a data point on either graph, a tool-tip 
  will pop up showing the value of that variable in that year.

* "**Calculations**" shows the steps for you to follow in this 
  lab exercise.

* "**Implied Decarbonization**" shows the historical trend in the carbon 
  intensity of the economy (_ef_) and the implied future changes in order to 
  meet the policy goal that you set.

* "**Energy Mix**" shows the mixture of energy sources (coal, natural gas, oil, 
  nuclear, and renewables) that provide the country or region''s energy supply. 
  From this page, you can download the energy mix for the country you''re 
  looking at as a text file, using comma-separated value (csv) format, which 
  you can read into R, Excel, or any other common data anlysis program.

* "**Historical**" shows a table of historical values for the different Kaya 
  parameters. This is a convenient place to look up the exact numbers for your 
  country in a particular year.
  This sheet also has a download button that lets you download the data in a 
  `.csv` file.

# Background and Context

The basic framework for your analysis will be the Kaya identity:
$$
F = P \times g \times e \times f,
$$
where 
_F_ is the CO~2~ emissions (in million metric tons of carbon per year), 
_P_ is the population (in billion people), 
_g_ is the per-capita GDP (in thousands of dollars per person per year), 
_e_ is the energy intensity of the economy (in quads per trillion dollars of GDP), 
and _f_ is the carbon intensity of the energy supply (in million metric tons of 
carbon dioxide per quad).^[One metric ton = 1000 kg = 1.1 English tons = 2200 pounds] 
A quad means one quadrillion British thermal units (BTU) of energy. 
One quad is approximately equal to 8 billion gallons of gasoline or 
36 million tons of coal. 
It is roughly equal to the electricity used by 
26 million homes in a year, 
or the amount of electricity generated by 
15 nuclear power plants in a year.

We will also focus on the carbon intensity of the economy (in metric tons of 
CO~2~ emissions per million dollars of GDP), which 
equals $e \times f$.^[Note that _e_ is in units of quads per trillion dollars 
of GDP and _f_ is in units of million metric tons of CO~2~ per quad, 
so if you multiply the units you get million metric tons of CO~2~ per 
trillion dollars of GDP, which equals metric tons of CO~2~ per 
million dollars of GDP.]

## Growth Rates and Trends

We will assume that all of the rates of change in the growth and 
decarbonization trends we are studying will be constant from year to year.
A constant percentage rate of change implies that the quantity follows
an exponential growth function, 
so if you know the values for _P_, _g_, _e_, and _f_ in `r current_year`, 
then at some future year _y_:

```{r lefteqn_for_mathjax, echo=FALSE, eval=TRUE, results="asis", message=FALSE, warning=FALSE}
# Insert missing definitions of \lefteqn and \intertext for MathJax if the 
# output is a variant on HTML.
message("Output format = ", getOutputFormat())
if(is_output_html()) {
  message("Defining lefteqn")
  cat("$\\def\\lefteqn#1{\\rlap{\\displaystyle{#1}}}$\n")
  cat("$\\def\\alintertext#1{\\rlap{\\displaystyle{\\text{#1}}}}$\n")
} else {
  message("Not defining lefteqn")
  cat("")
}
```
$$
\begin{aligned}
  P(y) &= P(`r current_year`) \times \exp(r_P (y - `r current_year`)),\\
  g(y) &= g(`r current_year`) \times \exp(r_g (y - `r current_year`)),\\
  e(y) &= e(`r current_year`) \times \exp(r_e (y - `r current_year`)),\\
  \alintertext{and}
  f(y) &= f(`r current_year`) \times \exp(r_f (y - `r current_year`)),\\
\end{aligned}
$$
where _r~P~_ is the growth rate of the population, _r~g~_ is the growth rate of the per-capita GDP, etc.
Increasing energy efficiency and/or decarbonization of the energy supply mean that _r~e~_ and/or _r~f~_ are negative.

------

**Remember that you have to divide percentages by 100 to get the rates for 
these equations: if _r_ is 3%, you use 0.03, not 3.0 in the equations.**

**In your math classes and on your calculator, you have probably seen the 
exponential function exp(_x_) written as _e^x^_, where _e_ is the base of the 
natural logarithm (_2.718..._). 
But since I am using the letter _e_ to represent the energy intensity of the 
economy 
(the energy consumption divided by the GDP), 
I am writing it as exp(_x_) so you won''t get confused by two different 
meanings of "_e_." Also, in R the exponential function is `exp()`.**

------

Because of the properties of the exponential function, when you multiply two or 
more quantities together, the rate of change of the product is the sum of the 
rates of change of each of the quantities:
$$
\begin{aligned}
  \mathrm{GDP}(y) &= P(y)\times g(y)\\
    &= P(`r current_year`) \times \exp(r_p (y - `r current_year`)) 
    \times g(`r current_year`) \times \exp(r_g (y - `r current_year`))\\
    &= P(`r current_year`)\times g(`r current_year`)
    \times \exp((r_P + r_g) (y - `r current_year`))\\
    \alintertext{so}
  r_{\mathrm{GDP}} &= r_{P\times g} = r_P + r_g.
\end{aligned}
$$

The web app does these calculations so you can check your results.
So that errors in the first parts of a problem don''t cascade through the whole 
exercise, you should work the problems exercises with RMarkdown and compare 
your work to the "Bottom-up Analysis" table to make sure you know how to do it.


# The Assignment

For this lab, you will do a bottom-up analysis for a policy to reduce the 
greenhouse gas emissions for the OECD (the Organization
for Economic Cooperation and Development, a group of highly industrialized 
countries) `r label_percent(accuracy=1)(target_reduction)` below 
`r ref_year` levels by the year `r target_year`

```{r country_table, include=FALSE, eval = FALSE}
bottom_up_country_assignments %>% group_by(class) %>%
  summarize(regions = str_c(region, collapse = ", ")) %>%
  kable(align = "ll")
```

For the bottom-up analysis, use the Kaya Identity to make reasonable 
extrapolations of the population and per-capita GDP through `r target_year`. 

<!--
Repeat the steps below for each country or region:
-->

### Outline:

To analyze the policy:

1. Get the Kaya identity data for the OECD
2. Figure out appropriate starting years for calculating the historical trends 
   for the Kaya variables _P_, _g_, _e_, and _f_.
3. Calculate the _historical trends_ for the Kaya variables from the starting
   year you determined in step (2).
4. Use the _historical trends_ to extrapolate projected values for _P_, _g_, 
   _e_, and _f_ in `r target_year`.
5. Calculate the policy goal for emissions _F_ in `r target_year`.
   This uses the policy criteria (_F_ in `r target_year` should be
   `r label_percent(accuracy=1)(target_reduction)` less than in `r ref_year`) 
   and the measured emissions _F_ in `r ref_year`, from the Kaya data for the 
   OECD.
6. Calculate the _implied rate of change_ of _F_ between `r current_year`
   and `r target_year`, in order to reduce emissions to the policy goal that
   you calculated in step (5).
   This is the average fraction that _F_ must be reduced each year between 
   now and `r target_year` in order to meet the goal, so if the implied
   rate is $-0.05$, then _F_ must be reduced by 5% each year, on average.
7. Combine the _implied rate of change_ of _F_ with the _historical trends_ of
   _P_ and _g_ to calculate the _implied rate of change_ of _ef_ that you 
   calculated in step (3) in order to meet the policy goal from step (5).
8. Compare the _implied rate of change_ of _ef_ that you calculated in step (7)
   to the _historical trend_ of _ef_ that you can determine from the
   _historical trends_ of _e_ and _f_ that you calculated in step (3).

### Detailed steps:

1. Use the `kayadata` package in RStudio to load the data for
   the OECD. Below is an example of looking up the data
   for the United States:
   ```{r get_oecd_data, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
   library(kayadata)
   us_data = get_kaya_data("United States")
   us_latest = us_data %>% slice_max(year)
   ```
   You can get a list of all the countries and regions that are available 
   from `kaya_region_list()`.

2. Next, open up the interactive application at 
   [ees3310.jgilligan.org/decarbonization](https://ees3310.jgilligan.org/decarbonization),
   seelect OECD as the region. 
   Leave the "Calculate trends starting in" at its default value (1980).
   Go to the "Trends" tab and look at the graphs of 
   ln(_P_), ln(_g_), ln(_e_), ln(_f_), and ln(_ef_).
   
   * For each graph compare the real data (in red) to the trend line 
     (the straight blue line).
   * Does the trend line look a like a good description of the data?
   * Is there a better starting year for calculating trends? 
     If so, adjust ``Calculate trends starting in'''' to this year
     and make note of the year.
   * You should also plot these in your report using RMarkdown. 
     Following from the example above, you can use the `plot_kaya` function:
     ```{r plot_us_data, echo=TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
     plot_kaya(us_data, "e", log_scale = TRUE, font_size = 12)
     ```
     Use plots like the one above to examine trends in _P_, _g_, _e_, and _f_.
     Be sure to set `log_scale = TRUE` in the `plot_kaya` function because 
     a constant percentage rate of
     change corresponds to a linear trend in the logarithm of the variable.
3. In your report, discuss whether you anticipate a problem if we make policy 
   by assuming that the Kaya identity variables will follow the trend line for 
   the next  several decades?

4. Next, calculate the rates of change of 
   _P_, _g_, _e_, and _f_ (the Population, per-capita GDP, energy intensity of 
   the economy, and carbon-intensity of the energy supply) from your starting 
   year through `r current_year`, using the `lm` function in R.

   A constant rate of change is represented by a linear relationship between
   the natural logarithm of the kaya variable and time: for the variable
   `P` (population), we would write this formula in R as `log(P)~year`.

   Here is an example of calculating the rate of change of _e_ 
   (the energy intensity of the economy) for the United States, using the 
   variable `us_data` that you calculated above:
   ```{r get_us_e_trend, echo=TRUE, include=TRUE, eval=TRUE, warning=FALSE, message=FALSE}
   # Load the broom library for organizing lm results
   library(broom)

   e_trend = us_data %>% filter(year >= 1980) %>%
     lm(log(e) ~ year, data = .) %>%
     tidy() %>% 
     filter(term == "year") %>% 
     pull(estimate)
   ```

   For more detailed explanation of the code above, see the handout
   "New Tools for Data Analysis."

   Here, we find that `e_trend` = `r round(e_trend, 4)` 
   (`r round(100 * e_trend, 2)`% per year).
    
   You can check your results against the interactive web application by
   looking at the rates of change reported on the "Trends" tab.
   Be sure to set the start year on the web app to the same values that you
   used for calculating the slopes in RMarkdown.

   These numbers are the slopes of the trend lines that you looked at in part 2.

5. Using the rates of change that you determined in part 4,
   use the formulas from the "Growth Rates and Trends" section to compute the 
   values for 
   _P_, _g_, _e_, and _f_ 
   in the year `r target_year`.
   
   Next, use the growth rates of _P_, _g_, _e_, and _f_ to calculate the 
   growth rate of the total emissions _F_. 
   Calculate the total CO~2~ emissions (_F_) from the OECD in 
   `r target_year`, assuming that emissions continue to grow at 
   historical rates. 
    
   It may be useful to define functions for frequently used 
   (e.g., see the example `growth` function in the handout on "New Tools for
   Data Analysis")

   Check your work against the bottom-up numbers in the ``Bottom-Up Analysis'''' 
   table on the bottom of the left-hand pane of the web application.

6. Calculate the emissions target: Set the reference year for 
   emissions reduction to `r ref_year`, and set the target emissions
   reduction to `r label_percent(accuracy = 1)(target_reduction)`.

   Set the target year in the web app to `r target_year`;
   set the reference year to `r ref_year`;
   set the emissions reduction to 
   `r label_percent(accuracy=1)(target_reduction)`.

   How much CO~2~ (_F_) would the OECD emit in
   `r target_year` in order to meet your policy goal? 

   Let''s work an example using the Middle East:
   ```{r middle_east_example, echo = TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
   F_2005_middle_east = get_kaya_data("Middle East") %>% 
     filter(year == 2005) %>% pull(F)
   F_2005_middle_east
   ```
   ```{r middle_east_example_2, echo = TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
   middle_east_reduction = 0.32
   F_goal_middle_east = F_2005_middle_east * (1 - middle_east_reduction)
   F_goal_middle_east
   ```

   Check this result against the interactive web application.

7. Look up what the CO~2~ emission is in `r current_year` and calculate the 
   rate of change in _F_ that would be necessary to achieve your policy target. 
   For the `r target_year`\ calculation:
   
   a. Calculate the ratio of $F_{`r target_year`}/F_{`r current_year`}$.
   b. Take the natural logarithm of this ratio 
      (in R, the natural logarithm function is `log()`; on your calculator
      it is "LN").
   c. Divide the logarithm by the number of years 
      ($`r target_year` - `r current_year`$). 
      This is the rate of change of _F_. A positive number means growth and a 
      negative number means a reduction.
   The percentage rate of change per year is 100 times this number.

   For our Middle East example:
   ```{r middle_east_example_3, echo = TRUE, eval=TRUE, include=TRUE, warning=FALSE, message=FALSE}
   F_2017_middle_east = get_kaya_data("Middle East") %>% 
     filter(year == 2017) %>% pull(F)
   r_F_middle_east = log(F_goal_middle_east / F_2017_middle_east) / 
     (2050 - 2017)
    r_F_middle_east
    ```
    so total emissions for the Middle East would need to drop by 
    `r label_percent(accuracy=0.01)(r_F_middle_east)` per year between 
    `r current_year` and `r target_year`

8. Now calculate the decarbonization rate implied by the policy goal. This is 
   the rate of reduction of _ef_, the carbon intensity of the economy. 
   $F = Pgef$, so $r_F = r_P + r_g + r_e + r_f$. Subtract the projected _r~P~_ 
   and _r~g~_ 
   (look them up in the ``Bottom up Analysis'''' table) 
   from _r~F~_, which you just calculated in step~7, 
   to get the rate of change of _ef_. 
   Multiply the rate of change of _ef_ by -1 to get the rate of decarbonization
   (because negative rate of change is a positive rate of decarbonization and
   vice-versa). 
   Multiply by 100 to get the percent implied rate of decarbonization.

9. How does the implied rate of decarbonization for the OECD compare to the 
   historical rate of decarbonization (i.e., the trend in _ef_ reported in the 
   "Bottom up Analysis" table)?
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          1001,
                          'ROLE_PLAY',
                          'Preparation for Lab on Regulating Greenhouse Gas Emissions',
                          'Jonathan Gilligan',
                          'preparation',
                          '/files/lab_docs/regulation_lab/preparation_for_regulation_lab.pdf',
                          NULL,
                          '```{r setup, include=FALSE, message = FALSE, warning = FALSE}
knitr::opts_chunk$set(echo = FALSE)

library(pacman)
library(tidyverse)
library(lubridate)
# library(xtable)
library(knitr)
library(kableExtra)
p_load_gh("jonathan-g/cmarkjg")

game_day = ymd("2021-04-12")
long_game_day = format(game_day, "%A %B %e")
short_game_day = format(game_day, "%b.\ %e")

class_reading_day = ymd("2021-04-05")
long_reading_day = format(class_reading_day, "%A %B %e")
short_reading_day = format(class_reading_day, "%b.\ %e")

output_format <- ifelse(is_html_output(), "html", "latex")
message("Output format = ", output_format)

md_render = if (output_format == "latex") {
   function(x) {
      markdown_latex(x, smart = TRUE, max_strikethrough = FALSE,
                     normalize = TRUE, extensions = TRUE)
   }
} else {
   function(x) { x }
}
```
# Introduction

For the laboratory period on `r long_game_day`, we will do a role-playing 
exercise explore the effectiveness of three different approaches to 
regulating pollution, such as greenhouse gas emissions: command-and-control, 
cap-and-trade, and emissions taxes. 
This reading should serve to prepare you for the exercise.

# Zero-Emissions Baseline

To simplify things for doing this exercise, we will calculate costs and 
benefits with respect to a zero-emissions baseline, where we specify both the
marginal and cumulative (or gross) costs and benefits with respect to a 
condition where there are no emissions. 

In this case, from the perspective of the businesses that you will be playing,
the costs will be the cost of buying permits to emit CO~2~ or the costs of
paying taxes on emissions. 
The benefits to the businesses will be the profits they earn. 
The costs to society will be the social cost of carbon (the damage caused by 
global warming) and the benefit will be the combination of revenues the 
companies generate (this benefits the companies'' owners as profit, 
but the revenues also provide wages for workers and spending by the company, 
which stimulates the economy; this total economic activity is what we measure
as the companies'' contribution to the nation''s gross domestic product)
as well as money received from the players as taxes or payment for emissions 
permits, which is then refunded to the people through some mechanism, such as
a dividend from the government or a reduction in payroll taxes.

# The Exercise

## The Players

To keep groups small, I will divide the class in half and each half will perform 
the same role-playing exercise. For the exercise, I will divide the students 
into three groups:

1. One group will play The Environmental Protections Agency (EPA) and will 
   decide how much to reduce pollution, how many permits to issue, or how 
   much to charge as a pollution tax. 
   
   The EPA''s motivation is to produce the best net benefit for society by 
   balancing the costs of reducing greenhouse gas emissions against the 
   benefits of limiting global warming.
2. A second group will play Alpha Electricity: a large power company with a 
   varied portfolio of generating plants including coal, natural gas, and 
   nuclear. 
   
   Alpha''s motives are purely to produce the greatest profit for its 
   shareholders regardless of the cost to society of greenhouse gas emissions.
3. A third group will play Beta Industries: a large heavy-industrial 
   conglomerate with many large factories producing steel, aluminum, and 
   petrochemicals such as plastics, paints, and pharmaceuticals. 
   
   Beta''s motives are purely to produce the greatest profit for its 
   shareholders regardless of the cost to society of greenhouse gas 
   emissions.

For the purposes of this exercise, we will assume that the EPA can accurately 
estimate the damage that would be caused by global warming, and thus, that it 
can also accurately estimate the social benefit of reducing greenhouse gas 
emissions. However, the EPA cannot accurately assess the costs individual 
companies will incur when they reduce their emissions. This means that the 
EPA''s estimates of net benefits (benefits minus costs) is limited by its 
uncertainty about the cost of reducing emissions.

Only the EPA will know the social cost of greenhouse gas emissions, only Alpha 
will know Alpha''s cost for reducing emissions, and only Beta will know Beta''s 
cost for reducing emissions.

Without regulation, Alpha and Beta would each emit 150 million tons of CO~2~ 
per year. The goal of the exercise is for the EPA to reduce pollution to achieve 
the socially optimal balance between the benefits of economic activity 
(jobs, wealth, etc.) and the harms of pollution. The goal of each firm is to 
maximize their profit regardless of the costs or benefits to society or to its 
competitor.

To keep things simple, emissions cuts will be figured in blocks of 
1 million tons, so a firm can cut emissions by zero, 1 million tons, 
2 million tons, ..., up to a maximum of 15 million tons (cutting emissions 
by 15 million tons means the firm reduces its emissions to zero).

\clearpage
## The Game

The game will have six stages:

1. First, the EPA will gather information on the cost of abating pollution. 
   A representative of the EPA can ask four questions about each company''s 
   marginal costs and benefits
   (**I recommend asking questions about the marginal profit for the 
   $n^{\text{th}}$ million tons of pollution:
   "what is your marginal profit for the 6th million tons you emit?"**). 
   A representative of each company will answer the question. 
   The representatives may answer strategically, meaning they may exaggerate the 
   costs. The EPA may take this into account in deciding how to use the answers 
   to estimate the true cost of reducing emissions.
2. Second, the EPA will determine three possible courses of action:
   a) A command and control regulation, which mandates a specific emissions 
      by each firm. Because the Constitution guarantees equality before the law, 
      this regulation must impose the same emissions limit on each 
      firm.^[The real world is a bit more complex, because the government 
      would be allowed to regulate different industries differently, but would 
      face real obstacles if it tried to impose different emissions limits on 
      different companies within the same industry. Because this exercise is 
      limited to just two companies, we simplify by forcing the EPA to impose 
      identical emissions limits on all firms.]
      Based on what it knows about the costs (to the firms) and benefits 
      (to society) of emissions, the EPA will determine how many 
      million tons of emissions to allow (to keep things simple, the EPA 
      should make the amount an even number: 2 million tons, 4 million tons, 
      6 million tons, etc.) and then divide those emissions allowances equally 
      between the two firms.
   b) A cap-and-trade. Under this program, the total emissions cuts would be 
      the same and the EPA will issue permits to emit CO~2~. Each permit will 
      allow the owner to emit 1 million tons of CO~2~. Total CO~2~ emissions are 
      30 million tons minus the emissions cuts the EPA wants to impose. 
      Again, to keep things simple, issue an even number of permits.
      The EPA will give each company an equal number of permits (if the EPA 
      issues 10 permits, it gives 5 to each company).
	c) An emissions-tax program. Under this program, the EPA determines the tax 
		a firm must pay for every million tons of CO~2~ it emits. The firms will 
		then decide on their own how much CO~2~ they want to emit.
3. Third, the firms determine how much CO~2~ they will emit under the 
   command-and-control program (this is easy, because it''s the amount the EPA
   allows). 
4. Fourth, permits will be distributed. The EPA will distribute equal numbers 
   of permits to each firm and allow the firms to trade permits with each other. 
5. Fifth, we will impose an carbon tax, at the price set by the EPA in stage 2. 
   The two firms will be free to cut emissions by as much or as little as they 
   want (between 0 and 15 million tons each). 
6. Sixth and finally, we will reveal the details from each step, including the 
   private information each firm has about its costs, and calculate the 
   deadweight loss under each of the three types of regulation. 
   This will let us discuss and analyze the strengths and limitations of each 
   regulatory program.

## Acknowledgements

This exercise was adapted from The Pollution Game, an interactive exercise 
developed by Jay R. Corrigan, Associate Professor of Economics, Kenyon College.  
See J.R. Corrigan, ``The Pollution Game: A Classroom Exercise Demonstrating the 
Relative Effectiveness of Emissions Taxes and Tradable Permits,'''' 
_The Journal of Economic Education_ **42**, 70--78 (2011) 
[doi: 10.1080/00220485.2011.536491](https://doi.org/10.1080/00220485.2011.536491)

\clearpage
## Optional Preparation Exercises: 

To prepare for the lab, please do the following exercises, which refer to 
tables 1 & 2, below. 
**You do not need to turn it in**:

1. Table 1 lists the marginal profit a company earns by emitting CO~2~. 
   Fill in the blanks in the table to show the total profits it earns at each 
   amount of CO~2~ emissions.

2. What level of CO~2~ emissions would produce the maximum total profit? 
   How much profit would this be?
   \vspace{2cm}

3. If the company is emitting the amount of CO~2~ that would maximize its 
   profits, and then the Environmental Protection Agency requires the company 
   to reduce its emissions by 5 million tons, what is the total cost for the 
   company to comply with the regulation?
   \vspace{2cm}

4. What is the marginal cost to comply with the regulation? 
   (Be careful and consider, if the company cuts 1 million tons, then a second 
   million tons, and so forth, what did it cost the company to make the 
   fifth million-ton cut?)
   \vspace{2cm}

5. If the EPA imposed a tax of \$30 per ton on CO~2~ emissions, complete the 
   table to indicate the new marginal profit and total profit at each level of 
   emission.
   \vspace{2cm}

6. Under a \$30 per ton tax, what level of CO~2~ emissions would produce the 
   maximum total profit? What would its total profit be? How much less is this 
   than the total profit you reported in question 2?
   \vspace{2cm}

7. Table 2 shows the economic value of the marginal 
   environmental harm caused by each additional million tons of CO~2~ emissions. 
   Fill in the blanks to indicate the total environmental harm.

8. The marginal net economic impact is the marginal profit generated by emitting 
   each million tons of CO~2~ minus the marginal environmental harm. This number 
   is the net benefit to society from emitting an additional million tons of 
   CO~2~. If the number is positive, society benefits. If it is negative, society 
   suffers.

    Fill in the marginal and total economic impacts, using the information on 
    environmental harm from Table 2 and the information 
    on marginal profits from Table 1.

9. What is the optimum amount of CO~2~ to emit if we consider the net benefit to 
   society (i.e., the net economic impact).
   \vspace{2cm}

10. If you were going to set a cap on emissions, how many tons would you set the 
    cap at?
   \vspace{2cm}

11. If you were going to set a tax on emissions, how many dollars per ton would 
    you set the tax at?
   \vspace{2cm}

\clearpage
### Tables: Emissions, Profits, and Harms

```{r profit-table}
tax = 30
mp_intercept = 91
mp_slope = 6
mc_intercept = 0
mc_slope = 5

mp_fn = function(emis) {
   mp_intercept - mp_slope * emis
}
mc_fn = function(emis) {
   mc_intercept + mc_slope * emis
}

e_star = round((mp_intercept - mc_intercept) / (mp_slope + mc_slope))
optiumal_tax = mp_fn(e_star)

profits = tibble(
  emissions = seq(1,20), 
  marginal_profit = mp_fn(emissions),
  total_profit = str_c(marginal_profit, 
                       ifelse(is.na(lag(marginal_profit)), "", 
                              str_c(" + ", lag(cumsum(marginal_profit)), 
                                    " = ", cumsum(marginal_profit))
                              )
                       ),
  marginal_taxed = str_c(marginal_profit, " - ", tax, " = ",
                         marginal_profit - tax),
  total_taxed = str_c(marginal_profit - 30,
                       ifelse(is.na(lag(marginal_profit)), "", 
                              str_c(" + ", lag(cumsum(marginal_profit - 30)), 
                                    " = ", cumsum(marginal_profit - 30))
                              )
                      ),
) %>% mutate(across(total_profit:total_taxed,
                ~ifelse(emissions <= 3, ., "")))

column_names <- c("CO~2~ Emissions\n(million tons)",
                    "Marginal profit\n(million dollars)", 
                    "Total profit\n(million dollars)",
                    "Marginal profit\n(million dollars)", 
                    "Total profit\n(million dollars)")

if (output_format == "latex") {
   escape = FALSE
   column_names <- linebreak(column_names) %>%
      str_replace_all("CO~2~", "CO\\\\textsubscript{2}")
   profits <- profits %>% 
      mutate(across(everything(), ~str_replace_all(., fixed("$"), "\\$")))
} else {
   lb <- function(x) x
   escape = TRUE
}

tbl_1_cap = "Profits versus emissions: The table lists the marginal profit, in millions of dollars, for each million tons of CO~2~ it emits. For instance, if it emits one million tons, it earns a marginal profit of $85 million. The total profit for _x_ million tons is the sum of the marginal profits for each million tons from 1 to _x_.\\par Fill in the blanks with the total profit the company earns by for each amount of CO~2~ emission." %>%
   md_render() %>% str_replace_all(fixed("\\textbackslash{}"), "\\")

# if (output_format != "latex") {
#    tbl_1_cap = str_c("**Table 1:** ", tbl_1_cap)
# }

tbl_1 = kable(profits, format = output_format, align = "crrrr", digits = 0, 
      col.names = column_names, booktabs = T, escape = escape, 
      position = "hbtp",
      caption =  tbl_1_cap,
      caption.short = "Profits versus emissions") %>% 
  add_header_above(c(" " = 1, "No Emissions Tax" = 2, 
                     "$30/ton Emissions Tax" = 2)) %>%
  kable_styling(c("bordered","hover"), c("striped", "scale_down"))

if (output_format == "latex") {
   tbl_1 = raw_latex(tbl_1)
}
tbl_1
```


```{r cost-table}
costs = tibble(
  emissions = seq(1,20), 
  harm = mc_fn(emissions),
  cum_harm = cumsum(harm),
  total_harm = str_c(ifelse(is.na(lag(harm)), "", 
                              str_c(harm, " + ", lag(cum_harm), 
                                    " = ")), 
                              cum_harm),
  profit = mp_fn(emissions),
  cum_profit = cumsum(profit),
  marginal_profit = str_c(profit),
  total_profit = str_c(cum_profit),
  impact = profit - harm,
  cum_impact = cum_profit - cum_harm,
  marginal_impact = str_c(profit, " - ", harm, 
                          " = ", impact),
  total_impact = str_c(cum_profit, " - ", cum_harm, " = ", cum_impact)
) %>% mutate(across(total_harm:total_impact,
                ~ifelse(emissions <= 3, ., ""))) %>%
  select(-profit, -impact, -starts_with("cum_"))

column_names <- c("CO~2~ Emissions\n(million tons)",
                    "Marginal\n(million dollars)", 
                    "Total\n(million dollars)",
                    "Marginal\n(million dollars)",
                    "Total\n(million dollars)",
                    "Marginal\n(million dollars)", 
                    "Total\n(million dollars)")

if (output_format == "latex") {
   column_names <- linebreak(column_names) %>%
      str_replace_all("CO~2~", "CO\\\\textsubscript{2}")
   escape = FALSE
   costs <- costs %>% 
      mutate(across(everything(), ~str_replace_all(., fixed("$"), "\\$")))
} else {
   escape = TRUE
}

tbl_2_cap = "Economic impacts of CO~2~ emissions. The table lists the marginal environmental harm, in millions of dollars, for each million tons of CO~2~ released into the environment. For instance, the first million tons of emissions cause $5 million in damage. \n\nThe right pair of columns shows the net economic impact of the profits generated from the emissions (see Table 1) minus the environmental harm.\n\nFill in the blanks with the total environmental harm from CO~2~ emission and compute the net economic impact." %>% md_render()

# if (output_format != "latex") {
#   tbl_2_cap = str_c("**Table 2:** ", tbl_2_cap)
# }

tbl_output = kable(costs, format = output_format, align = "crrrrrr", digits = 0,
      col.names = column_names, booktabs = T, escape = escape,
      position = "hbtp",
      caption = tbl_2_cap,
      caption.short = "Economic impacts of CO2 emissions.") %>% 
  add_header_above(c(" " = 1, "Environmental Harm" = 2, 
                     "Profits" = 2,
                     "Net Economic Impact" = 2)) %>%
  kable_styling(c("bordered","hover"), c("striped", "scale_down"))

if (output_format == "latex") {
   tbl_output = raw_latex(tbl_output)
}
tbl_output

```
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          1101,
                          'DECARB_COUNTRY_PROJECT',
                          'Project: Decarbonization Policy for One Country',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/decarb_project/lab_11/lab_11_instructions.pdf',
                          'decarbonization.bib',
                          '```{r setup, include=FALSE, cache = FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(cache = FALSE, echo = TRUE, fig.height=4, fig.width=7)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

if (!dir.exists(''data'')) dir.create(''data'')

# Load all of the following packages.
# Install any missing packages.
library(scales)
library(tidyverse)
library(tibble)
library(janitor)
library(knitr)
library(kayadata)

# This sets the default style for ggplot
theme_set(theme_bw(base_size = 15))

# Load basic utility scripts
source(''_scripts/format_md.R'', chdir = T)
```
# Introduction

This assignment will be more free-form than the lab assignments we have done
earlier in the semester.
For this assignment, you will build on the work you did for the bottom-up and
top-down decarbonization analysis and investigate how decarbonization might
play out in one specific country.
You can work on your own or in a team of two or three for this assignment.
You will choose one country, decide what that country''s greenhouse gas
emissions target should be for the year 2050, and then sketch out a plan for
how that country could achieve its goal.

You and your team will turn in a written report (one report
from the whole team is acceptable)
before midnight on Friday April 30.
The report is not meant to be an exhaustive research report. I expect a length
of around 5 pages of doublespaced
text (or equivalently, around 3 pages singlespaced)
per team member, plus appropriate figures, tables, and references.

Unlike previous assignments, you may use RMarkdown, Word, or any other
word-processing mode that you wish when writing your report, but I would like
to you produce PDF output (e.g., if you''re writing in Word, save a copy in PDF
format).

# Establishing a Goal

Briefly, look at what your country has pledged to do for emissions reduction
for the 2015 Paris Agreements
(<http://spappssecext.worldbank.org/sites/indc/Pages/INDCHome.aspx> and the
individual Country Briefs at 
<http://spappssecext.worldbank.org/sites/indc/Pages/Content_Brief.aspx>).
The individual country briefs are long and have a lot of material. 
However, there is a single page with the economy-wide mitigation targets,
whcih give a _target year_, a _target type_, and a number for the target type.
The European Union submitted a collective NDC rather than separate commitments
from each member country.

For instance, the United States pledged a target year of 2025, a target type
of "_absolute emission reduction compared to base year (%) 2005_", and
a target amount of 26--28%, which means
that the US has pledged that by 2025, it will have cut its annual greenhouse gas 
emissions 26--28% below the emissions in 2005.
The European Union has pledged a target year of 2030, a target type of
_absolute emissions reduction compared to base year (%) 1990_, and a 
target number of 40%, so it pledges that by 2030 it will have cut its annual
emissions 40% below what it was in 1990.

China chose a different type of target type. It chose a target year of 2030,
a target type of "_reduction in emission intensity per GDP compared to base
year (%) 2005_", and a target number of 60--65%.
This means that China is pledging that by 2030 it will have cut the economic
intensity of greenhouse gas emissions (the Kaya variable _ef_) 60--65% below
what it was in 2005.

A challenge for policy analysts is comparing the different kinds of targets that
different countries specified in their Nationally Destermined Contributions.

To choose your country''s goal for 2050 consider what the country is planning to 
do by 2030 or whichever target year it specifies in its 
Nationally Determined Contribution and
then consider how much more the country might reasonably plan to do by
2050 to make a fair contribution to reducing global greenhouse gas emissions
while also taking into account the need for less-developed nations to
grow their economies in order to lift people out of poverty.

For simplicity, I recommend that you focus on carbon dioxide emissions from
burning fossil fuels rather than on all different kinds of greenhouse gases.

There is no right answer, and it would be possible to write a 50-page
paper just on this part, but that is not what I want you to do.
Rather, just present a simple overview of the issues your country faces and how
you would choose a goal.

For instance, you could look back to 1965 (when the data on energy and emissions
in the `kayadata` package begins) and add up the total emissions from your
country and compare it to the total emissions of the world during that period
and then consider how your country''s fraction of total emissions compare to your
country''s fraction of the total world population or the total world Gross
Domestic Product (GDP).

You may want to refer to the table below, which lists emissions reductions from
2005--2050 for different parts of the world that would meet a global 36%
emissions target in 2050. This table comes from the IPCC''s representative
concentration pathway (RCP) database and is based on the pathway called
"RCP 2.6,"" which gives about a two-thirds probability of keeping global warming
below 2&deg; C.
However, this table was produced from an economic model and does not take
account of political and ethical considerations, such as fairness, so you are
not obliged to choose the same goal that this table lists for your country or
its region.

```{r rcp_26, echo=FALSE}
rcp_26 <- tribble(
  ~region, ~target_year, ~ref_year, ~reduction,
  "Australia/New Zealand", 2050, 2005,  0.82,
  "Canada",                2050, 2005,  0.72,
  "China",                 2050, 2005,  0.78,
  "India",                 2050, 2005,  0.73,
  "Japan",                 2050, 2005,  0.66,
  "South Korea",           2050, 2005,  0.67,
  "United States",         2050, 2005,  0.73,
  "Africa",                2050, 2005,  0.28,
  "Latin America",         2050, 2005,  0.40,
  "Middle East",           2050, 2005,  0.32,
  "Southeast Asia",        2050, 2005, -0.17,
  "Western Europe",        2050, 2005,  0.74,
  "World",                 2050, 2005,  0.36
)

rcp_26 %>% mutate(reduction = percent(reduction, 1)) %>% select(-ref_year) %>%
                  kable(digits = 0, align = c("c", "r", "r"),
                        col.names = c("Region", "Year",
                                      str_c("Reduction from ", 
                                            rcp_26$ref_year[1])))
```

# Realizing the Goal

Once you have chosen a goal, you should apply the same kinds of methods that we
used in the bottom-up and top-down decarbonization analyses to estimate what
your conuntry''s population and per-capita GDP may be 
**in 2050**, and what
the implications are for energy efficiency and the mixture of fuels that should
supply its energy needs. This is a place to research the country''s natural
resources, current energy supply, and opportunities to decarbonize.

For instance, if your country is mountainous with many rivers, you may want to
expand hydroelectricity.
On the other hand, if it is relatively flat, has few rivers, or if all the
major rivers already have dams and generators, then you may want to look at
other sources of energy.
If your country receives a lot of sunshine, you may want to emphasize solar
energy.
Don''t forget to think about nuclear energy as well as renewables like
hydroelectricity, wind, and solar.

I am not asking you to give a thorough engineering and economic assessment of
the energy transition, but to give a brief overview of the major opportunities
and obstacles to clean energy in your country and what you think would be the
best strategy for reducing emissions.

# Format

This is a lab report, not a formal research paper, so you do not need to
structure it as a formal paper.
My grading rubric for the written report will be:

* Thoughtful and sensible analysis of goals [30%]
* Thoughtful and sensible analysis of how to realize the goal [30%]
* Good use of the data for your country [20%]
* Organization of the report (do the parts fit together well and tell a clear
  story) [10%]
* Quality of writing [5%]
* Appropriate use of citations and references [5%]

You may choose to turn this in as an RMarkdown document (knitted to PDF, of
course) or a Word document (saved as PDF), or any other format that you have
rendered as PDF.

The key is that you explain clearly how you do your analysis.
You can either use RMarkdown or you can turn in a document written with a
word-processor and refer the reader to R scripts or an RMarkdown document
with "supporting information" that contains the details of your calculations
and quantitative analysis.

You will turn this assignment in by accepting the assignment on
GitHub Classroom, cloning the repository to your own computer, saving your
final products in the repository and committing and pushing them to GitHub.

# Data Sources
The `kayadata` package has data on the Kaya identity variables for 81 countries
and top-down projections for 78 countries.

If you are working on a country that''s not one of these, you may want to look
at additional data, such as the International Energy Agency''s energy and
emissions analyses.
These reports are extremely expensive to buy, but the Vanderbilt Library 
provides free online access to the World Energy Outlook reports from 1999--2020 
through the Vanderbilt library catalog. The 2020 report is available at this 
link
<https://doi-org.proxy.library.vanderbilt.edu/10.1787/20725302>.
**When you open this page, there will be a button to buy a PDF of the report for
more than $100, but you can ignore that. There are also buttons to download the 
PDF of the full report, or individual chapters, for free. Do not spend your
money buying something the library will give you legally and free.**
You can also get detailed data for energy use in the the OECD nations at
<https://doi-org.proxy.library.vanderbilt.edu/10.1787/379b6cdc-en>.

The U.S. Energy Information Administration
publishes detailed country profiles for a number of countries at 
<https://www.eia.gov/outlooks/ieo/>,
with data on many individual countries at
<https://www.eia.gov/beta/international/>
and brief country and regional analysis reports at
<https://www.eia.gov/beta/international/analysis.cfm>

This list of data sources is not exhaustive and you should feel free to explore
other sources of information, but don''t feel that you have to spend hours in the
library or the internet chasing down data. It is fine for this assignment to use
"good enough" data or to substitute estimates if you can''t find exact numbers
for what you''re looking for.
Just be clear about how you''re doing your analysis.
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          10401,
                          'CLOUD_LAPSE',
                          'Instructions for Lab #4',
                          'Jonathan Gilligan',
                          'instructions',
                          NULL,
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, cache = FALSE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

library(tidyverse)
library(jsonlite)
library(httr)
library(magrittr)
library(scales)
library(xml2)

theme_set(theme_bw(base_size = 10))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "modtran.R"), chdir = T)
source(file.path(script_dir, "rrtm.R"), chdir = T)
```
# Exercises with lapse rate, clouds, and water-vapor feedback.

In this lab, we will continue using MODTRAN and will introduce a new
climate model, RRTM. RRTM, which stands for "Rapid Radiative Transfer Model,"
is a radiative-convective model that uses code
from the radiative-transfer portion of a state-of-the-art globam climate model
called the "Community Climate System Model," developed at the National Center
for Atmospheric Research in Boulder CO.

The entire CCSM model runs on giant supercomputers, but this radiative transfer
module can run efficiently on an ordinary computer. In order to speed up the
calculations, RRTM does not calculate the entire longwave spectrum the way
MODTRAN does, but uses a simplified approximation that is much faster when 
the big climate models need to run this radiative transfer calculation 
roughly 52 quadrillion ($5.2 \times 10^{15}$) times in a simulation of 100 years
of the earth''s climate.

An advantage that RRTM has over MODTRAN, is that MODTRAN assumes that the 
atmosphere is static (none of the air moves), whereas RRTM allows for 
convective heat flow. This makes RRTM more realistic, even though it sacrifices
detail in its treatment of longwave radiation.

We will use RRTM to explore the role of convection in the earth system
and to examine the water-vapor feedback in the presence of convection.

You can run the RRTM model interactively on the web at 
<http://climatemodels.uchicago.edu/rrtm/index.html>
and I have also written a script that allows you to run it from R.

To run the model interactively, you can adjust various parameters, such as the
brightness of the sun, the albedo (it gives you a choice of many natural and
human-made surfaces, such as asphalt, concrete, forest, grassland, snow, ocean,
and the average for the earth) the concentrations of CO~2~ and methane,
the relative humidity, and the amount and type of high (cirrus) and 
low (stratus) clouds.

You can also introduce aerosols typical of different parts of the earth, such as
cities (with soot, sulfates, and other pollution), deserts (with blowing dust),
oceans (with sea spray and salt), and a Pinatubo-like volcanic eruption.

Like MODTRAN, the model does not automatically adjust the surface temperature. 
Instead, it calculates the upward and downward flux of longwave and shortwave 
radiation at 51 different levels of the atmosphere and reports whether the heat
flow is balanced (heat in = heat out) at the top of the atmosphere.

If the earth is _gaining_ heat, you can manually _raise_ the surface temperature 
until you balance the heat flow, and if the earth is _losing_ heat, you can
manually _lower_ the temperature.

## R Interface to RRTM

I have written an R function `run_rrtm` that allows you to manually run 
RRTM from R. To use this function, you need to include the line
`source("_scripts/rrtm.R")` or `source(file.path(script_dir, "rrtm.R"))`
to load it.

* `run_rrtm()` allows you to automatically download a file
  with the data from a MODTRAN run. You call it with the following arguments:
  
    * `filename` is the name of the file to save the data to. The function
      returns the output data, so it''s optional to specify a filename.
      
    * `co2_ppm` is the amount of CO~2~ in parts per million. The default is 400.
    
    * `ch4_ppm` is the amount of methane in parts per million. The default is 1.7.
    
    * `relative_humidity` is the relative humidity, in percent. The default is
      80%.
      
    * `T_surface` is the surface temperature, in Kelvin.
      The default (for 400 ppm CO~2~, etc.) is 284.42.
      You adjust this to restore radiative equilibrium after you change the
      parameters (amount of CO~2~, lapse rate, etc.).
      
    * `I_solar` is the brightness of the sun, in Watts per square meter.
      The default value is 1360.
      
    * `surface_type` is the type of surface (this is used to calcualte the 
      albedo). The default is `earth average. The options are:
      
      * "`earth average`": The average albedo of the earth (0.30)
      * "`asphalt`": Dark asphalt (0.08)
      * "`concrete`": Concrete (0.55)
      * "`desert`": Typical desert (0.40)
      * "`forest`": Typical forest (0.15)
      * "`grass`": Typical grassland (0.25)
      * "`ocean`": Ocean (0.10)
      * "`snow`": Typical snow (0.85)
      * "`ice`": Large ice masses covering ocean or land (0.60)
      * "`soil`": Bare soil (0.17)
      * "`custom": Custom albedo (if you choose this, you need to also supply 
        a value for `albedo`)
      
    * `tropopause_km` is the altitude of the tropopause, in kilometers above 
      sea level. The default value is 15. On the earth, the tropopause varies 
      from around 9 km at the poles to around 17 km near the equator.
        
    * `lapse_rate` is the lapse rate, in Kelvin per kilometer. The default is
      6. The dry adiabatic lapse rate is 10, so it''s physically impossible to
      have a lapse rate greater than 10 and results with `lapse_rate` 
      greater than 10 won''t make sense.
      
    * `low_cloud_frac` is the fraction (from 0--1) of the sky covered by 
      low (stratus) clouds. The default is 0.
      
    * `high_cloud_frac` is the fraction (from 0--1) of the sky covered by 
      high (cirrus) clouds. The default is 0.
    
    * `cloud_drop_radius` is the size of the water droplets in the clouds,
      in microns. The default is 10. (For reference, 10 microns is about the
      size of a red blood cell).
      You can reduce this to simulate the indirect aerosol effect.
    
    * `aerosols` allows you to set up the atmosphere with the kinds and 
      quantities of aerosols typical of a number of different environments.
      Options are:
      
        * "`none`": No aerosols
        * "`ocean`": Typical ocean aerosols (sea-spray, salt, etc.)
        * "`desert`": Typical desert aerosols (dust, sand)
        * "`city`": Typical city with soot (black carbon) and sulfate aerosols.
        * "`city just sulfates`": Just sulfate aerosols typical of a city.
        * "`city just soot`": Just soot (black carbon) aerosols typical of a 
          city.
        * "`land`": Typical rural land (dust, etc.)
        * "`polluted land`": Typical rural land suffering from pollution 
          (e.g., from farming)
        * "`antarctic`": Typical aerosols for Antarctica
        * "`volcano`": Similar sulfate and dust to the Mt. Pinatubo volcanic 
          eruption.

    Any arguments you don''t specify explicitly take on their default value.
    Thus, `run_rrtm(co2_ppm = 800, relative humidity = 10, T_surface = 300)`
    would run with all the default values, except for 800 ppm CO~2~, 
    relative humidity of 10%, and a surface temperature of 300 Kelvin.

    `run_rrtm` returns a list of data containing:
    
    * Basic parameters of the model run:
      * `T_surface`
      * `co2_ppm`
      * `ch4_ppm`
      * `I_solar`
      * `albedo`
      * `lapse_rate`
      * `tropopause_km`
      * `relative_humidity`
      * `aerosols`,
      * `low_cloud_frac`
      * `high_cloud_frac`
      * `cloud_drop_radius`
    * Results of the model calculations:
      * `Q`: The heat imbalance $I_{\text{in}} - I_{\text{out}}$
      * `i_in`: The net solar radiation absorbed by the earth 
        ($(1 - \alpha) I_{\text{solar}} / 4$)
      * `i_out`: The net longwave radiation emitted to space from the top 
        of the atmosphere
      * `profile`: A tibble containing a profile of the atmosphere 
        (altitude in km, pressure in millibar, and temperature in Kelvin)
      * `fluxes`: A tibble containing the fluxes (in Watts per square 
        meter) of longwave, shortwave, and total radiation going up and 
        down at 52 levels from the surface to the top of the atmosphere.
        The columns are `altitude` (km), `T` (temperature in K), 
        `P` (pressure in millibar), `sw_up` (upward shortwave), `sw_down`
        (downward shortwave), `lw_up` (upward longwave), `lw_down`
        (downward longwave), `total_up` (`sw_up` + `lw_up`), and
        `total_down (`sw_down` + `lw_down`).

There are also functions for reading RRTM data files and plotting RRTM data:

* `read_rrtm(file)` reads an RRTM file saved by `run_rrtm` and returns a 
  list of data just like the one returned by `run_rrtm`.

* `plot_heat_flows()`: plots the upward and downward fluxes of radiation from
  an RRTM file or data structure. You can call it either with 
  `plot_rrtm(file = "filename")` or `plot_rrtm(data = rrtm_data)`, where
  "`filename`" and "`rrtm_data`" stand for your own filename or rrtm data
  structure returned by `run_rrtm` or `read_rrtm`.
  
    You can also specify which wavelengths to plot. By default, it plots
    shortwave (SW), longwave (LW), and total (SW + LW), but you can specify
    one or more of `sw = FALSE`, `lw = FALSE`, or `total = FALSE` to 
    omit wavelengths.

## Example of running RRTM

Here is an example of running RRTM:

```{r rrtm_example}
default_rrtm = run_rrtm()

# Surface temperature:
default_rrtm$T_surface

# Heat imbalance:
default_rrtm$Q
```

This run has surface temperature 
`r format_md(default_rrtm$T_surface, digits = 2)` K and a heat imbalance of 
`r format_md(default_rrtm$Q, digits = 2)` Watts per square meter.

### Interpreting RRTM Results

We can plot the heat flows as a function of altitude:
```{r plot_rrtm_example}
plot_heat_flows(default_rrtm)
```

What you see in this plot are thick lines representing downward heat flow
and thin lines representing upward flow. The different colors represent
shortwave, longwave, and total (shortwave + longwave).

A few things to notice: At the top of the atmospere, at 
`r format_md(max(default_rrtm$fluxes$altitude), digits = 0)` km, 
there is very little longwave going down, but a lot of shortwave going down 
(around `r format_md(tail(default_rrtm$fluxes$sw_down, 1), digits = 0)` W/m^2^).
Conversely, there is a modest amount of shortwave going up
(around `r format_md(tail(default_rrtm$fluxes$sw_up, 1), digits = 0)` W/m^2^),
but a lot of longwave going up (around 
`r format_md(tail(default_rrtm$fluxes$lw_up, 1), digits = 0)` W/m^2^).

The upward shortwave radiation is sunlight reflected from the atmosphere and 
the earth''s surface.

The upward longwave radiation is emitted from the surface and the atmosphere.
You can see that the longwave radiation, both up and down, is greater closer to 
the surface, where temperatures are warmer, and smaller at higher altitudes, 
where the atmosphere is cooler.

If we look at the total radiation, we see that there is a good balance near the
top of the atmosphere (the upward and downward lines come together), but 
in the lower atmosphere, there is a serious imbalance with downward fluxes 
significantly larger than the upward ones.

This is a consequence of convection: The difference between the downward and 
upward radiative fluxes is taken up by convection, which moves heat upward
when warm air rises and cool air sinks.

### Determining Climate Sensitivity with RRTM

We can also use the RRTM model to study what happens when we double CO~2~:
```{r rrtm_warming}
rrtm_double_co2 = run_rrtm(co2_ppm = 800)
```
```{r rrtm_doubled_co2_balanced, echo=FALSE, include=FALSE}
new_ts = 286.9 # Kelvin
rrtm_double_co2_balanced = run_rrtm(co2_ppm = 800, T_surface = new_ts)
```
When we double CO~2~ without changing the surface temperature
(T~surface = `r format_md(rrtm_double_co2$T_surface, digits = 2)` K), 
this creates a heat imbalance of `r format_md(rrtm_double_co2$Q, digits = 2)`
W/m^2^. We can use the online interactive version of RRTM to adjust surface
temperature until the heat flows balance. The surface temperature where this
happens is `r format_md(new_ts, digits = 2)` K and we can paste it into our
R code:
```{r rrtm_sensitivity, echo = TRUE, include = TRUE, ref.label="rrtm_doubled_co2_balanced"}
```

When we set T~surface~ to 
`r format_md(rrtm_double_co2_balanced$T_surface, digits = 2)` K, the heat
imbalance becomes `r format_md(rrtm_double_co2_balanced$Q, digits = 2)`
Watts/m^2^. The climate sensitivity is the change in equilibrium 
T~surface~ when you double CO~2~: 
$\Delta T_{2\times \text{CO}_2} = `r format_md(rrtm_double_co2_balanced$T_surface, digits = 2)` \mathrm{K} - 
`r format_md(default_rrtm$T_surface, digits = 2)` \mathrm{K} = 
`r format_md(rrtm_double_co2_balanced$T_surface - default_rrtm$T_surface, digits = 2)`$ K.
You may remember that when we calculated the climate sensitivity with MODTRAN 
(using constant relative humidity to enable water-vapor feedback) we got 
$\Delta T_{2\times\text{CO}_2} = 1.21$ K for the tropical atmosphere (it''s 
smaller for the other atmospheres), so this shows that including convection in 
our calculations roughly doubles the climate sensivity.

## Enhancements to `read_modtran`

I have enhanced the MODTRAN functions:

* In addition to saving data to a file, `read_modtran` also returns
  data in a form that you can work with directly, without needing to
  use `read_modtran`:
  
```{r modtran_examples}
modtran_baseline = run_modtran(file = "_data/modtran_baseline.txt")
modtran_baseline$i_out
plot_modtran(modtran_baseline)
```

You can also leave out the `file` argument to `read_modtran` if you don''t need
to save the MODTRAN output to a file.
```{r modtran_example_2}
modtran_doubled_co2 = run_modtran(co2_ppm = 800)
modtran_doubled_co2$i_out
plot_modtran(modtran_doubled_co2, i_out_ref = modtran_baseline$i_out)
```

# New R and RMarkdown tricks

Sometimes you may want to use different text into your document, depending
on what the result of a calculation is.

For instance, I might have a function called `foo` that returns a number
and I want to write something different if `foo(x)` > x than if 
`foo(x)` < x. Here, the function `ifelse` can come in handy.
```{r define_foo}
foo = function(x) {
  x^2
}
```
Now I can write `ifelse(foo(x) < x, "less than", "greater than")`:
When x = 0.5, `foo(x)` is 
`r x = 0.5; ifelse(foo(x) < x, "less than", "greater than")` x,
but when x = 2.0, `foo(x)` is 
`r x = 2.0; ifelse(foo(x) < x, "less than", "greater than")` x.

You may have spotted a problem with the code above: What if `foo(x)` = x?
Then I need another `ifelse`: 
`ifelse(foo(x) < x, "less than", ifelse(foo(x) > x, "greater than", "equal to"))`.
This is cumbersome to type into your text, so you might want to write a function:
```{r compare_foo}
compare_f = function(f, x) {
  # f is a function
  # x is a number or a numeric variable
  result = f(x)
  ifelse(result < x, "less than",
         ifelse(result > x, "greater than", 
                "equal to"))
}
```
Now I can just write `compare_f(foo, x)`: 
When x = 0.5, `foo(x)` is `r compare_f(foo, 0.5)` x, but 
when x = 2.0, `foo(x)` is `r compare_f(foo, 2.0)` x and 
when x = 1.0, `foo(x)` is `r compare_f(foo, 1.0)` x.

This may seem kind of strange, but it can be helpful if you have a report
that you prepare regularly with different data and want to be able to 
update by running RMarkdown with different data sets, and have the text
adjust automatically to what the new numbers are.

This approach is used when businesses need to generate monthly reports 
(e.g., sales, finances, etc.) and want to automate the process with an
RMarkdown report template that can be used over and over with each new
month''s data.

It is also applicable to climate science, where many laboratories like to 
update their reports every month or every year with the latest climate data.

# Exercises

These are the exercises you will work for the lab this week.

### General Instructions

In the past three weeks, we focused on mastering many of the basics of using 
R and RMarkdown. For this week''s lab, when you write up the answers, I would
like you to think about integrating your R code chunks with your text.

For instance, you can describe what you''re going to do to answer the question, 
and then for each step, after you describe what you''re going to do in that
step, you can include an R code chunk to do what you just described, and then
the subsequent text can either discuss the results of what you just did
or describe what the next step of the analysis will do.

This way, your answer can have several small chunks of R code that build on
each other and follow the flow of your text.

## Chapter 5 Exercise

For this model, you will use the RRTM model, which includes both radiation and
convection.

### Exercise 5.1: Lapse Rate

Run the RRTM model in its default configuration and then vary the lapse rate 
from 0 to 10 K/km. For each value of the lapse rate, adjust the surface 
temperature until the earth loses as much heat as it gains (i.e., the value of
_Q_ in the `run_rrtm` model output is zero.)

It will probably be easier to do this with the interactive version of the RRTM
model at <http://climatemodels.uchicago.edu/rrtm/> than with the R interface
`run_rrtm`. 

a) Make a tibble containing the values of the lapse rate and the corresponding 
   equilibrium surface temperature, and make a plot with lapse rate on the 
   horizontal axis and surface temperature on the vertical axis.

b) Describe how the equilibrium surface temperature varies as the lapse rate 
   varies.

## Chapter 7 Exercises

### Exercise 7.2: Clouds and Infrared.

**Note:** this exercise only considers the effect of clouds on longwave
radiation and ignores the effect of clouds on albedo, which is also important.

a) Run the MODTRAN model with present-day CO~2~ (400 ppm) and a tropical atmosphere. 
   Plot the outgoing infrared spectrum. 
   
    Run MODTRAN four times: first with no clouds, and then with three different
    kinds of clouds: standard cirrus, altostratus, and stratus. These correspond
    to high, medium, and low-altitude clouds.

    Describe the important differences between the spectra for the four cases.
    Describe the differences in the intensity of outgoing infrared radiation
    $I_{\text{out}}$ for the four cases.

    How do the four spectra compare for the 700 cm^-1^ band (where CO~2~ absorbs
    strongly) and the 900 cm^-1^ band (in the atmospheric window)?

    Which kind of cloud has the greatest impact on outgoing infrared light?
    Why?

b) Now set `atmosphere` to `"midlatitude winter"`, set `clouds` to `"none"`,
   and set the sensor altitude to 0 km (`altitude_km = 0`) and make the sensor 
   look up (`looking = "up"`). 
   This means your sensor is on the ground looking up at the longwave radiation 
   coming down from the atmosphere to the ground instead of looking down from 
   the top of the atmosphere at the longwave radiation going out to space.
   
    Run MODTRAN first with `h2o_scale = 1` (the default), and then with
    `h2o_scale = 0` (no water vapor).
    
    Plot the two spectra and compare them. Discuss why you see what you see:
    
    * For the atmosphere with no water vapor, compare the parts of the 
      spectrum corresponding to the strong CO~2~ absorption 
      (roughly 600--750 cm^-1^) and the infrared window 
      (roughly 800--1200 cm^-1^). 
      
        * Which corresponds to higher emission temperatures and which to lower temperatures? 
        * Why do you think this is?
    
    * For the atmosphere with normal water vapor (`h2o_scale = 1`), how does 
      water vapor change the spectrum you see from the ground?
      
        * Does it make the longwave radiation brighter (warmer) or dimmer
          (cooler)?
        * Why do you think this is?
    
c) Keeping the same settings for `atmosphere = "midlatitude winter"`,
   `altitude_km = 0`, and `looking="up"`, set `h2o_scale=1`
   and run MODTRAN first with no clouds, then with three kinds of clouds:
   standard cirrus, altostratus, and stratus (`clouds="none"`, 
   `clouds="standard cirrus"`, `clouds="altostratus"`, and `clouds="stratus"`).
   
    When we''re looking up at the clouds, the base (bottom) of the clouds form
    a layer that is opaque to longwave radiation, with an emissivity of 1
    (i.e., a perfect black body).
    
    Cirrus clouds are very high (around 10 km above sea level), 
    altostratus clouds are at a medium height (with a base around 2.4 km), 
    and stratus clouds are very low (with a base around 0.33 km).

    For each run examine  
    $I_{\text{down}}$. (Remember that the variable `i_out` in the MODTRAN
    output measures the intensity of longwave radiation reaching the sensor.
    In this exercise, the sensor is on the ground looking up, so `i_out` 
    measures the downward radiation reaching the ground.)

    Describe how $I_{\text{down}}$ compares for the four conditions.
    
        * Do the clouds have a heating or cooling effect?
        * Which clouds have the greatest effect?
        * What does this suggest about how clouds affect the ground temperature?
        
    As you do this exercise, think about a winter night with clear skies 
    versus a winter night with cloudy skies.
    
d) Plot the longwave radiation spectra for the four MODTRAN runs from part (c).
   Which parts of the spectrum do the different clouds affect the most?
   (Compare the infrared window to the parts of the spectra where CO~2~ 
   absorbs.)
   
    * Look at two parts of the spectrum: the infrared window 
      (roughly 800--1200 cm^-1^) and the region where CO~2~ absorbs strongly 
      (roughly 600--750 cm^-1^).
   
      Why do you suppose the high, medium, and low clouds affect the two
      different spectral regions the way they do?
      
    * In which part of the spectrum do the clouds affect the downward longwave
      radiation the most?

### Exercise 7.3: Clouds and Visible Light.

For this exercise, you will use the RRTM model to examine climate sensitivity
and the water vapor feedback in a radiative-convective atmosphere.

a) First, run the RRTM model with its default parameters (400 ppm CO~2~) and 
   note the surface temperature (`T_surface`).
   
    Then run it again with doubled CO~2~ concentration (`co2 = 800`).
    Adjust the surface temperature to bring the heat imbalance `Q` to zero
    (it may be easier to do this with the interactive model at 
    <http://climatemodels.uchicago.edu/rrtm/> and then paste the new surface
    temperature into your R code).
    
    The change in surface temperature between the 400 ppm CO~2~ and 
    800 ppm CO~2~ ($\Delta T_{2 \times \text{CO}_2}$) runs is the 
    **climate sensitivity**. What is it?

b) Now run the RRTM model again, for 400 and 800 ppm CO~2~, but this time 
   setting `relative_humidity = 0` (this turns off the water vapor feedback).
   At each concentration of CO~2~, adjust `T_surface` to bring the heat into
   balance (so the output has `Q` equal to zero). Now what is the climate 
   sensitivity $\Delta T_{2 \times \text{CO}_2}$?
   
c) Compare the climate sensitivity ($\Delta T_{2 \times \text{CO}_2}$) in 
   part (a) (with water-vapor feedback) and part (b) (without water-vapor 
   feedback).
   The amplification factor for the water-vapor feedback is the ratio of the 
   climate sensitivity with water-vapor feedback to the sensitivity without the 
   feedback. 
   What is it?
  
'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          10701,
                          'PLEISTOCENE',
                          'Instructions for Lab #7: The Pleistocene Ice Ages',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/lab_07/lab_07_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

if (!dir.exists(data_dir)) dir.create(data_dir)

library(tidyverse)
library(xml2)
library(tsibble)

theme_set(theme_bw(base_size = 15))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "geocarb.R"), chdir = T)
```
# The Pleistocene Ice Ages

TBA'
                      );

INSERT INTO lab_items (
                          lab_item_id,
                          lab_grp_key,
                          lab_document_title,
                          doc_author,
                          doc_filename,
                          lab_document_pdf_url,
                          bibliography,
                          lab_document_markdown
                      )
                      VALUES (
                          10801,
                          'DECARB_TOP_DOWN',
                          'Instructions for Top-Down Decarbonization Policy Analysis',
                          'Jonathan Gilligan',
                          'instructions',
                          '/files/lab_docs/decarb_lab_top_down/decarb_top_down_instructions.pdf',
                          NULL,
                          '```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)

is_output_html <- function() {
  is_html <- TRUE
  header <- rmarkdown:::parse_yaml_front_matter(
    readLines(knitr::current_input())
  )
  if ("output.blogdown::html_page" %in% names(header)) {
    is_html <-  TRUE
  } else if ("output" %in% names(header)) {
    if (is.list(header$output)) {
      output <- names(header$output)[1]
    } else {
      output <- header$output[1]
    }
    if (str_detect(output, regex("(pdf|word)_document", ignore_case = TRUE))) {
      is_html <- FALSE
    }
  }
  is_html
}


getOutputFormat <- function() {
  output <- rmarkdown:::parse_yaml_front_matter(
    readLines(knitr::current_input())
    )$output
  if (is.list(output)){
    return(names(output)[1])
  } else {
    return(output[1])
  }
}

data_dir = "_data"
script_dir = "_scripts"

library(magrittr)
library(tidyverse)
library(lubridate)
library(knitr)
library(broom)
library("kayadata")

theme_set(theme_bw(base_size = 15))

if (!dir.exists(data_dir)) dir.create(data_dir)

source(file.path(script_dir, "format_md.R"), chdir = T)

due_date_1 <- date("2018-10-30")
due_date_2 <- date("2018-11-12")

long_due_date_1 <- stamp("Monday, March 1")(due_date_1)
short_due_date_1 <- stamp("Mar. 1")(due_date_1)

long_due_date_2 <- stamp("Monday, March 1")(due_date_2)
short_due_date_2 <- stamp("Mar. 1")(due_date_2)

start_year <- max(get_kaya_data("United States")$year, na.rm = T)
after_start_year <- start_year + 1

eia_report_year <- max(get_top_down_values("United States")$year, na.rm = T)
donut_year <- max(kayadata::get_fuel_mix("United States")$year, na.rm = T)

IEO_url <- "http://www.eia.gov/forecasts/ieo/"
EIA_table_url <- "http://www.eia.gov/oiaf/aeo/tablebrowser"

top_down_country_assignments <- bind_rows(
  tibble(class = "Undergraduates", 
         region = c("World", "United States", "China")),
  tibble(class = "Grad Students", 
         region = c("World", "United States", "China",
                     "India", "Brazil"))
)

rcp_26 <- tribble(
  ~region, ~target_year, ~ref_year, ~reduction,
  "Australia/New Zealand", 2050, 2005,  0.82,
  "Canada",                2050, 2005,  0.72,
  "China",                 2050, 2005,  0.78,
  "India",                 2050, 2005,  0.73,
  "Japan",                 2050, 2005,  0.66,
  "South Korea",           2050, 2005,  0.67,
  "United States",         2050, 2005,  0.73,
  "Africa",                2050, 2005,  0.28,
  "Latin America",         2050, 2005,  0.40,
  "Middle East",           2050, 2005,  0.32,
  "Southeast Asia",        2050, 2005, -0.17,
  "Western Europe",        2050, 2005,  0.74,
  "World",                 2050, 2005,  0.36
)

target_year <- rcp_26$target_year[1]
ref_year <- rcp_26$ref_year[1]
current_year <- get_fuel_mix("World")$year[1]
```
# Introduction

In this lab, you will use a top-down approach to figure out how much new energy 
infrastructure you would need to install for each country or region in order
to meet the emissions-reduction goals for `r target_year`.


You will analyze the same countries and regions you did in the bottom-up lab last 
week:
```{r country_assignments, echo=FALSE}
top_down_country_assignments %>% group_by(class) %>%
  summarize(region = str_c(region, collapse = ", ")) %>%
  ungroup() %>% 
  mutate(class = ordered(class, 
                         levels = c("Undergraduates", "Grad Students"))) %>%
  arrange(class) %>%
  kable()
```

The lab report is due (knitted to PDF or Word document, committed, and pushed
to GitHub) by Monday Nov.\ 12.

# The Assignment:

## Outline:

1. For each country, examine the top-down projections for the Kaya 
   variables for the year `r target_year`. How many quads of energy does the 
   Energy Information Administration preduct that the country will use
   in `r target_year`?
2. Examine the mix of energy sources that the country used in `r current_year`. 
3. If the  country uses the same percentages of each energy source in 
   `r target_year` that it did in `r current_year`, 
   calculate how much energy the country would use from each energy source in
   `r target_year` and how much CO~2~ each energy source would emit.
   Add these up to get the total CO~2~ emissions _F_ in `r target_year` under a
   "business-as-usual" scenario.
4. Calculate the policy target for _F_ in the year `r target_year`.
5. Calculate how much the country would have to reduce its CO~2~ emissions  in 
   `r target_year` below business-as-usual to meet its policy goal.
6. Allocate the emissions reduction from step 5 across the different fuels and 
   calculate the amount of fossil fuel energy the country would need to replace 
   with clean energy by `r target_year` to meet its policy goal.
7. Calculate how many clean power plants the country would need to build 
   between now and `r target_year` to produce this clean energy. 
   
    Report this as the total number, the number per year, and  the number per 
    week or per day if appropriate.
  
    Start by doing this calculation for nuclear energy plants, then repeat the 
    calculation for solar, and then for wind.
8. Suppose instead that the country or region supplied its growing energy 
   demand with coal. Calculate how many new coal power plants it would have
   to build between now and `r target_year` to supply the growing energy 
   demand. 
   
    Calculate the number of new coal power plants the country would have to 
    build and how much additional CO~2~ that would put into the atmosphere
    every year.

## Detailed Instructions:

For each country:

1. Use the function `get_top_down_values()` from the 
   `kayadata` package to examine the top-down projections for the Kaya 
   variables for the year `r target_year`. How many quads of energy does the 
   Energy Information Administration preduct that the country will use
   in `r target_year`?
2. Use the `get_fuel_mix()` function to get the mix of energy sources that the
   country used in `r current_year`. 
3. If the  country uses the same percentages of each energy source in 
   `r target_year` that it did in `r current_year`, calculate the number of
   quads and the greenhouse gas emissions from each energy source 
   in `r target_year`, if the total energy consumed in that year
   is the value for _E_ that you looked up in step (1).
   
    First, multiply the total energy demand _E_ in `r target_year` by the 
    percentages in the fuel mix to get the number of quads for that energy
    source. Then multiply the number of quads for each energy source by the 
    emissions factor for that fuel to get the emissions from that energy
    source.
    
    Finally, add up the emissions from all of the fuel sources to get the total
    emissions for `r target_year`, under a "business-as-usual" scenario, where
    the mix of energy sources does not change.
    
    **Hint:** You can combine data frames using `join` functions to make this
    easier. Here is an example, which I have worked for Mexico. You can
    do the same thing for other countries or regions:
    ```{r example_fuel_mix}
    E_2050 <- get_top_down_values("Mexico") %>% 
      filter(year == 2050) %$% E
    fm <- get_fuel_mix("Mexico")
    # Calculate the mix of energy sources for 2050
    fm_2050 <- fm %>% mutate(quads = E_2050 * frac)
    kable(fm, digits = 2)
    ```
    
    ```{r example_fuel_mix_2}
    # Get the emission factors
    factors <- emissions_factors()
    kable(factors, digits = 2)
    ```
    
    ```{r example_fuel_mix_3}
    # Combine the emission factors data frame with the 
    # fuel mix data frame:
    fm_2050 <- fm_2050 %>% left_join(factors, by = "fuel") %>%
      # This line is to fix a problem with the kaya_data package,
      # because I forgot to put an emissions factor for Hydro power.
      mutate(emission_factor = replace_na(emission_factor, 0))
    kable(fm_2050, digits = 2)
    ```
    
    ```{r example_fuel_mix_4}
    fm_2050 <- fm_2050 %>% mutate(emissions = quads * emission_factor)
    
    # Summarize by adding up the emissions from each fuel source.
    total_emissions_2050 <- fm_2050 %>% 
      summarize(emissions = sum(emissions)) %$% emissions
    ```
    
4. Get the Kaya identity data for the country from `get_kaya_data()` and look
   up the CO~2~ emissions _F_ in `r ref_year`. Then use the policy goal for 
   emissions reduction from the data frame `rcp_26` to calculate the policy 
   target for _F_ in the year `r target_year`. You did this calculation last
   week as part of the bottom-up analysis.
5. Compare the projected "business as usual" emissions from step (3) to the 
   policy target from step (4) to figure the total amount of emissions you 
   would need to cut by converting fossil fuel energy sources to clean sources.
6. Use the top-down procedure I presented in class last week to allocate the
   emissions reduction that you calculated in step (5) across the different 
   energy sources for `r target_year`, that you calculated in step (3). 
   
    How many million metric tons of CO~2~ would you cut from coal, natural gas, 
    and oil? How many quads of energy from that fuel would you need to replace
    with new clean energy?
    
    Add up all of the clean energy requirements to calculate the number of quads
    of clean energy that the country would need to add between now and 
    `r target_year` to meet the policy goal.
7. Calculate how many clean generating plants you would need to build between
   now and `r target_year` to produce this clean energy. Report this as the
   total number, the number per year, and  the number per week or per day if
   the number is large.
  
    Start with nuclear, then do the calculation for solar and then for wind.
    
    You can look up the nameplate capacity and the capacity factor for 
    different kinds of power plants (clean and dirty) from the function 
    `generating_capacity()`.  
    Remember that the average number of megawatts a power source supplies over 
    a year is the nameplate capacity times the capacity factor.
    Remember that one quad equals 
    `r format_md(megawatts_per_quad(), comma = TRUE)` megawatts.
8. Suppose instead that the country or region supplied its growing energy 
   demand with coal. Calculate how many new coal power plants it would have
   to build between now and `r target_year` to supply the growing energy 
   demand. 
   
    Calculate the number of new coal power plants the country would have to 
    build and how much additional CO~2~ that would put into the atmosphere
    every year.
'
                      );


-- Table: lab_solutions
CREATE TABLE lab_solutions (
    lab_sol_id       INTEGER,
    lab_grp_key      TEXT,
    lab_sol_pub_key  TEXT,
    lab_sol_title    TEXT,
    lab_sol_author   TEXT,
    lab_sol_filename TEXT,
    lab_sol_pdf_url  TEXT,
    lab_sol_markdown TEXT
);

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              101,
                              'INTRO',
                              'SOL_INTRO',
                              'Lab #1 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_01/lab_01_answers.pdf',
                              '
```{r setup, include=FALSE}
# This section sets up some options on knitr for processing the RMarkdown file
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)
```
```{r initialize, include=FALSE}
# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
library(tidyverse)
library(stringr)

script_dir = "_scripts"

source(file.path(script_dir, "format_md.R"), chdir =  TRUE)
```
# Exercises on Units, Energy, and Power

## Exercise 1

> This exercise asks you to calculate how many Joules of energy you
> can get for a dollar from different sources of energy.

### Part 1(a)

> (a) A gallon of gasoline carries with it about 1.3 &times; 10^8^ J of energy. 
> Given a price of $3 per callon, how many Joules can you get for a dollar?

_Put your own text and R code here to answer Exercise 1(a). Do the calculation
using R and also explain what you are doing with your text, following the 
model of the worked example above._

```{r ex_1_a}
joules_per_gal_gasoline = 1.3E8
dollars_per_gal_gasoline = 3
joules_per_dollar_gasoline = joules_per_gal_gasoline / dollars_per_gal_gasoline
```

**Answer:** You can get 
`r format_md(joules_per_dollar_gasoline, digits = 1, comma = TRUE)` 
Joules per dollar from gasoline. 

### Part 1(b)

> (b) Electricity goes for about $0.05 per kilowatt hour. A kilowatt hour is 
> just a weird way to write Joules because a watt is a joule per second, and a 
> kilowatt hour is the number of Joules one would get from running 1000 W for 
> one hour (3,600 seconds). 
> How many Joules of electricity can you get for a dollar?


A kilowatt hour is the energy from using 1000 Watts for 1 hour, or 3,600 
seconds. A Watt is 1 Joule per second, so 
1 kWh = 1000 Watts &times; 3600 seconds.

```{r ex_1_b}
joules_per_kwh = 1000 * 3600
dollars_per_kwh = 0.05
joules_per_dollar_elec = joules_per_kwh / dollars_per_kwh
```

**Answer:** You can get 
`r format_md(joules_per_dollar_elec, digits = 1, comma = TRUE)` 
Joules per dollar from electricity. 

### Part 1(c)

> (c) A standard cubic foot of natural gas carries with it about 
> 1.1 &times; 10^6^ Joules of energy. 
> You can get about 5 &times; 10^5^ British Thermal Units (BTUs) of gas
> for a dollar, and there are about 1,030 BTUs in a standard cubic foot. 
> How many Joules of energy in the form of natural gas can you get for a dollar?

```{r ex_1_c}
joules_per_scf_gas = 1.1E6
btu_per_dollar = 5E5
btu_per_scf = 1030
scf_per_dollar = btu_per_dollar / btu_per_scf
joules_per_dollar_nat_gas = joules_per_scf_gas * scf_per_dollar
```

**Answer:** You can get 
`r format_md(joules_per_dollar_nat_gas, digits = 1, comma = TRUE)` 
Joules per dollar from natural gas. 

### Part 1(d)

> (d) A ton of coal holds about 3.2 &times; 10^10^ J of energy and costs 
> about $40.
> How many Joules of energy in the form of coal can you get for a dollar?


```{r ex_1_d}
joules_per_ton_coal = 3.2E10
dollars_per_ton_coal = 40
joules_per_dollar_coal = joules_per_ton_coal / dollars_per_ton_coal
```

**Answer:** You can get 
`r format_md(joules_per_dollar_coal, digits = 1, comma = TRUE)` 
Joules per dollar from coal. 

### Part 1(e)

> (e) Corn oil costs about $0.10 per fluid ounce wholesale. A fluid ounce 
> carries about 240 dietary Calories (which a scientist would call 
> kilocalories). 
> A dietary Calorie is about 4200 J. 
> How many Joules of energy in the form of corn oil can you get for a dollar?

```{r ex_1_e}
calories_per_oz_oil = 240
joules_per_calorie = 4200
dollars_per_oz_oil = 0.10
joules_per_oz_oil = calories_per_oz_oil * joules_per_calorie
joules_per_dollar_oil = joules_per_oz_oil / dollars_per_oz_oil
```

**Answer:** You can get 
`r format_md(joules_per_dollar_oil, digits = 1, comma = TRUE)` 
Joules per dollar from corn oil. 

### Part 1(f)

> (f) Now we compare the different energy sources.
> Rank these five energy sources from cheap to expensive. 
> What is the range of prices per Joule?


```{r ex_1_f}
dollars_per_joule_coal = 1 / joules_per_dollar_coal
dollars_per_joule_nat_gas = 1 / joules_per_dollar_nat_gas
dollars_per_joule_gasoline = 1 / joules_per_dollar_gasoline
dollars_per_joule_oil = 1 / joules_per_dollar_oil
dollars_per_joule_elec = 1 / joules_per_dollar_elec
```

**Answer:** 

* Coal = 
  $`r format_md(dollars_per_joule_coal, digits = 2, format = "scientific")` 
  per joule
* Natural gas = 
  $`r format_md(dollars_per_joule_nat_gas, digits = 2, format = "scientific")` 
  per joule
* Electricity = 
  $`r format_md(dollars_per_joule_elec, digits = 2, format = "scientific")` 
  per joule
* Gasoline = 
  $`r format_md(dollars_per_joule_gasoline, digits = 2, format = "scientific")` 
  per joule
* Corn oil = 
  $`r format_md(dollars_per_joule_oil, digits = 2, format = "scientific")` 
  per joule


## Exercise 2

> In this exercise, we compare the energy it took to produce the concrete in the
> Hoover Dam (outside Las Vegas) to the energy the dam produces from 
> hydroelectric generation. 

### Part 2(a)

> The Hoover Dam produces 2 &times; 10^9^ W of electricity. 
> It is composed of 7 &times; 10^9^ kg of concrete.
> It requires 1 MJ of energy (1 megajoule, 1,000,000 Joules) to produce 
> each kilogram of concrete. 
> How much energy did it take to produce the concrete for the dam? 

```{r ex_3_a}
kg_concrete = 7E9
joules_per_kg_concrete = 1E6
hoover_concrete_joules = kg_concrete * joules_per_kg_concrete
```

**Answer:** It took 
`r format_md(hoover_concrete_joules, digits = 1, format = "scientific")` Joules
to produce the concrete for the Hoover dam.

### Part 2(b)

> How long is the payback time for the dam to generate as much energy in 
> electricity as it took to produce the concrete?

The electric power the dam generates is measured in Watts, which are Joules per
second. If we divide the energy to produce the concrete by the power the dam
produces, the result will be the number of seconds for the dam''s electric 
generation to pay back the energy it took to produce the concrete.

```{r ex_2_b}
hoover_power_watts = 2E9
hoover_payback_seconds = hoover_concrete_joules / hoover_power_watts
seconds_per_day = 24 * 3600
hoover_payback_days = hoover_payback_seconds / seconds_per_day
```

**Answer:** It takes 
`r format_md(hoover_payback_seconds, digits = 1, comma = TRUE)` seconds,
or `r format_md(hoover_payback_days, digits = 1, comma = TRUE)` days, for the 
electricity generated by the Hoover dam to repay the energy it took to produce
the concrete in the dam.

## Exercise 3

> It takes approximately 2.0 &times; 10^9^ J of energy 
> to manufacture 1 m^2^ of crystalline-silicon photovoltaic cell.
> An average of 250 W/m^2^ falls on the Earth. 
> Assume that the solar cell is 18% efficient (that is, it converts 18% of
> the energy from sunlight into electricity). 
> Calculate how long it would take for the solar cell to repay the 
> energy it took to manufacture it.

```{r ex_3}
joule_per_sq_m_pv = 2E9
i_sun = 250
efficiency = 0.18
pv_power_watts = i_sun * efficiency
pv_payback_sec = joule_per_sq_m_pv / pv_power_watts
pv_payback_days = pv_payback_sec / seconds_per_day
days_per_year = 365
pv_payback_years = pv_payback_days / days_per_year
```

**Answer:** It takes 
`r format_md(pv_payback_sec, digits = 1, format = "scientific")` seconds,
or `r format_md(pv_payback_days, digits = 1)` days, or 
`r format_md(pv_payback_years, digits = 2)` years.

## Exercise 4 (Grad students only)

Only graduate students are required to do this exercise.

> This is one of those job-interview questions to see how creative you are, 
> analogous to, "How many airplanes are over Chicago at any given time?" 
> You need to make stuff up to get a rough estimate and demonstrate your 
> ability to think creatively. 
> The question is: 
> _What is the efficiency of energy production from growing corn?_

### Part 4(a)
 
> (a) Assume that sunlight deposits 250 W/m^2^ of energy on a corn field, 
> averaging over the day-night cycle. 
> There are approximately 4,200 J per dietary Calorie. 
> How many Calories of energy are deposited on a square
> meter of field over the growing season? 
>
> (Note: the word "calorie" has two different meanings. Physicists and chemists, 
> use "calorie" (with a lower-case "c") to refer to a thermodynamic unit of heat, 
> but nutritionists use the word Calorie (with a capital ''C'')
> to mean 1 kilocalorie (1000 thermodynamic calories). When you see "Calories" 
> on a food label, it means kilocalories. 
> To keep this exercise simple, I have written it so you only need to think in 
> terms of dietary Calories.)

We have to guess at what a growing season is. From my experience growing 
sweet corn in a home garden, I''d estimate around 90 days.

```{r ex_4_a}
i_sun = 250
joules_per_calorie = 4200
seconds_per_day = 24 * 3600
growing_season_days = 90
growing_season_seconds = growing_season_days * seconds_per_day
joules_sun_per_season = i_sun * growing_season_seconds
calories_sun_per_season = joules_sun_per_season / joules_per_calorie
```
**Answer:** Around 
`r format_md(calories_sun_per_season, digits = 1, format = "scientific")`
Calories of sunlight fall on each square meter of farmland over a typical growing
season.

### Part 4(b)
 
> (b) Now guess how many ears of corn grow per square
> meter, and guess what the number of dietary Calories is that you get for eating 
> an ear of corn. Compare the sunlight energy with the corn energy to get the 
> efficiency.

I estimate that a corn plant is roughly circular, with a diameter of about one
foot (30 centimeters) and that its leaves fill about half the area of the 
circle.

I estimate that a corn plant produces about 2 ears of corn on average, and
that each ear has about 100 Calories of nutritional energy.

```{r ex_4_b}
r_corn = 0.15 # convert cm to meters
area_corn = pi * r_corn^2 * 0.5 # this is in square meters
ears_per_plant = 2
calories_per_ear = 100
dietary_calories_per_plant =  calories_per_ear * ears_per_plant
calories_sun_per_plant = area_corn * calories_sun_per_season
efficiency = dietary_calories_per_plant / calories_sun_per_plant
```

**Answer:** Based on this estimate, corn plants are about
`r format_md(100 * efficiency, digits = 2)`% efficient at
in converting solar energy into nutritional energy.

This is much smaller than the 18% efficiency of photovoltaic solar cells at 
converting solar energy to electricity.
'
                          );

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              201,
                              'DATA',
                              'SOL_DATA',
                              'Lab #2 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_02/lab_02_answers.pdf',
                              '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

if (! require("pacman")) {
  stop(paste0(''Before you can knit this file, you need to install the '',
              ''"pacman" package.\n'',
              ''In RStudio, click on the "Packages" tab and click "Install",\n'',
              ''Then type "pacman" in the "Packages" box and click on '',
              ''"Install".\n'',
              ''After the package installs, you should be good to go.''))
}

library(pacman)
p_load(knitr, tidyverse, slider, broom)

theme_set(theme_bw(base_size = 15))

data_dir = "_data"
script_dir = "_scripts"

# Create a data directory if one does not exist.
if (!dir.exists(data_dir)) dir.create(data_dir)

source(file.path(script_dir, ''utils.R''), chdir = T)
source(file.path(script_dir, ''format_md.R''), chdir = T)
source(file.path(script_dir, ''modtran.R''), chdir = T)
source(file.path(script_dir, "layer_diagram.R"), chdir = TRUE)

epsilon = 1
alpha = 0.30
sigma = 5.67E-8
I_solar = 1350

mlo_url = str_c("https://scrippsco2.ucsd.edu/assets/data/atmospheric/stations/",
                "in_situ_co2/monthly/monthly_in_situ_co2_mlo.csv")

giss_url = "https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv"
```
```{r download_mlo_data, eval = TRUE, echo=FALSE, include=FALSE, message=FALSE}
download.file(mlo_url, ''_data/mlo_data.csv'')
```
```{r import_mlo_data, eval=TRUE, echo=FALSE, include=FALSE, message=FALSE}
mlo_data = read_csv(''_data/mlo_data.csv'', 
                    skip = 57,  # skip the first 57 rows
                    col_names = c(''year'', ''month'', ''date.excel'', ''date'',
                                  ''co2.raw'', ''co2.raw.seas'', 
                                  ''co2.fit'', ''co2.fit.seas'',
                                  ''co2.filled'', ''co2.filled.seas''),
                    col_types = ''iiiddddddd'', 
                    # ^^^ the first three columns are integers and the  next 
                    # 7 are real numbers
                    na = ''-99.99'' 
                    # ^^^ interpret -99.99 as a missing value
)
```
```{r simplify_mlo_data, include = FALSE, eval=TRUE, echo=FALSE}
mlo_simple = mlo_data %>% select(year, month, date, co2 = co2.filled)
```
```{r calc_mlo_trend, include = FALSE, eval=TRUE, echo=FALSE}
co2_fit = lm(co2 ~ date, data = mlo_simple)
```
```{r co2_trend_value, include=FALSE, eval=TRUE, echo=FALSE}
co2_trend = coef(co2_fit)[''date'']
```
# Part 1 Exercises

## Exercises with CO~2~ Data from the Mauna Loa Observatory

Using the `select` function, make a new data tibble called `mlo_seas`, from 
the original `mlo_data`, which only has two columns: `date` and 
`co2.seas`, where `co2.seas` is a renamed version of `co2.filled.seas` from the 
original tibble.

```{r make_mlo_seas, include=TRUE}
mlo_seas = select(mlo_data, date, co2.seas = co2.filled.seas)
```

Now plot this with `co2.seas` on the _y_ axis and `date` on the _x_ axis,
and a linear fit:

```{r plot_mlo_seas, include = TRUE, message = FALSE}
ggplot(mlo_seas, aes(x = date, y = co2.seas)) +
  geom_line() +
  geom_smooth(method = "lm") +
  labs(x = "Year", y = "Seasonally adjusted CO2")
```

Now fit a linear function to find the annual trend of `co2.seas`. Save
the results of your fit in a variable called `trend.seas`.

```{r fit_mlo_seas, include=TRUE}
trend.seas = lm(co2.seas ~ date, data = mlo_seas)
seasonal_trend = coef(trend.seas)[''date'']
```

Compare the trend you fit to the raw `co2.filled` data to the trend you fit
to the seasonally adjusted data.

**Answer:**
The trend in the seasonally adjusted data is 
`r format_md(seasonal_trend, digits = 2)` ppm CO2 per year, which is very 
close to the trend we fit to the raw data 
(`r `format_md(co2_trend, digits = 2)`).

## Exercises with Global Temperature Data from NASA

We can also download a data set from NASA''s Goddard Institute for Space Studies
(GISS), which contains the average global temperature from 1880 through the 
present.

The URL for the data file is 
<`r giss_url`>

Download this file and save it in the directory `_data/global_temp_land_sea.csv`.

```{r download_giss_temp, include=TRUE, message=FALSE}
giss_temp_file = "_data/global_temp_land_sea.csv"
download.file(giss_url, giss_temp_file)
```

* Open the file in Excel or a text editor and look at it.

* Unlike the CO~2~ data file, this one has a single line with the 
data column names, so you can specify `col_names=TRUE` in `read_csv`
instead of having to write the column names manually.

* How many lines do you have to tell `read_csv` to skip?

* `read_csv` can automatically figure out the data types for each column,
  so you don''t have to specify `col_types` when you call `read_csv`

* This file uses `***` to indicate missing values instead of `-99.99`, so you
  will need to specify `na="***"` in `read_csv`.  
  
    For future reference,
    if you have a file that uses multiple different values to indicate missing
    values, you can give a vector of values to `na` in `read_csv`:
    `na = c(''***'',''-99.99'', ''NA'', '''')` would tell `read_csv` that if it finds 
    any of the values "***", "-99.99", "NA", or just a blank with nothing in it,
    any of those would correspond to a missing value, and should be indicated by
    `NA` in R.
  
Now read the file into R, using the `read_csv` function, and assign
the resulting tibble to a variable `giss_temp`

```{r read_giss_temp, include=TRUE, message=FALSE}
giss_temp = read_csv(giss_temp_file, skip = 1, 
                     na = c(''***'', ''-99.99'', ''NA'', ''''))
head(giss_temp, 5)
```

Something is funny here: Each row corresponds to a year, but there are columns
for each month, and some extra columns called "J-D", "D-N", "DJF", "MAM", "JJA",
and "SON". These stand for average values for the year from January through 
December, the year from the previous December through November, and the seasonal
averages for Winter (December, January, and February), 
Spring (March, April, and May), Summer (June, July, and August), and Fall 
(September, October, and November).

The temperatures are recorded not as the thermometer reading, but as 
_anomalies_. If we want to compare how temperatures are changing in different 
seasons and at different parts of the world, raw temperature measurements are 
hard to work with because summer is hotter than winter and Texas is hotter than 
Alaska, so it becomes difficult to compare temperatures in August to 
temperatures in January, or temperatures in Texas to temperatures in Alaska
and tell whether there was warming.

To make it easier and more reliable to compare temperatures at different times
and places, we define anomalies: The temperature anomaly is the difference 
between the temperature recorded at a certain location during a certain month 
and a baseline reference value, which is the average temperature for that month
and location over a period that is typically 30 years.

The GISS temperature data uses a baseline reference period of 1951--1980, so 
for instance, the temperature anomaly for Nashville in July 2017 would be
the monthly average temperature measured in Nashville during July 2017 minus
the average of all July temperatures measured in Nashville from 1951--1980.

The GISS temperature data file then averages the temperature anomalies over all
the temperature-measuring stations around the world and reports a global average
anomaly for every month from January 1880 through the latest measurements
available (currently, July 2017).

Let''s focus on the months only. Use `select` to select just the columns for 
"Year" and January through December (if you are selecting a consecutive range
of columns between "Foo" and "Bar" in the tibble `df`, you can call 
`select(df, Foo:Bar)` or `df %>% select(Foo:Bar)`).
Save the result in a variable called `giss_monthly`

```{r make_giss_monthly, include=TRUE}
giss_monthly = select(giss_temp, Year:Dec)
```

Next, it will be difficult to plot all of the data if the months are organized 
as columns. What we want is to transform the data tibble into one with three 
columns: "year", "month", and "anomaly". We can do this easily using the 
`pivot_longer` function from the `tidyverse` package: 
`pivot_longer(df, cols = -Year, names_to = "month", values_to = "anomaly")`
or 
`df %>% pivot_longer(cols = -Year, names_to = "month", values_to = "anomaly")` 
will gather all of the columns except `Year` (the minus sign in the argument to
`cols` means to include all columns except the ones indicated with a minus sign) 
and:

* Make a new tibble with three columns: "Year", "month", and "anomaly"
* For each row in the original tibble, make rows in the new tibble for each of 
  the columns "Jan" through "Dec", putting the name of the column in "month" 
  and the anomaly in "anomaly".

Here is an example of using `pivot_longer`, using a data set of quarterly approval 
ratings for U.S. presidents from 1945--1974:

```{r pivot_longer_example_prep, include=TRUE}
df = read_rds(file.path(data_dir, "president-approval.Rds"))

print("First 10 rows of df are")
print(head(df, 10))
```

For each year, the table has a column for the year and four columns (Q1 ... Q4)
that hold the quarterly approval ratings for the president in that quarter.
Now we want to organize these data into three columns:
one column for the year, one column to indicate the quarter,
and one column to indicate the approval rating.

We do this with the `pivot_longer` function.

```{r pivot_longer_example}
dfg = df %>% 
  pivot_longer(cols = -year, names_to = "quarter", values_to = "approval") %>%
  arrange(year, quarter) 

# the pivot_longer command organizes the data into tidy columns:
# names_to = "quarter" tells pivot_longer to create a column called "quarter" 
# and store the names of the original columns there.
# values_to = "approval" tells pivot_longer to create a column called "approval"
# and store the values from the columns there.
# cols = -year tells pivot_longer NOT to change the column "year".
# So the approval ratings from the second quarter of 1960 will be stored in 
# a row where the column year contains 1960, quarter contains "Q2", and 
# approval contains the approval rating.
#
# the arrange command sorts the rows of the resulting tibble to put 
# the years in ascending order, from 1945 to 1971, and within each year, 
# sort the quarters in alphabetical order from Q1 to Q4

head(dfg) # print the first few rows of the tibble.
```

Now you try to do the same thing to the `giss_monthly` data. 
Use `pivot_longer` to re-organize the data to have three columns:
one column for the year, one column called "month" for the name of the month, 
and one column called "anomaly" for the temperature anomaly in that month.
Store the result in a new variable called `giss_g`

```{r pivot_longer_giss, include=TRUE}
giss_g = giss_monthly %>%
  pivot_longer(cols = -Year, names_to = "month", values_to = "anomaly")
```

Remember how the CO~2~ data had a column `date` that had a year plus a fraction
that corresponded to the month, so June 1960 was 1960.4548?

Here is a trick that lets us do the same for the `giss_g` data set.
R has a data type called `factor` that it uses for managing categorical data,
such as male versus female, Democrat versus Republican, and so on.
Categorical factors have a textual label, but behind the scenes, R thinks of 
them as integer numbers. 
Normal factors don''t have a special order, so R sorts the values alphabetically.
However, there is another kind of factor called an ordered factor, which allows
us to specify the order of the values.

We can use a built-in R variable called `month.abb`, which is a vector of
abbreviations for months.

The following command will convert the `month`  column in `giss_g` into an
ordered factor that uses the integer values 1, 2, ..., 12 to stand for
"Jan", "Feb", ..., "Dec", and then uses those integer values to create a new
column, `date` that holds the fractional year, just as the `date` column in
`mlo_data` did:

``` r
giss_g = giss_g %>% 
  mutate(month = ordered(month, levels = month.abb),
         date = Year + (as.integer(month) - 0.5) / 12) %>% 
  arrange(date)`
```

In the code above, `ordered(month, levels = month.abb)` converts the variable
`month` from a character (text) variable that contains the name of the month
to an ordered factor that associates a number with each month name, such that
''Jan'' = 1 and ''Dec'' = 12.

Then we create a new column called `date` to get the fractional year 
corresponding to that month. We have to explicitly convert the ordered factor 
into a number using the function `as.integer()`, and we subtract 0.5 because 
the time that corresponds to the average temperature for the month is the 
middle of the month.

Below, use code similar to what I put above to add a new `date` column to
`giss_g`.

```{r add_date_to_giss_g, include=TRUE}
giss_g = giss_g %>%
  mutate(month = ordered(month, levels = month.abb),
         date = Year + (as.integer(month) - 0.5)) %>%
  arrange(date)
```

Now plot the monthly temperature anomalies versus date:

```{r plot_giss, include=TRUE, warning = FALSE}
ggplot(giss_g, aes(x = date, y = anomaly)) +
  geom_line() +
  labs(x = "Year", y = "Temperature anomaly", 
       title = "Global average temperature anomalies")
```

That plot probably doesn''t look like much, because it''s very noisy.
Use the function `slide_vec` from the package `slider` to create 
new columns in `giss_g` with
12-month and 10-year (i.e., 120-month) sliding averages of the 
anomalies.

Make a new plot in which you plot a thin blue line for the monthly anomaly
(use `geom_line(aes(y = anomaly), color = "blue", alpha = 0.3, size = 0.1)`;
alpha is an optional specification for transparency where 0 means invisible
(completely transparent) and 1 means opaque),
a medium dark green line for the one-year sliding average,
and a thick dark blue line for the ten-year sliding average.

```{r plot_giss_with_smoothing, include=TRUE, warning = FALSE}
giss_g %>% 
  mutate(annual = slide_vec(anomaly, mean, .before = 5, .after = 6),
         decadal = slide_vec(anomaly, mean, .before = 59, .after = 60)) %>%
  ggplot(aes(x = date)) +
  geom_line(aes(y = anomaly), color = "blue", alpha = 0.3, size = 0.1) +
  geom_line(aes(y = annual), color = "darkgreen", size = 0.5) +
  geom_line(aes(y = decadal), color = "darkblue", size = 1) +
  labs(x = "Year", y = "Temperature anomaly", 
       title = "Global temperature anomalies")
```

The graph shows that temperature didn''t show a steady trend until starting 
around 1970, so we want to isolate the data starting in 1970 and fit a linear 
trend to it.

To select only rows of a tibble that match a condition, we use the function 
`filter` from the `tidyverse` package:

`data_subset = df %>% filter( conditions )`, where `df` is your original tibble
and `conditions` stands for whatever conditions you want to apply.
You can make a simple condition using equalities or inequalities:

* `data_subset = df %>% filter( month == "Jan")` to select all rows where the 
  month is "Jan"
* `data_subset = df %>% filter( month != "Aug")` to select all rows where the 
  month is not August.
* `data_subset = df %>% filter( month %in% c("Sep", "Oct", "Nov")` to select all 
  rows where the month is one of "Sep", "Oct", or "Nov".
* `data_subset = df %>% filter(year >= 1945)` to select all rows where the year 
  is greater than or equal to 1945.
* `data_subset = df %>% filter(year >= 1951 & year <= 1980 )` to select all rows
  where the year is between 1951 and 1980, inclusive.
* `data_subset = df %>% filter(year >= 1951 | month == "Mar")` to select all 
  rows where the year is greater than or equal to 1951 or the month is "Mar".
  this will give all rows from January 1951 onward, plus all rows before 1951
  where the month is March.

Below, create a new variable `giss_recent` and assign it a subset of `giss_g` 
that has all the data from January 1970 through the present. 
Use the `lm` function to calculate the linear trend for 
the monthly anomaly and report it.
Remember that if you use `lm` to calculate a linear trend, you can get the 
value for the slope using the `coef` function:

Example:
``` r
co2_fit = lm(co2 ~ date, data = mlo_simple)
co2_slope = coef(co2_fit)[''data'']
```

What is the average change in temperature from one year to the next?

```{r giss_trend, include=TRUE}
giss_recent = giss_g %>% filter(Year >= 1970)

temp_fit = lm(anomaly ~ date, data = giss_recent)

temp_trend = coef(temp_fit)["date"]
```

**Answer:** On average, the temperature rose by 
`r format_md(temp_trend, digits = 1)` degree Celsius per year.

### Did Global Warming Stop after 1998?

It is a common skeptic talking point that global warming stopped in 1998.
In years with strong El Ni&ntilde;os, global temperatures tend to be higher
and in years with strong La Ni&ntilde;as, global temperatures tend to be lower.
We will discuss why later in the semester.

The year 1998 had a particularly strong El Ni&ntilde;o, and the year set a 
record for global temperature that was not exceeded for several years. Indeed, 
compared to 1998, it might look as though global warming paused for many years.

We will examine whether this apparent pause has scientific validity.

To begin with, we will take the monthly GISS temperature data and convert it to
annual average temperatures, so we can deal with discrete years, rather than 
separate temperatures for each month.

We do this with the `group_by` and `summarize` functions.

We also want to select only recent data, so we arbitrarily say we will look at
temperatures starting in 1979, which gives us 19 years before the 1998 
El Ni&tilde;o.

If we go back to the original `giss_g` data tibble, run the following code:

```{r summarize_giss, include=TRUE}
giss_annual = giss_g %>% 
  filter(Year >= 1979) %>%
  group_by(Year) %>% 
  summarize(anomaly = mean(anomaly)) %>%
  ungroup() %>%
  mutate(date = Year + 0.5, before = Year < 1998)
```

This code groups the giss data by the year, so that one group will have
January--December 1979, another will have January--December 1980, and
so forth.

Then we replace the groups of 12 rows for each year (each row represents one 
month) with a single row that represents the average of those 12 months.

It is important to tell R to `ungroup` the data after we''re done working with
the groups.

Finally, we set `date` to `year + 0.5` because the average of a year corresponds 
to the middle of the year, not the beginning and we introduce a new column 
`before`, which indicates whether the data is before the 1998 El Ni&ntilde;o:

Now plot the data and color the points for 1998 and afterward dark red to
help us compare before and after 1998.

```{r plot_recent_giss, include=TRUE, warning = FALSE}
ggplot(giss_annual, aes(x = date, y = anomaly)) +
  geom_line(size = 1) +
  geom_point(aes(color = before), size = 2) +
  scale_color_manual(values = c("TRUE" = "darkblue", "FALSE" = "darkred"),
                     guide = "none") + 
  # ^^^ color "before" points dark blue, "after" points dark red.
  # guide = "none" tells ggplot not to show a legend explaining the colors.
  labs(x = "Year", y = "Temperature Anomaly")
```

Does it look as though the red points are not rising as fast as the blue points?

Let''s just plot the data from the years 1998--2011. Use the `filter` function
to select just the date from the years 1998--2011 and pass that to `ggplot`.

```{r plot_pause, include=TRUE}
giss_annual %>% 
  filter(Year >= 1998, Year <= 2011) %>%
  ggplot(aes(x = date, y = anomaly)) +
  geom_line(size = 1) +
  geom_point(aes(color = before), size = 2) +
  scale_color_manual(values = c("TRUE" = "darkblue", "FALSE" = "darkred"),
                     guide = "none") + 
  # ^^^ color "before" points dark blue, "after" points dark red.
  # guide = "none" tells ggplot not to show a legend explaining the colors.
  labs(x = "Year", y = "Temperature Anomaly")

```

Now how does it look?

Let''s use the `filter` function to break the data into two different data sets,
which we will store in tibbles called `giss_before` and `giss_after`: 
`giss_before` will have the data from 1979--1998 and the other, 
`giss_after` will have the data from 1998 onward 
(note that the year 1998 appears in both data sets).

Also, use the `mutate` function to add a column called `timing` to each of the 
split data sets and set the value of this column to "Before" for `giss_before` 
and "After" for `giss_after`.

```{r split_giss_data, include=TRUE}
giss_before = giss_annual %>% filter(Year <= 1998) %>%
  mutate(timing = "Before")
giss_after = giss_annual %>% filter(Year >= 1998) %>%
  mutate(timing = "After")
```

Now use `lm` to find the trend in temperature data in `giss_before`
(from 1979--1998) and assign it to a variable `giss_trend`.

```{r get_trend_before, include=TRUE}
fit_before = lm(anomaly ~ date, data = giss_before)
trend_before = coef(fit_before)[''date'']
```

Next, combine the two tibbles into one tibble, using the `bind_rows` function.
If you have created the `giss_before` and `giss_after` tibbles, then you 
can un-comment the code below to combine them.

```{r combine_giss, include=TRUE, warning = FALSE}
giss_combined = bind_rows(giss_before, giss_after)
```

Now let''s use ggplot to plot `giss_combined`:

* Aesthetic mapping:
    * Use the `date` column for the _x_ variable.
    * Use the `anomaly` column for the _y_ variable.
    * Use the `timing` column to set the color of plot elements
* Plot both lines and points.
    * Set the `size` of the lines to 1
    * Set the `size` of the points to 2
* Use the `scale_color_manual` function to set the color of
  "Before" to "darkblue" and "After" to "darkred"
* Use `geom_smooth(data = giss_before, method="lm", 
  color = "blue", fill = "blue", alpha = 0.2, fullrange = TRUE)` 
  to show a linear trend that is fit just to the `giss_before` data.

```{r plot_combined, include = TRUE, message = FALSE}
ggplot(giss_combined, aes(x = date, y = anomaly, color = timing)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  geom_smooth(data = giss_before, method = "lm", color = "blue",
              fill = "blue", alpha = 0.2, fullrange = TRUE) +
  scale_color_manual(values = c("Before" = "darkblue", "After" = "darkred")) +
  labs(x = "Year", y = "Temperature anomaly")
```

Try this with the parameter `fullrange` set to `TRUE` and `FALSE` in the 
`geom_smooth` function. What is the difference?

What this plot shows is the full data set, and a linear trend that is fit just 
to the "before" data. The trend line shows both the best fit for a trend
(that''s the solid line) and the range of uncertainty in the fit (that''s the 
light blue shaded area around the line).

If the temperature trend changed after 1998 (e.g., if the warming paused, or if
it reversed and started cooling) then we would expect the temperature 
measurements after 1998 to fall predominantly below the extrapolated trend line, 
and our confidence that the trend had changed would depend on the number of 
points that fall below the shaded uncertainty range.

How many of the red points fall below the trend line? 

**Answer:** Out of 23 red points (the years 1998--2020), four fall below the 
trend line

How many of the red points fall above the trend line?

**Answer:** 19 of the 23 red points fall above the trend line.

If we just look at the years 1998--2012, how many of the red points
fall above vs. below the trend line?

**Answer:** From 1998--2012, 4 points fall below the trend line and 11 fall 
above it.

What do you conclude about whether global warming paused or stopped for several
years after 1998?

**Answer:** Even if we just look at the years 1998--2012, it is clear that most
years were warmer than we would have expected if the warming had followed its
historical trend from 1979--1998. This means that if anything, the earth was 
warming faster than before---the opposite of pausing or stopping. After
2012, all of the points are above the trend line. Most of them are far above it.
So there is no reasonable way to look at this data and conclude that it stopped 
warming, or even paused temporarily, after 1998.

# Part 2 Exercises from Chapter 3

* **All students** do Chapter 3, exercises 2--3.
* **Graduate students** should also do Chapter 3, exercise 1.

For the exercises, use the following numbers:

* I~solar~ = 1350 W/m^2^
* $\sigma = 5.67 \times 10^{-8}$
* $\alpha = 0.30$
* $\varepsilon = 1.0$

```{r set_constants, include=TRUE}
I_solar = 1350
alpha = 0.30
epsilon = 1.0
sigma = 5.67E-8
```


## Exercise 3.1 (Grad. students only)

> **The moon with no heat transport.** The Layer Model assumes that the 
> temperature of the body in space is all the same. This is not really very 
> accurate, as you know that it is colder at the poles than it is at the equator. 
> For a bare rock with no atmosphere or ocean, like the moon, the situation is 
> even worse because fluids like air and water are how heat is carried around on
> the planet. So let us make the other extreme assumption, that there is no heat 
> transport on a bare rock like the moon. Assume for comparability that the 
> albedo of this world is 0.30, same as Earth''s.
>
> What is the equilibrium temperature of the surface of the moon, on the equator, 
> at local noon, when the sun is directly overhead? (Hint: First figure out the 
> intensity of the local solar radiation I~solar~)

```{r ex_3_1_a}
albedo_moon = 0.3
epsilon_moon = 1
I_moon = I_solar * (1 - albedo_moon)
T_moon = (I_moon / (epsilon_moon * sigma))^0.25
```

**Answer:** The temperature of the equator of the moon at noon is
`r format_md(T_moon, digits = 3)` K.

> What is the equilibrium temperature on the dark side of the moon?


**Answer:** The intensity of sunlight on the dark side of the moon is zero, so
the temperature would be zero Kelvin.

## Exercise 3.2

> **A Two-Layer Model.** Insert another atmospheric layer into the model, just 
> like the first one. The layer is transparent to visible light but a blackbody 
> for infrared.

```{r two_layer_figure, fig.cap = "An energy diagram for a planet with two panes of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{solar} / 4$."}
make_layer_diagram(2)
```

> a) Write the energy budgets for both atmospheric layers, for the ground, and 
> for the Earth as a whole, like we did for the One-Layer Model.

**Answer:** 

* Top of the atmosphere:
  $I_{2,\text{up}} = I_{\text{visible}} = (1 - \alpha) I_{\text{solar}} / 4$
* Layer 2:
  $I_{1,\text{up}} = I_{2,\text{up}} + I_{2,\text{down}}$
* Layer 1:
  $I_{\text{ground,up}} + I_{2,\text{down}} = I_{1,\text{up}} + I_{1,\text{down}}$
* Ground:
  $I_{\text{ground,up}} = I_{\text{visible}} + I_{1,\text{down}}$

> b) Manipulate the budget for the Earth as a whole to obtain the temperature 
> T~2~ of the top atmospheric layer, labeled Atmospheric Layer 2 in the figure 
> above. Does this part of the exercise seem familiar in any way? Does the term 
> ring any bells?

Top of the atmosphere:

\begin{align*}
I_{2,\text{up}} &= I_{\text{visible}} = (1 - \alpha) I_{\text{solar}} / 4\\
I_{2,\text{up}} &= \varepsilon \sigma T_2^4\\
T_2 &= \sqrt[4]{\frac{(I_{2,\text{up}}}{\varepsilon \sigma}} \\
    &= \sqrt[4]{\frac{(1 - \alpha) I_{\text{solar}}}{4 \varepsilon \sigma}}
\end{align*}

This is the same as the bare-rock temperature.

```{r ex_3_2_b}
epsilon = 1.0
alpha = 0.30
I_solar = 1350
I_visible = (1 - alpha) * I_solar / 4
I_2_up = I_visible
T_2 = (I_2_up / (epsilon * sigma))^0.25
```

**Answer:** The temperature of layer 2 is `r format_md(T_2, digits = 3)` K,
which is the same as the bare-rock temperature. In layer models, the top layer 
of the atmosphere is _always_ the bare-rock temperature.

> c) Insert the value you found for T~2~ into the energy budget for layer 2, and 
> solve for the temperature of layer 1 in terms of layer 2. How much bigger is 
> T~1~ than T~2~?

From the energy budget for Layer 2, 
I~1,up~ = I~2,up~ + I~2,down~.
The temperature of the bottom of the layer is the same as the temperature for
the top of the layer, so I~2,down~ = I~2,up~

```{r ex_3_2_c}
I_1_up = 2 * I_2_up
T_1 = (I_1_up / (epsilon * sigma))^0.25
```

You could also let R do more of the work for you by writing

``` r
I_2_down = I_2_up
I_1_up = I_2_up + I_2_down
T_1 = (I_1_up / (epsilon * sigma))^0.25
```

**Answer:** The temperature of layer 1 is `r format_md(T_1, digits = 3)` K.
This is the same as the ground temperature in a 1-layer model.

> d) Now insert the value you found for T~1~ into the budget for atmospheric 
> layer 1 to obtain the temperature of the ground, T~ground~. Is the greenhouse 
> effect stronger or weaker because of the second layer?

From the energy budget for layer 1, 

* I~ground,up~ + I~2,down~ = I~1,up~ + I~1,down~
* I~ground,up~ = I~1,up~ + I~1,down~ - I~2,down~
* I~1,down~ = I~1,up~ and I~2,down~ = I~2,up~
* so I~ground,up~ = 2 * I~1,up~ - I~2,up~

```{r ex_3_2_d}
I_ground_up = 2 * I_1_up - I_2_up
T_ground = (I_ground_up / (epsilon * sigma))^0.25
```

Again, you could let R do more of the work for you by writing

``` r
I_1_down = I_1_up
I_ground_up = I_1_down + I_1_up - I_2_down
T_ground = (I_ground_up / (epsilon * sigma))^0.25
```

**Answer:** T~ground~ = `r format_md(T_ground, digits = 3)` K.

We can also use algebra to observe that 

\begin{align*}
I_{\text{ground,up}} &= 2 * I_{1,\text{up}} - I_{2,\text{up}} \\
I_{2,\text{up}} &= 2 I_{2,\text{up}} \\
\intertext{so} 
I_{\text{ground,up}} &= 4 I_{2,\text{up}} - I_{2,\text{up}} \\
                     &= 3 I_{2,\text{up}} \\
T_{\text{ground}} &= \sqrt[4]{\frac{3 I_{2,\text{up}}}{\varepsilon \sigma}} \\
                  &= \sqrt[4]{3} T_{\text{bare rock}}.
\end{align*}

In a 1-layer model, the ground temperature was 2^0.25^ times the bare-rock 
temperature, and in a 2-layer model, the bround temperature is 3^0.25^ times
the bare-rock temperature.

## Exercise 3.3

```{r nuclear_winter_diagram, fig.cap="An energy diagram for a planet with an opaque pane of glass for an atmosphere. The intensity of absorbed visible light is $(1 - \\alpha) I_{solar} / 4$."}
make_nuclear_winter_diagram()
```

> **Nuclear Winter.** Let us go back to the One-Layer Model but change it so 
> that the atmospheric layer absorbs visible light rather than allowing it to 
> pass through (See the figure above). This could happen if the upper atmosphere 
> were filled with dust. For simplicity, assume that the albedo of the Earth 
> remains the same, even though in the real world it might change with a dusty 
> atmosphere.>  What is the temperature of the ground in this case?

**Answer:** 
Here, the key difference is that the heat from the sun is absorbed by the 
atmosphere instead of passing through the atmosphere to the ground.

The equation for the atmosphere is the same as in the 1-layer model because
we use the energy balance at the boundary to space:
$I_{\text{atm, up}} = I_{\text{visible}} = (1 - \alpha) I_{\text{solar}} / 4$
and the temperature of the atmosphere is the bare-rock temperature, just as 
the top layer of the atmosphere is for every layer model.

However, things are different at the ground. The energy balance at the 
dusty atmosphere is

* I~visible~ + I~ground,up~ = I~atm,up~ + I~atm,down~
* I~ground,up~ = I~atm,up~ + I~atm,down~ - I~visible~
* But I~atm,up~ = I~atm,down~ = I~visible~
* So I~ground,up~ = I~atm,up~.
* This means that T~ground~ = T~atmosphere~ = T~bare-rock~.

```{r ex_3}
I_visible = (1 - alpha) * I_solar / 4
I_atm_up = I_visible
I_atm_down = I_visible
I_ground_up = I_atm_up + I_atm_down - I_visible
T_ground = (I_ground_up / (epsilon * sigma))^0.25
```

T_ground = `r format_md(T_ground, digits = 3)` K. This is the same as the 
bare-rock temperature.

The effect of the dust in the atmosphere is to cancel out the greenhouse effect
and cool off the surface to the bare-rock temperature. 
The greenhouse effect works because the atmosphere is transparent to shortwave
light and opaque to longwave light. If the atmosphere becomes opaque to 
shortwave light, then the greenhouse effect doesn''t work.
'
                          );

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              301,
                              'MODTRAN',
                              'SOL_MODTRAN',
                              'Lab #3 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_03/lab_03_answers.pdf',
                              '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define 
# useful functions format_md.
# 
data_dir = "_data"
script_dir = "_scripts"

library(pacman)
p_load(tidyverse, knitr)

theme_set(theme_bw(base_size = 15))

source(file.path(script_dir, ''utils.R''), chdir = T)
source(file.path(script_dir, ''format_md.R''), chdir = T)
source(file.path(script_dir, ''modtran.R''), chdir = T)

```
# Chapter 4 Exercises

Fill in R code for the exercises 
(I have put the comment `# TODO` in all of the code chunks where you need to 
do this)
and then fill in the answers where I have marked **Answer:**. 
Be sure to write explanations of your answer and don''t just put numbers with 
no text.

## Exercise 4.1: Methane

Methane has a current concentration of 1.7 ppm in the atmosphere and
is doubling at a faster rate than CO~2~.

a) **Would an additional 10 ppm of methane in the atmosphere have a larger or 
   smaller impact on the outgoing IR flux than an additional 10 ppm of CO~2~ 
   at current concentrations?**

   **Suggestion:**

   * Run MODTRAN in the default configuration (400 ppm CO~2~ and 1.7 ppm 
     methane)
   * Run MODTRAN with an extra 10 ppm of CO~2~ and the normal amount of methane.
   * Run MODTRAN with the normal amount of CO~2~ and an extra 10 ppm of methane.

   What would you look at from the three runs to figure out whether 10 ppm of 
   methane or 10 ppm of CO~2~ had the greater effect?

```{r ex_4_1_a, include=TRUE, message=FALSE}
base_co2 = 400 # parts per million
base_ch4 = 1.7 # parts per million
modtran_baseline = run_modtran(file.path(data_dir, "ex_4_1_baseline.txt"),
                               co2_ppm = base_co2, 
                               ch4_ppm = base_ch4)
modtran_plus_10_co2 = run_modtran(file.path(data_dir, "ex_4_1_plus_10_co2.txt"),
                                  co2_ppm = base_co2 + 10, 
                                  ch4_ppm = base_ch4)
modtran_plus_10_ch4 = run_modtran(file.path(data_dir, "ex_4_1_plus_10_ch4.txt"),
                                  co2_ppm = base_co2, 
                                  ch4_ppm = base_ch4 + 10)
i_out_baseline = modtran_baseline$i_out
i_out_co2 = modtran_plus_10_co2$i_out
i_out_ch4 = modtran_plus_10_ch4$i_out
delta_i_co2 = i_out_co2 - i_out_baseline
delta_i_ch4 = i_out_ch4 - i_out_baseline
```

**Answer:** 
I ran MODTRAN three times. One run was a baseline, which used the 
current concentrations of CO~2~ and CH~4~. Then I ran MODTRAN with the CO~2~
concentration increased by 10 ppm and I ran it a third time with the baseline 
value for CO~2~, but with CH~4~ increased by 10 ppm.

For the baseline run, the intensity of outgoing longwave light
was `r format_md(i_out_baseline, digits = 3)`. Watts per square meter.
Increasing CO~2~ by 10 ppm decreased the outgoing longwave light by 
`r format_md(-delta_i_co2, digits = 1)` W/m^2^, and increasing CH~4~ by 
10 ppm decreased the outgoing longwave light by 
`r format_md(-delta_i_ch4, digits = 2)` W/m^2^, which is around 
`r format_md(delta_i_ch4 / delta_i_co2, digits = 1)` times as much as for CO~2~.

The difference is because absorption for CO~2~ is strongly saturated, but the 
absorption for CH~4~ is not saturated. Another way to think about this is that
a 10 ppm increase in CO~2~ increases the atmospheric concentration by 
`r format_md(100 * 10 / base_co2, digits = 1)`% and a 10 ppm increase in 
CH~4~ increases the atmospheric concentration by 
`r format_md(100 * 10 / base_ch4, digits = 1)`%.

b) **Where in the spectrum does methane absorb? What concentration does it take 
   to begin to saturate the absorption in this band? Explain what you are looking 
   at to judge when the gas is saturated.**

   **Hints**:  
   I recommend setting all the greenhouse gases to zero, and run MODTRAN.
   Then run MODTRAN for several values of methane, starting at 1 ppm and 
   doubling the concentration until you get to around 128 ppm.
   You can do this using a `for` loop, following the examples from the 
   lab instructions.

   To set all the greenhouse gases to zero, you would call 
   `run_modtran(co2_ppm = 0, ch4_ppm = 0, trop_o3_ppb = 0, strat_o3_scale = 0,
   h2o_scale = 0, freon_scale = 0)`

   The spectrum of methane is complicated so it doesn''t saturate all at once.
   Use `plot_modtran` to plot the spectrum for each concentration and describe 
   what you see and where you think methane begins to saturate and why.

   By default, `plot_modtran` gives a plot a title that indicates the CO~2~
   concentration. Here, CO~2~ doesn''t change and we''re interested in the CH~4~
   concentration, so you can use the `descr` argument to `plot_modtran` to
   give the plots different titles. See the example below.

   Remember that if you want to make several plots using a `for` loop, you need to 
   assign the result from `plot_modtran` or `ggplot` to a variable and then
   use the `plot` or `print` function.
   ``` r
   for (ch4 in ch4_list) {
     mod_data = run_modtran(co2_ppm = 0, ch4_ppm = ch4, trop_o3_ppb = 0,
                            strat_o3_scale = 0, h2o_scale = 0, freon_scale = 0)
     p = plot_modtran(mod_data)
     plot(p) # you could also say print(p) here.
   }
   ```

```{r ex_4_1_b, include=TRUE, message=FALSE}
ch4_values = c(0, 2^seq(0,7))
sat_data = tibble()
for (ch4 in ch4_values) {
   filename = file.path(data_dir, str_c("ex_4_1_ch4_", ch4, ".txt"))
   if (file.exists(filename)) {
      mod_data = read_modtran(filename)
   } else {
      mod_data = run_modtran(filename, co2_ppm = 0, ch4_ppm = ch4, 
                             trop_o3_ppb = 0, strat_o3_scale = 0, 
                             h2o_scale = 0, freon_scale = 0,
                             atmosphere = "standard", altitude_km = 70)
   }
   p = plot_modtran(mod_data, descr = str_c(ch4, " ppm methane"))
   plot(p)
}
```

**Answer:** 
The plots above show the MODTRAN spectrum with all gases set to zero except
methane. Methane absorbs most strongly around 1300 wavenumbers.

As we increase the methane concentration, the big spike around 1300 wavenumbers
gets bigger until it bottoms out on the black line. This happens somwhere around
8, 16, or 32 ppm, so any of those anwers would be correct. But the spectrum is 
complicated and so is its saturation, so other answers are plausible if they
are supported by sound reasoning.
  
c) **Would a doubling of methane have as great an impact on the heat balance as a 
   doubling of CO~2~?**

   **Suggestion:** 
    
   * Run MODTRAN in its default configuration (400 ppm CO~2~ and 1.7 ppm methane)
   * Run it again with double the methane concentration.
   * Run it again with the default methane (1.7 ppm) but double the CO~2~ 
     concentration.
   * Compare $I_{\text{out}}$ for the three runs.

```{r ex_4_1_c, include=TRUE, message=FALSE}
base_co2_ppm = 400
base_methane_ppm = 1.7
baseline =   read_modtran(file.path(data_dir, "ex_4_1_baseline.txt"))
double_co2 = run_modtran(file.path(data_dir, "ex_4_1_2x_co2.txt"),
                         co2_ppm = 2 * base_co2_ppm, ch4_ppm = base_methane_ppm)
double_ch4 = run_modtran(file.path(data_dir, "ex_4_1_2x_ch4.txt"),
                         co2_ppm = base_co2_ppm, ch4_ppm = 2 * base_methane_ppm)
i_out_baseline = baseline$i_out
i_out_co2 = double_co2$i_out
i_out_ch4 = double_ch4$i_out

delta_i_out_co2 = i_out_co2 - i_out_baseline
delta_i_out_ch4 = i_out_ch4 - i_out_baseline
```

**Answer:** 
The baseline value for I~out~ is 
`r format_md(i_out_baseline, digits = 3)` W/m^2^. If we double CO~2~, it drops to
`r format_md(i_out_co2, digits = 3)` W/m^2^, a decrease of
`r format_md(delta_i_out_co2, digits = 1)` W/m^2^, 
and if we double CH~4~, it drops to 
`r format_md(i_out_ch4, digits = 3)` W/m^2^, a decrease of
`r format_md(delta_i_out_ch4, digits = 1)` W/m^2^.
Doubling CO~2~ has the larger effect because there is a lot more CO~2~ in the 
atmosphere and that is more important than how saturated its absorption is.

You can see this if you look at the plots below. Notice that the effect of 
doubling CO~2~ isn''t to make the big CO~2~ absorption feature get deeper, but 
to make it wider. You can see this if you compare the baseline to the doubled
CO~2~ spectrum where the purple spectrum crosses the yellow blackbody curve
near 600 wavenumbers and around 750 wavenumbers.  Compare this to the very 
small change in the methane spike near 1300 wavenumbers (you have to look 
very carefully at the doubled methane spectrum to notice this).

```{r ex_4_1_c_baseline_spectrum}
plot_modtran(baseline, descr = "Baseline spectrum")
```
```{r ex_4_1_c_double_co2_spectrum}
plot_modtran(double_co2, descr = "Doubled CO2")
```
```{r ex_4_1_c_double_ch4_spectrum}
plot_modtran(double_ch4, descr = "Doubled CH4")
```



d) **What is the "equivalent CO~2~" of doubling atmospheric methane? That is to 
   say, how many ppm of CO~2~ would lead to the same change in outgoing IR 
   radiation energy flux as doubling methane? What is the ratio of ppm CO~2~ 
   change to ppm methane change?**

```{r ex_4_1_d, include=TRUE, message=FALSE}
matching_methane = 13
modtran_match_ch4 = run_modtran(file.path(data_dir, "ex_4_1_ch4_match.txt"),
                                co2_ppm = 400, ch4_ppm = matching_methane)
```

**Answer:** 
When we double CO~2~, I~out~ is 
`r `format_md(i_out_co2, digits = 4)`W/m^2^.
We need to adjust CH~4~ to produce the same I~out~ with the defailt value of
400 ppm CO~2~. After some trial and error, this turns out to be about 
`r format(matching_methane, digits = 1)` ppm, 
which has I~out~ = `r format_md(modtran_match_ch4$i_out, digits = 4)`

## Exercise 4.2: CO~2~ (Graduate students only)

a) **Is the direct effect of increasing CO~2~ on the energy output at the top of
   the atmosphere larger in high latitudes or in the tropics?**

   **Hint:**
   Run MODTRAN with the atmosphere set to `tropical`, `midlatitude summer`,
   and `subarctic summer`, and for each atmosphere, at 400 ppm and 800 ppm CO~2~. 
   For each atmosphere, calculate the difference between I~out~ at 400 and 800
   ppm CO~2~ and determine how the effect of doubling CO~2~ varies as you go
   from  tropical latitudes to subarctic ones.

```{r ex_4_2_a, include=TRUE, message=FALSE}
modtran_lat_df = tibble()
for (atmos in c("tropical", "midlatitude summer", "subarctic summer"
                #, "midlatitude winter", "subarctic winter"
)) {
  for (co2 in c(400, 800)) {
    filename = file.path(data_dir, 
                         str_c("ex_4_2_", atmos, "_co2_", co2, ".txt"))
    if (file.exists(filename)) {
      mod_data = read_modtran(filename)
    } else {
      mod_data = run_modtran(filename, atmosphere = atmos, co2_ppm = co2)
    }
    modtran_lat_df = bind_rows(modtran_lat_df, 
                               tibble(co2 = co2, atmos = atmos, 
                                      i_out = mod_data$i_out))
  }
}

modtran_lat_df = modtran_lat_df %>% 
  mutate(co2 = str_c("co2_", co2)) %>%
  pivot_wider(names_from = "co2", values_from = "i_out") %>%
  mutate(delta_i = co2_400 - co2_800) %>%
  arrange(desc(delta_i))
kable(modtran_lat_df, digits = 1)
```

**Answer:** 
When atmospheric CO~2~ doubles, the greatest change in I~out~ occurs
in the tropics, followed by the midlatitudes, and the smallest change occurs at
high latitudes in the subarctic.

b) **Set pCO~2~ to an absurdly high value of 10,000 ppm. You will see a spike
   in the CO~2~ absorption band. What temperature is this light coming from? 
   Where in the atmosphere do you think this comes from?**

   **Now turn on clouds and run the model again. Explain what you see.
   Why are night-time temperatures warmer when there are clouds?**

   **Hint:** MODTRAN simulates the upward directed, outgoing longwave radiation 
   as seen by a sensor looking down from some height. 
   For the first part of this exercise, start with the sensor at its
   default altitude of 70 km (you set this with the `altitude_km` argument to
   `run_modtran`), and successively lower it by 10 km at a time until
   you get to 10 km. 
   What happens to the spike as you lower the sensor? What does this say about
   what part of the atmosphere is responsible for the spike in the middle of the 
   CO~2~ absorption at very high values of CO~2~?
   
   For the second part of this exercise, try using "altostratus" clouds.

The figure below shows the spectrum with a high concentration of CO~2~.

```{r ex_4_2_b_altitude, include=TRUE, message=FALSE}
high_co2 = 1E4
for (z in c(70, 60, 50, 40, 30, 20, 10)) {
  filename = file.path(data_dir, str_c("ex_4_2_alt_", z, ".txt"))
  if (file.exists(filename)) {
    modtran_high_co2 = read_modtran(filename)
  } else {
    modtran_high_co2 = run_modtran(filename, co2_ppm = high_co2, 
                                   altitude_km = z)
  }
  p = plot_modtran(modtran_high_co2)
  plot(p)
}
```

```{r ex_4_2_b_clear, include=TRUE, message=FALSE}
high_co2 = 1E4
modtran_high_co2 = run_modtran(file.path(data_dir, "ex_4_2_hi_co2_clear.txt"), 
                               co2_ppm = high_co2)
plot_modtran(modtran_high_co2)
```


```{r ex_4_2_b_clouds, include=TRUE, message=FALSE}
high_co2 = 1E4
modtran_high_co2 = run_modtran(file.path(data_dir, "ex_4_2_hi_co2_cloudy.txt"),
                               co2_ppm = high_co2, clouds = "altostratus")
plot_modtran(modtran_high_co2)
```


**Answer:** 
The spike in the CO~2~ absorption feature gets smaller as the sensor
altitude drops below about 40 km, and disappears entirely as the sensor drops
below 30 km. This means that the spike must be coming from the region of the 
atmosphere between 30 and 40 km.

When you add altostratus clouds to the atmosphere there isn''t much change in
the emission from the big absorption spikes but the emission from the window
region of the spectrum drops considerably. The clouds block longwave emissions
in the window region. This traps heat near the surface and is one reason why
cloudy nights tend to be warmer than clear nights.

## Exercise 4.3: Water vapor

Our theory of climate presumes that an increase in the temperature at ground
level will lead to an increase in the outgoing IR energy flux at the top of the
atmosphere.


a) **How much extra outgoing IR would you get by raising the temperature of the 
   ground by 5&deg;C? What effect does the ground temperature have on the 
   shape of the outgoing IR spectrum and why?**
   
   **HINT**: You can raise the temperature of the ground with the `delta_t`
   artument to MODTRAN.

```{r ex_4_3_a, include=TRUE, message=FALSE}
modtran_baseline = run_modtran(file.path(data_dir, "ex_4_3_baseline.txt"))
modtran_plus_5 = run_modtran(file.path(data_dir, "ex_4_3_t_plus_5"), 
                             delta_t = 5)

p_baseline = plot_modtran(modtran_baseline, descr = "Baseline spectrum")
p_plus_5 = plot_modtran(modtran_plus_5, descr = "Ground temperature raised 5K")
plot(p_baseline)
plot(p_plus_5)
```

**Answer:** 
Raising the ground temperature raises the entire spectrum.

b) **More water can evaporate into warm air than into cool air. Change the
   model settings to hold the water vapor at constant relative humidity 
   rather than constant vapor pressure (the default), calculate the change
   in outgoing IR energy flux for a 5&deg;C temperature increase.
   Is it higher or lower? Does water vapor make the Earth more sensitive to
   CO~2~ increases or less sensitive?**
   
   **Note:** By default, the MODTRAM model holds water vapor pressure constant,
   but you can set it to hold relative humidity constant instead with the
   option `h2o_fixed = "relative humidity"`, like this:
   `run_modtran(delta_t = 5, h2o_fixed = "relative humidity")`.

```{r ex_4_3_b, include=TRUE, message=FALSE}
modtran_vp = run_modtran(file.path(data_dir, "ex_4_3_vap_press.txt"),
                         delta_t = 5, h2o_fixed = "vapor pressure")
modtran_rh = run_modtran(file.path(data_dir, "ex_4_3_rel_humid.txt"),
                         delta_t = 5, h2o_fixed = "relative humidity")

i_out_baseline = modtran_baseline$i_out
i_out_vp = modtran_vp$i_out
i_out_rh = modtran_rh$i_out

p_vp = plot_modtran(modtran_vp, descr = "Constant vapor pressure", 
                    i_out_ref = i_out_baseline)
p_rh = plot_modtran(modtran_rh, descr = "Constant relative humidity", 
                    i_out_ref = i_out_baseline)
plot(p_vp)
plot(p_rh)
```

**Answer:** 
Raising the surface temperature has a bigger effect on I~out~ when
water vapor pressure is fixed than when relative humidity is fixed. This means
that compensating for a change in CO~2~ would require a bigger change in 
temperature with fixed relative humidity, so the climate is more sensitive to
changes in CO~2~ when relative humidity is fixed.

c) **Now see this effect in another way.**

   * **Starting from the default base case, record the total outgoing 
     IR flux.**

   * **Now double CO~2~. The temperature in the model stays the
     same (that''s how the model is written), but the outgoing IR flux
     goes down.**

   * **Using constant water vapor pressure, adjust the temperature offset
     until you get the original IR flux back again. Record the change in
     temperature.**
    
   * **Now repeat the exercise, but holding the relative humidity fixed
     instead of the water vapor pressure.**
    
   * **The ratio of the warming when you hold relative humidity fixed
     to the warming when you hold water vapor pressure fixed is the 
     feedback factor for water vapor. What is it?**

```{r ex_4_3_c, include=TRUE, message=FALSE}
modtran_baseline = read_modtran(file.path(data_dir, "ex_4_3_baseline.txt"))
i_baseline = modtran_baseline$i_out

modtran_2xco2 = run_modtran(file.path(data_dir, "ex_4_3_2x_co2_vp.txt"),
                                      co2_ppm = 800)
i_2x_vp = modtran_2xco2$i_out

dt_vp = 0.76
modtran_vp_dt = run_modtran(file.path(data_dir, "ex_4_3_vp_dt.txt"),
                            co2_ppm = 800, delta_t = dt_vp)
i_vp_dt = modtran_vp_dt$i_out

modtran_2x_rh = run_modtran(file.path(data_dir, "ex_4_3_2x_co2_rh_.txt"),
                            co2_ppm = 800, h2o_fixed = "relative humidity")
i_2x_rh = modtran_2x_rh$i_out

dt_rh = 1.21
modtran_rh_dt = run_modtran(file.path(data_dir, "ex_4_3_rh_dt.txt"),
                            co2_ppm = 800, delta_t = dt_rh, 
                            h2o_fixed = "relative humidity")
i_rh_dt = modtran_rh_dt$i_out

feedback_factor = dt_rh / dt_vp
```

**Answer:** 
In the baseline case, 
I~out~ = `r format_md(i_baseline, digits = 4)` W/m^2^. 
When we double CO~2~ with constant water vapor pressure, I~out~ drops to 
`r format_md(i_2x_vp, digits = 4)` W/m^2^ 
and we have to raise the ground temperature by 
`r format_md(dt_vp, digits = 2)` K 
to bring I~out~ back to 
I~out~ = `r format_md(i_vp_dt, digits = 4)` W/m^2^. 

When we double CO~2~ with constant water relative humidity, I~out~ drops to 
`r format_md(i_2x_rh, digits = 4)` W/m^2^ 
and we have to raise the ground temperature by 
`r format_md(dt_rh, digits = 2)` K 
to bring I~out~ back to 
I~out~ = `r format_md(i_rh_dt, digits = 4)` W/m^2^. 

The feedback factor is the ratio of the temperature change with relative 
humidity fixes to the temperature change with vapor pressure fixed:
_f_ = `r format_md(feedback_factor, digits = 2)`.

Notice that there is no difference between holding vapor pressure constant and 
holding relative humidity constant until the temperature changes.

# Chapter 5 Exercise

## Exercise 5.2: Skin Height

a) **Run the MODTRAN model using the "tropical" atmosphere, without clouds, 
   and with the present-day CO~2~ concentration (400 ppm). 
   Use the ground temperature reported 
   by the model to calculate
   $\varepsilon \sigma T_{\text{ground}}^4$,
   the heat flux emitted by the ground.
   Assume $\varepsilon = 1$, and I have already provided the value of the 
   Stefan-Boltzmann constant $\sigma$, as the R variable `sigma_sb`,
   which equals `r format_md(sigma_sb, digits = 3, format = "scientific")`.
   (I defined it in the script "utils.R", which I loaded in the "setup" chunk
   in the RMarkdown document).**

   **Next, look at the outgoing heat flux at the top of the atmosphere (70 km) 
   (I~out~) reported by the MODTRAN model. Is it greater or less than the heat 
   flux that you calculated was emitted by the ground?**

```{r ex_5_2_a, include=TRUE, message=FALSE}
baseline = run_modtran(file.path(data_dir, "ex_5_2_baseline.txt"),
                       co2_ppm = 400, atmosphere = "tropical", clouds = "none")
epsilon = 1.0
t_ground = baseline$t_ground
i_ground = epsilon * sigma_sb * t_ground^4
i_atmos_up = baseline$i_out
```

**Answer:** 
T~ground~ = `r format_md(t_ground, digits = 3)` K, so 
$I_{\text{out}} = \varepsilon \sigma T_{\text{ground}}^4 = 
`r format_md(i_ground, digits = 3)`$ W/m^2^. The MODTRAN model reports 
I~out~ = `r format_md(i_atmos_up, digits = 3)` W/m^2^. 
I~ground~ is roughly `r format_md(i_ground / i_atmos_up, digits = 1)` times
greater than I~out~.

b) **Use the outgoing heat flux at the top of the atmosphere (I~out~) to calcuate 
   the skin temperature (use the equation 
   $I_{\text{out}} = \varepsilon \sigma T_{\text{skin}}^4)$).
   What is the skin temperature, and how does it compare to the ground 
   temperature and the temperature at the tropopause, as reported by the 
   MODTRAN model (`t_tropo`)?**
   
   **Assuming an environmental lapse rate of 6K/km, and using the 
   skin temperature that you calculated above, and the ground temperature
   from the model, what altitude would you expect the skin height to be?**

```{r ex_5_2_b, include=TRUE, message=FALSE}
lapse_rate = 6.0 # Kelvin/km
t_tropo = baseline$t_tropo
t_skin = (i_atmos_up / (epsilon * sigma_sb))^0.25
h_skin = (t_ground - t_skin) / lapse_rate
```

**Answer:** The skin temperature is given by 

$$T_{\text{skin}} = \sqrt[4]{\frac{I_{\text{out}}}{\varepsilon \sigma}}$$
T~skin~ = `r format_md(t_skin, digits = 3)` K, which is
`r format_md(t_ground - t_skin, digits = 2)` K less than the ground temperature
and greater than the tropopause temperature 
T~tropo~ = `r format_md(t_tropo, digits = 3)`.
The skin height is 
$$h_{\text{skin}} = \frac{T_{\text{ground}} - T_{\text{skin}}}{\text{lapse rate}}$$
so with a lapse rate of `r lapse_rate` K/km, 
h~skin~ = `r format_md(h_skin, digits = 1)` km.

c) **Double the CO~2~ concentration and run MODTRAN again. Do not adjust the
   ground temperature. Repeat the calculations from (b) of the skin
   temperature and the estimated skin height.**

   **What is the new skin temperature? What is the new skin height?**

```{r ex_5_2_c, include=TRUE, message=FALSE}
modtran_2x_co2 = run_modtran(file.path(data_dir, "ex_5_2_2x_co2_clear.txt"),
                             co2_ppm = 800, atmosphere = "tropical",
                             clouds = "none")
i_out_2x = modtran_2x_co2$i_out
t_skin_2x = (i_out_2x / (epsilon * sigma_sb))^0.25
h_skin_2x = (t_ground - t_skin_2x) / lapse_rate
```

**Answer:** 
The new I~out~ is `r format_md(i_out_2x, digits = 3)` W/m^2^,
so the new T~skin~ is `r format_md(t_skin_2x, digits = 3)` K, which implies
that the new skin height is `r format_md(h_skin_2x, digits = 1)` km,
`r format_md(h_skin_2x - h_skin, digits = 1)` km higher than for today''s 
CO~2~ concentration.

d) Put the CO~2~ back to today''s value, but add cirrus clouds, using the
   "standard cirrus" value for the clouds. Repeat the calculations from (b) of
   the skin temperature and the skin height.
   
   What is the new skin temperature? What is the new skin height?
   Did the clouds or the doubled CO~2~ have a greater effect on the
   skin height?

```{r ex_5_2_d, include=TRUE, message=FALSE}
modtran_cirrus = run_modtran(file.path(data_dir, "ex_5_2_cirrus.txt"),
                             co2_ppm = 400, atmosphere = "tropical", 
                             clouds = "standard cirrus")
i_out_cirrus = modtran_cirrus$i_out
t_skin_cirrus = (i_out_cirrus / (epsilon * sigma_sb))^0.25
h_skin_cirrus = (t_ground - t_skin_cirrus) / lapse_rate
```

**Answer:** 
The new skin height is `r format_md(h_skin_cirrus, digits = 1)` km, which is 
`r format_md(h_skin_cirrus - h_skin_2x, digits = 1)` km higher than for the 
doubled CO~2~. To put this in context, doubling CO~2~ raises the skin hight by
`r format_md(h_skin_2x - h_skin, digits = 1)` km and adding cirrus clouds raises
the skin height by `r format_md(h_skin_cirrus - h_skin, digits = 1)`, 
so the cirrus clouds have a much bigger effect on the climate.
'
                          );

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              401,
                              'LAPSE_CLOUD',
                              'SOL_LAPSE_CLOUD',
                              'Lab #4 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_04/lab_04_answers.pdf',
                              '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, cache = FALSE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

library(pacman)
p_load(tidyverse, jsonlite, httr, magrittr, scales, xml2, knitr)

theme_set(theme_bw(base_size = 10))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "modtran.R"), chdir = T)
source(file.path(script_dir, "rrtm.R"), chdir = T)
```
# General Instructions

In the past three weeks, we focused on mastering many of the basics of using
R and RMarkdown. For this week''s lab, when you write up the answers, I would
like you to think about integrating your R code chunks with your text.

For instance, you can describe what you''re going to do to answer the question,
and then for each step, after you describe what you''re going to do in that
step, you can include an R code chunk to do what you just described, and then
the subsequent text can either discuss the results of what you just did
or describe what the next step of the analysis will do.

This way, your answer can have several small chunks of R code that build on
each other and follow the flow of your text.

For this lab, you will use the RRTM model, which includes both radiation and
convection.

## Exercise 1: Lapse Rate

Run the RRTM model in its default configuration and then vary the lapse rate
from 0 to 10 K/km. For each value of the lapse rate, adjust the surface
temperature until the earth loses as much heat as it gains (i.e., the value of
_Q_ in the `run_rrtm` model output is zero.)

It will probably be easier to do this with the interactive version of the RRTM
model at <http://climatemodels.uchicago.edu/rrtm/> than with the R interface
`run_rrtm`.

a) Make a tibble containing the values of the lapse rate and the corresponding
   equilibrium surface temperature, and make a plot with lapse rate on the
   horizontal axis and surface temperature on the vertical axis.


b) Describe how the equilibrium surface temperature varies as the lapse rate
   varies.

### Exercise 1 Report:

I varied the lapse rate from 0 to 10 Kelvin/km in steps of 1 K/km.
At each value of the lapse rate, I manually adjusted the surface temperature in
the interactive RRTM model until the heat budget was balanced (the model 
reported that "If the Earth has these properties ... then it loses as much
energy as it gains."). 

```{r ex-1-a, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE}
lapse_vs_t = tibble( lapse = seq(0, 10),
                     t_surf = c(256.05, 264.66, 271.65, 276.95, 280.75, 283.15,
                                284.40, 285.00, 285.25, 285.30, 285.30))
kable(lapse_vs_t, col.names = c("Lapse rate", "Surface temperature"))
```

The figure below shows the results. As the lapse rate increases, the change in 
surface temperature becomes smaller and smaller. At the last step,
from 9 to 10 K/km, the surface temperature did not change at all.

```{r ex-1-a-plot, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE, fig.cap="Equilibrium surface temperature versus lapse rate."}
ggplot(lapse_vs_t, aes(x = lapse, y = t_surf)) +
   geom_line(size = 1, color = "darkblue") +
   geom_point(size = 3, color = "darkblue") +
   labs(x = "Lapse rate (K/km)", y = "Ground temperature (K)")
```

#### **Explanation:**

Students don''t need to have this detail in their reports, but the reason this 
is happening is that the closer the basic environmental lapse rate gets to the
dry adiabatic lapse rate, the less stable the atmosphere is and the easier it
is for solar heating of the surface to set off convection that redistributes
heat (basically bringing heat from the surface to the upper troposphere).

When the environmental lapse rate (ELR) is less than the moist adiabatic lapse 
rate, the surface temperature is close to 
$T_{\text{surface}} = T_{\text{skin}} + h_{\text{skin}} \text{ELR}$,
but when the ELR becomes greater than the moist adiabatic lapse rate, there
is so much convection that it disrupts the simple picture I presented in class.

The picture I presented in class works well for an atmosphere like ours, which 
is marginally stable (i.e., the environmental lapse rate is roughly equal to the
average moist adiabatic lapse rate).
When the atmosphere is undergoing a large amount of constant convection, then 
heat flow behaves differently.

All of that convection transports lots of heat from the surface to the upper
troposphere and brings lots of cold air down from the upper troposphere to the
surface, which makes it hard for the surface to get warmer. This is why the
ground temperature flattens out and stops changing very much after the lapse
rate reaches about 6 K/km.

# Exercises on Albedo and Clouds

For the following exercises, start off with the RRTM model in its default 
configuration. 
Record the ground temperature.
For each part of this exercise you will do the following:

1. You will adjust the albedo or the clouds.
2. You will compare the visible and longwave radiation going down through the 
   atmosphere to the surface and also the visible and longwave radiation 
   going up from the surface, through the atmosphere, to space.
   
   The results of an RRTM model run have a tibble called `fluxes` with columns
   for `altitude`, `sw_down`, `sw_up`, `lw_down`, `lw_up`, `total_down`, and
   `total_up`, where `sw` means shortwave, `lw` means longwave, and `total`
   is the sum of shortwave plus longwave.
   
   The first row of this tibble is at ground-level and the last row
   is at the top of the atmosphere.
   
   ``` r 
   default_data = run_rrtm()
   fluxes = default_data$fluxes
   surface_fluxes = head(fluxes, 1) # get the first row
   space_fluxes = tail(fluxes, 1)   # get the last row
   ```
   
3. You will adjust the ground temperature until the heat coming in balances
   the heat going out (the model will say, 
   "If the Earth has these properties ... then it loses as much energy as it
   gains."

## Exercise 2: The urban heat island

First, run the RRTM model in its default configuration and note the surface
temperature and the albedo.

a) Change the surface type from "Earth''s average" to "Asphalt" (don''t change
   the surface temperature until the instructions tell you to) and describe
   the changes in the local climate:
   * What is the albedo?
   * Report the changes in shortwave and longwave light absorbed by 
     the surface and going out to space.
   * How much does the total balance of heat change (i.e., how many W/m^2^ does
     the Earth lose or gain)?
   * Now, adjust the ground temperature until the Earth loses as much energy as 
     it gains. 
   * What is the new surface temperature? 
     How does it compare to the surface temperature in the default 
     configuration?

b) Change the surface albedo to "Concrete". Answer the same questions as in part
   (a).
   
c) In cities, streets and parking lots are usually paved with asphalt.
   Roofs of houses and other buildings are often covered with asphalt shingles 
   or black rubber-like compounds. 

   The results you got in this exercise represent covering _the entire planet_
   with asphalt or concrete, so they are far more extreme than you would get
   from only covering _part of a city_ with one material or the other, but 
   the general principle holds and in a city you would have much smaller 
   changes, but they would be in the same direction as you found here.

   How would the choice of using asphalt for roads, parking lots, and roofs in
   a large city affect the local climate in the city?
   Would using low-albedo materials, such as concrete for streets and parking 
   lots and light-colored polymers for the roofs of buildings have a benefit 
   for the people living in the city?

### Exercise 2 Report:

#### **Preliminaries**

Because I will be doing a lot of comparisons here, I want to automate some of
the text using a `compare` function:
```{r compare-function}
compare = function(x, y) {
   ifelse(x > y, "greater than", 
          ifelse(x < y, "less than", "the same as"))
}

# This function compares two values and prints the absolute value of 
# the difference followed by optional units (e.g., W/m^2^), and then the
# comparison string, so something like "3.2 W/m^2^ less than".
#
# If the two values are the same, we don''t want to print 
# "0 W/m^2^ the same as", so we suppress printing the number and the units 
# in that case.
compare_val = function(x, y, digits, units = NULL) {
   delta = format_md(abs(x - y), digits = digits)
   comp_str = compare(x, y)
   ifelse(x == y, comp_str, str_c(delta, units, comp_str, sep = " "))
}
```

First, I recorded the albedo, surface temperature, and heat fluxes in and out
of the earth under the default conditions of the earth''s average albedo.

```{r RRTM_default}
default = run_rrtm()
albedo_default = default$albedo
T_surface_default = default$T_surface

I_in_default = default$i_in
I_out_default = default$i_out

flux_surf_default = default$fluxes %>% filter(altitude == 0)
flux_space_default = tail(default$fluxes, 1)

I_surf_long_default = flux_surf_default$lw_down
I_surf_short_default = flux_surf_default$sw_down
I_space_long_default = flux_space_default$lw_up
I_space_short_default = flux_space_default$sw_up
```

The albedo was 
`r format_md(albedo_default, digits = 1)`,
I~in~ = `r format_md(I_in_default, digits = 3)` W/m^2^, and
I~out~ = `r format_md(I_out_default, digits = 3)` W/m^2^, so the heat 
budget is balanced.

Breaking down the heat flow into shortwave and longwave components, the 
heat absorbed by the ground consisted of
`r format_md(I_surf_long_default, digits = 3)` W/m^2^ of longwave radiation and
`r format_md(I_surf_short_default, digits = 3)` W/m^2^ of shortwwave radiation.
The heat radiated out to space consisted of
`r format_md(I_space_long_default, digits = 3)` W/m^2^ of longwave radiation and
`r format_md(I_space_short_default, digits = 3)` W/m^2^ of shortwwave radiation.


#### 2(a) **Asphalt Surface**

Next, I changed the surface type to "Asphalt" and recorded the changes in 
albedo, I~in~, I~out~, and heat balance.

```{r ex-2-a, include=TRUE, warning=FALSE, message=FALSE}
asphalt = run_rrtm(surface_type = "Asphalt")
albedo_asphalt = asphalt$albedo

I_in_asphalt = asphalt$i_in
I_out_asphalt = asphalt$i_out

# This is the net heat flow into the earth.
# It should be zero when heat in = heat out
Q_asphalt = asphalt$Q

flux_surf_asphalt = asphalt$fluxes %>% filter(altitude == 0)
flux_space_asphalt = tail(asphalt$fluxes, 1)

I_surf_long_asphalt = flux_surf_asphalt$lw_down
I_surf_short_asphalt = flux_surf_asphalt$sw_down
I_space_long_asphalt = flux_space_asphalt$lw_up
I_space_short_asphalt = flux_space_asphalt$sw_up

Delta_I_in_asphalt = I_in_asphalt - I_in_default
Delta_I_out_asphalt = I_out_asphalt - I_out_default

Delta_I_surf_long_asphalt = I_surf_long_asphalt - I_surf_long_default
Delta_I_surf_short_asphalt = I_surf_short_asphalt - I_surf_short_default
Delta_I_space_long_asphalt = I_space_long_asphalt - I_space_long_default
Delta_I_space_short_asphalt = I_space_short_asphalt - I_space_short_default
```

The albedo for asphalt is `r format_md(albedo_asphalt, digits = 0)`, 
which is a good deal `r compare(albedo_asphalt, albedo_default)` the default 
albedo. 
This caused I~in~ to increase from 
`r format_md(I_in_default, digits = 3)` W/m^2^ to
`r format_md(I_in_asphalt, digits = 3)` W/m^2^.
I~out~ did not change and remained at 
`r format_md(I_out_asphalt, digits = 3)` W/m^2^. 

Breaking down the heat flow into shortwave and longwave components, the 
heat absorbed by the ground consisted of
`r format_md(I_surf_long_asphalt, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_surf_long_asphalt, I_surf_long_default, digits = 2, units = "W/m^2^")`
in the default case, and
`r format_md(I_surf_short_asphalt, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_surf_short_asphalt, I_surf_short_default, digits = 1, units = "W/m^2^")`
in the default case.

The heat radiated out to space consisted of
`r format_md(I_space_long_asphalt, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_space_long_asphalt, I_space_long_default, digits = 3, units = "W/m^2^")`
in the default case, and
`r format_md(I_space_short_asphalt, digits = 2)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_space_short_asphalt, I_space_short_default, digits = 2, units = "W/m^2^")`
in the default case.

Then I opened the interactive RRTM model, set the surface type to "Asphalt,"
and manually adjusted the surface temperature until the heat budget was 
balanced.

```{r ex-2-a-balance, include=TRUE, warning=FALSE, message=FALSE}
T_surface_asphalt = 325.6

# Check that the heat really does balance
asphalt_warming = run_rrtm(surface_type = "Asphalt", 
                           T_surface = T_surface_asphalt)
Q_asphalt_warmed = asphalt_warming$Q
Delta_T_asphalt = T_surface_asphalt - T_surface_default
```

The change in I~in~ caused a heat-budget imbalance of 
`r format_md(Q_asphalt, digits = 2)` W/m^2^ going
`r ifelse(Q_asphalt > 0, "into", "out of")` the Earth. 
To put the heat budget back into balance, 
I had to raise the surface temperature 
from `r format_md(T_surface_default, digits = 3)` K to 
`r format_md(T_surface_asphalt, digits = 3)` K, a change of 
`r format_md(Delta_T_asphalt, digits = 2)` K.


#### 2(b) **Concrete Surface**

Next, I did the same for a concrete surface:

```{r ex-2-b, include=TRUE, warning=FALSE, message=FALSE}
concrete = run_rrtm(surface_type = "Concrete")
albedo_concrete = concrete$albedo

I_in_concrete = concrete$i_in
I_out_concrete = concrete$i_out

Q_concrete = concrete$Q

flux_surf_concrete = concrete$fluxes %>% filter(altitude == 0)
flux_space_concrete = tail(concrete$fluxes, 1)

I_surf_long_concrete = flux_surf_concrete$lw_down
I_surf_short_concrete = flux_surf_concrete$sw_down
I_space_long_concrete = flux_space_concrete$lw_up
I_space_short_concrete = flux_space_concrete$sw_up

Delta_I_in_concrete = I_in_concrete - I_in_default
Delta_I_out_concrete = I_out_concrete - I_out_default

Delta_I_surf_long_concrete = I_surf_long_concrete - I_surf_long_default
Delta_I_surf_short_concrete = I_surf_short_concrete - I_surf_short_default
Delta_I_space_long_concrete = I_space_long_concrete - I_space_long_default
Delta_I_space_short_concrete = I_space_short_concrete - I_space_short_default
```

Where asphalt had a much higher albedo albedo for concrete is 
`r format_md(albedo_concrete, digits = 1)` and this
caused I~in~ to decrease to 
`r format_md(I_in_concrete, digits = 3)` W/m^2^.
I~out~ did not change and remained at 
`r format_md(I_out_concrete, digits = 3)` W/m^2^.

Breaking down the heat flow into shortwave and longwave components, the 
heat absorbed by the ground consisted of
`r format_md(I_surf_long_concrete, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_surf_long_concrete, I_surf_long_default, digits = 1, units = "W/m^2^")`
in the default case, and
`r format_md(I_surf_short_concrete, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_surf_short_concrete, I_surf_short_default, digits = 1, units = "W/m^2^")`
in the default case.

The heat radiated out to space consisted of
`r format_md(I_space_long_concrete, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_space_long_concrete, I_space_long_default, digits = 2, units = "W/m^2^")`
in the default case, and
`r format_md(I_space_short_concrete, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_space_short_concrete, I_space_short_default, digits = 2, units = "W/m^2^")`
in the default case.


Then I manually adjusted the surface temperature in the interactive RRTM model
until the heat out balanced the heat in.

```{r ex-2-b-balance, include=TRUE, warning=FALSE, message=FALSE}
T_surface_concrete = 247.0

# Check that the heat really does balance
concrete_warming = run_rrtm(surface_type = "Concrete", 
                           T_surface = T_surface_concrete)
Q_concrete_warmed = concrete_warming$Q
Delta_T_concrete = T_surface_concrete - T_surface_default
```

The change in I~in~ caused a heat-budget imbalance of 
`r format_md(Q_concrete, digits = 2)` W/m^2^ going
`r ifelse(Q_concrete > 0, "into", "out of")` the Earth. 
To put the heat budget back into balance, 
I had to lower the surface temperature to 
`r format_md(T_surface_concrete, digits = 3)` K, a change of 
`r format_md(Delta_T_concrete, digits = 2)` K.

#### 2(c) **Discussion**

Covering the earth in asphalt caused the planet to warm up by 
`r format_md(abs(Delta_T_asphalt), digits = 2)` K, 
so we could expect that covering
a large part of a city in asphalt or similarly dark-colored material would
cause the city''s temperature to rise.
Conversely, covering the planet in concrete caused it to cool off by 
`r format_md(abs(Delta_T_concrete), digits = 2)` K, so replacing asphalt with 
concrete in a city would cool the city off a good deal.
This would provide cooler temperature for the people living in the city and 
would reduce the impact of global climate change.

## Exercise 3: Clouds

First, run the RRTM model in its default configuration and note the surface
temperature and the albedo.

a) Change the low cloud fraction to 0.70 (70%)
   * Report the changes in shortwave and longwave light absorbed by the 
     surface and going out to space.
   * How much does the total balance of heat change 
     (i.e., how many W/m^2^ does the Earth lose or gain)?
   * Adjust the temperature to bring the heat flows back into balance.
   * How much did the temperature change?

b) Repeat part (a), but with the low cloud fraction set to 0 and the high-cloud
   fraction set to 0.20 (20%).
   
c) Use the `plot_heat_flows()` function to plot the heat flows for the 
   low clouds and the high clouds. Describe the changes you see in the upward 
   and downward heat flows (shortwave, longwave, and total) for the two cases.
   Which kind of cloud had the biggest effect on the outgoing radiation?

### Exercise 3 Report:

#### 3(a) **Low Clouds**

First, I changed the low-cloud fraction to 0.70.

```{r ex-3-a, include=TRUE, warning=FALSE, message=FALSE}
low_clouds = run_rrtm(low_cloud_frac = 0.70)

I_in_low = low_clouds$i_in
I_out_low = low_clouds$i_out

flux_surf_low = low_clouds$fluxes %>% filter(altitude == 0)
flux_space_low = tail(low_clouds$fluxes, 1)

I_surf_long_low = flux_surf_low$lw_down
I_surf_short_low = flux_surf_low$sw_down
I_space_long_low = flux_space_low$lw_up
I_space_short_low = flux_space_low$sw_up

Delta_I_in_low = I_in_low - I_in_default
Delta_I_out_low = I_out_low - I_out_default

Delta_I_surf_long_low = I_surf_long_low - I_surf_long_default
Delta_I_surf_short_low = I_surf_short_low - I_surf_short_default
Delta_I_space_long_low = I_space_long_low - I_space_long_default
Delta_I_space_short_low = I_space_short_low - I_space_short_default

Q_low = low_clouds$Q
```

Adding low clouds caused I~in~ to decrease from 
`r format_md(I_in_default, digits = 3)` W/m^2^ to
`r format_md(I_in_low, digits = 3)` W/m^2^, a change of 
`r format_md(Delta_I_in_low, digits = 2)` W/m^2^.
I~out~ increased from 
`r format_md(I_out_default, digits = 3)` W/m^2^ to
`r format_md(I_out_low, digits = 3)` W/m^2^, a change of 
`r format_md(Delta_I_out_low, digits = 1)` W/m^2^.

Breaking down the heat flow into shortwave and longwave components, the 
heat absorbed by the ground consisted of
`r format_md(I_surf_long_low, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_surf_long_low, I_surf_long_default, digits = 3, units = "W/m^2^")`
in the default case, and
`r format_md(I_surf_short_low, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_surf_short_low, I_surf_short_default, digits = 3, units = "W/m^2^")`
in the default case.

The heat radiated out to space consisted of
`r format_md(I_space_long_low, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_space_long_low, I_space_long_default, digits = 3, units = "W/m^2^")`
in the default case, and
`r format_md(I_space_short_low, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_space_short_low, I_space_short_default, digits = 3, units = "W/m^2^")`
in the default case.

Nwxt,  I opened the interactive RRTM model, set the surface type to "low,"
and manually adjusted the surface temperature until the heat budget was 
balanced.

```{r ex-3-a-balance, include=TRUE, warning=FALSE, message=FALSE}
T_surface_low = 280.45

# Check that the new temperature really does balance the heat flow.
low_warming = run_rrtm(low_cloud_frac = 0.70, T_surface = T_surface_low)
Q_low_warmed = low_warming$Q
Delta_T_low = T_surface_low - T_surface_default
```

The change in I~in~ caused a heat-budget imbalance of 
`r format_md(Q_low, digits = 1)` W/m^2^ going
`r ifelse(Q_low > 0, "into", "out of")` the Earth. 
To put the heat budget back into balance, 
I had to lower the surface temperature 
from `r format_md(T_surface_default, digits = 3)` K to 
`r format_md(T_surface_low, digits = 3)` K, a change of 
`r format_md(Delta_T_low, digits = 1)` K.

#### 3(b) **High Clouds**

Next, I changed the high-cloud fraction to 0.70.

```{r ex-3-b, include=TRUE, warning=FALSE, message=FALSE}
high_clouds = run_rrtm(high_cloud_frac = 0.20)
albedo_high = high_clouds$albedo

I_in_high = high_clouds$i_in
I_out_high = high_clouds$i_out

flux_surf_high = high_clouds$fluxes %>% filter(altitude == 0)
flux_space_high = tail(high_clouds$fluxes, 1)

I_surf_long_high = flux_surf_high$lw_down
I_surf_short_high = flux_surf_high$sw_down
I_space_long_high = flux_space_high$lw_up
I_space_short_high = flux_space_high$sw_up

Delta_I_in_high = I_in_high - I_in_default
Delta_I_out_high = I_out_high - I_out_default

Delta_I_surf_long_high = I_surf_long_high - I_surf_long_default
Delta_I_surf_short_high = I_surf_short_high - I_surf_short_default
Delta_I_space_long_high = I_space_long_high - I_space_long_default
Delta_I_space_short_high = I_space_short_high - I_space_short_default

Q_high = high_clouds$Q
```

Adding high clouds caused I~in~ to decrease from 
`r format_md(I_in_default, digits = 3)` W/m^2^ to
`r format_md(I_in_high, digits = 3)` W/m^2^, a change of 
`r format_md(Delta_I_in_high, digits = 2)` W/m^2^.
I~out~ increased from 
`r format_md(I_out_default, digits = 3)` W/m^2^ to
`r format_md(I_out_high, digits = 3)` W/m^2^, a change of 
`r format_md(Delta_I_out_high, digits = 2)` W/m^2^.

Breaking down the heat flow into shortwave and longwave components, the 
heat absorbed by the ground consisted of
`r format_md(I_surf_long_high, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_surf_long_high, I_surf_long_default, digits = 3, units = "W/m^2^")`
in the default case, and
`r format_md(I_surf_short_high, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_surf_short_high, I_surf_short_default, digits = 3, units = "W/m^2^")`
in the default case.

The heat radiated out to space consisted of
`r format_md(I_space_long_high, digits = 3)` W/m^2^ of longwave radiation,
which was 
`r compare_val(I_space_long_high, I_space_long_default, digits = 3, units = "W/m^2^")`
in the default case, and
`r format_md(I_space_short_high, digits = 3)` W/m^2^ of shortwwave radiation,
which was 
`r compare_val(I_space_short_high, I_space_short_default, digits = 3, units = "W/m^2^")`
in the default case.

Next, I opened the interactive RRTM model, set the surface type to "high,"
and manually adjusted the surface temperature until the heat budget was 
balanced.

```{r ex-3-b-balance, include=TRUE, warning=FALSE, message=FALSE}
T_surface_high = 298.05

# Check that the new temperature really does balance the heat flow.
high_warming = run_rrtm(high_cloud_frac = 0.20, T_surface = T_surface_high)
Q_high_warmed = high_warming$Q
Delta_T_high = T_surface_high - T_surface_default
```

The change in I~in~ caused a heat-budget imbalance of 
`r format_md(Q_high, digits = 2)` W/m^2^ going
`r ifelse(Q_high > 0, "into", "out of")` the Earth. 
To put the heat budget back into balance, 
I had to raise the surface temperature 
from `r format_md(T_surface_default, digits = 3)` K to 
`r format_md(T_surface_high, digits = 3)` K, a change of 
`r format_md(Delta_T_high, digits = 2)` K.

#### 3(c) **Heat Flow**

In the figure below, we can see how the upward and downward heat flows change
with altitude for the case of low clouds.

```{r ex-3-a-figure, fig.cap=''Upward and downward fluxes of longwave and shortwave radiation with low clouds.''}
plot_heat_flows(low_clouds)
```

We can see that for the low clouds, the biggest changes are in the downward
flow of radiation. Downward longwave radiation is a lot greater below the clouds
and downward shortwave is smaller. Above the clouds, there is a small increase
in upward longwave and shortwave, but the changes are much smaller than for the
downward radiation.

```{r ex-3-b-figure, fig.cap=''Upward and downward fluxes of longwave and shortwave radiation with high clouds.''}
plot_heat_flows(high_clouds)
```

At the height of the clouds we can see big changes in the upward radiation:
Outgoing longwave radiation is considerably smaller above the clouds and 
outgoing shortwave is larger. There are changes to the downward radiation
at the height of the clouds, but these changes are much smaller than for the 
upward radiation.


As these figures show, the low clouds had the greatest effect on
downward radiation and the high clouds had the greatest effect on upward
radiation. In both cases, the clouds affected the longwave radiation much more
than the shortwave.
'
                          );

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              501,
                              'GEOCARB',
                              'SOL_GEOCARB',
                              'Lab #6 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_06/lab_06_answers.pdf',
                              '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE, include = TRUE, message = FALSE, 
                      warning = FALSE, cache = FALSE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
  knitr::opts_chunk$set(fig.width = 5, fig.height = 5)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

if (!dir.exists(data_dir)) dir.create(data_dir)

library(tidyverse)
library(scales)
library(knitr)

theme_set(theme_bw(base_size = 15))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "geocarb.R"), chdir = T)
```
## Exercise 1: Weathering as a Function of CO~2~

In this exercise, I studied how weathering changes when the amount of CO~2~ in
the atmosphere changes, and how this helps the silicate weathering cycle work 
as a thermostat that controls the earth''s temperature.

To study changes in weathering, I simulated what would happen if the amount of
volcanic activity around the world suddenly increased, which would mean an 
increase in the amount of volcanic degassing that releases CO~2~ into the 
atmosphere.

The GEOCARB model makes it very easy to simulate a sudden change in degassing:
In class we looked at GEOCARB with an emphasis on what happens after a "spike"
of CO~2~ is suddenly released all at once at year zero. 
For this experiment I was more interested in what happens when there is a 
sustained increase in CO~2~ released to the atmosphere, so I ran GEOCARB with 
the CO~2~ spike set to zero and volcanic degassing that increased from 7.5
during the spinup phase to 10.0 during the simulation phase. 

```{r geocarb-degas}
geocarb_data = run_geocarb(co2_spike = 0, degas_spinup = 7.5, degas_sim = 10.0)
```

With a spike of CO~2~, there was a sudden release at year zero and atmospheric
CO~2~ shot up and then gradually came back down to its former value.  
That happened because there was no sustained source of extra CO~2~. 
But here, when the degassing rate goes up, there is a constant source of extra
CO~2~ so we see something different:

```{r geocarb-degas-plot, fig.cap = "The rise and eventual stabilization of carbon dioxide in the atmophere after a sudden and sustained increase in the rate of volcanic degassing."}
ggplot(geocarb_data, aes(x = year, y = co2_atmos)) + geom_line(size = 1) +
  scale_x_continuous(labels = label_comma()) +
  labs(x = "Year", y = "Atmospheric CO2 (ppm)")
```

As CO~2~ rises, I expected temperature to rise as well, and that is indeed what
I saw.

```{r geocarb-degas-t-plot, fig.cap = "Change in the atmospheric temperature after a sudden and sustained increase in the rate of volcanic degassing of CO2."}
ggplot(geocarb_data, aes(x = year, y = temp_atmos)) + geom_line(size = 1) +
  scale_x_continuous(labels = label_comma()) +
  labs(x = "Year", y = "Atmospheric Temperature (K)")

```

What we see is that when the degassing rate changed, both the 
the CO~2~ concentration and the temperature rise quickly, but as they got
closer to their new equilibrium values, the rate of change slowed down, so that
after about 1 million years, the CO~2~ concentration and temperature were both
slowly approaching their ultimate stable values.

## Stabilization of CO~2~

My first research question was to find out how long it takes CO~2~ to stabilize 
after the degassing rate changes, and what the new stable value is.

The CO~2~ concentration never actually gets to a stable value where it stops 
changing, but over time the rate of change slows down as it gets closer and
closer to the stable value.

This means that we need to define what it means for CO~2~ to stabilize. For the
purposes of this lab, I will follow the lab instructions and define the time
when CO~2~ stabilizes as the time when the rate of change becomes smaller than
some threshold. In this case, I followed the lab instructions and defined
this threshold as a rate of change of 1 part per million in 50,000 years.

I can calculate the rate of change with the R expression
`(co2_atmos - lag(co2_atmos)) / (year - lag(year))`.
I have to include the denominator `(year - lag(year))` because if you look at 
the data returned from the GEOCARB model, the number of years per time step
changes. Right after year 0, the time step between consecutive rows of the 
data is 50 years. At 1,500 years, the time step increases to 500 years per row;
at 30,000 years, it increases to 5,000 years per row;
and at 150,000 years, it increases to 50,000 years per row.

One additional complication is that in this case, the CO~2~ level is rising, but
if I were looking at a case where CO~2~ was falling, the rate of change would
be negative, so even when CO~2~ was changing rapidly 
(e.g., -200 ppm per 50,000 years) the rate of change would
be less than 1 ppm per 50,000 years. 
For this reason, I will define stabilization as occurring when the 
_absolute value_ of the rate of change is less than 1 ppm per 50,000 years.

Taking this working definition of stabilization,I find the year when the 
CO~2~ concentration stabilizes by filtering the model output to keep only the 
rows that meet two conditions:

1. The year is greater than zero (so it''s after the degassing rate went up) and 
2. where the absolute value of the rate of change in atmospheric CO~2~ is less 
   than 1 / 50000.

The first row of this new data table will be the year when CO~2~ stabilized,
according to our definition:

```{r geocarb-degas-stabilization}
stabilized = geocarb_data %>% 
  mutate(rate_co2 = (co2_atmos - lag(co2_atmos)) / (year - lag(year))) %>%
  filter(year > 0, abs(rate_co2) < 2E-5)
stabilization_year = stabilized$year[1]
stabilized_co2 = tail(stabilized, 1)$co2_atmos
# Remember that 5E4 is how we tell R 5 times 10^4, which is 50,000
```

After the degassing rate changes, it takes `r stabilization_year` years for the
atmosphere to stabilize. 
Even at 2 million years, CO~2~ is changing slightly, so I estimated the new
stable value of CO~2~ as the value in the last line in the tibble, which 
is `r `round(stabilized_co2, 0)` parts per million, rather than the 
concentration in the year when it stabilized.

## Dynamics of Weathering

Next, I looked at what happened to weathering after the degassing rate 
increased.

```{r geocarb-degas-weathering, fig.cap="Change in the silicate weathering rate after a sudden change in the rate of volcanic degassing of CO2.", fig.width = 6.25}
geocarb_data %>% select(year, degassing_rate, silicate_weathering) %>%
   rename(weathering = "silicate_weathering", degassing = "degassing_rate") %>%
  pivot_longer(cols = -year, names_to = "variable", values_to = "value") %>%
  ggplot(aes(x = year, y = value, color = variable)) +
  geom_line(size = 1) +
  scale_x_continuous(labels = label_comma()) + 
  scale_color_brewer(palette = "Dark2", name = "Rate") +
  labs(x = "Year", y = "Rate (trillion moles/year)")
```

### The Silicate Weathering Thermostat

It can be useful to see how the temperature affects the rate of weathering:

```{r weathering-vs-temp, warning=FALSE}
ggplot(geocarb_data, aes(x = temp_atmos, y = silicate_weathering)) +
   geom_line(size = 1) +
   labs(x = "Atmospheric Temperature (K)", y = "Silicate weathering (trillion moles/year)")
```

There is a clear relationship between temperature and weathering.

It is clear from looking at the figures above that after the degassing rate 
increased:

* The imbalance between degassing and weathering caused the amount of
CO~2~ to rise.
* The rising CO~2~ caused the temeperature to rise.
* And the rising temperature caused weathering to rise.

In the steady state, the rate of weathering must balance the rate of CO~2~
degassing from the Earth, from volcanoes and deep-sea vents, and indeed, as the 
rate of change of CO~2~ in the atmosphere stabilizes, the weathering rate is 
very close to the degassing rate.


The following plot is _**not required for the lab**_, but it can be interesting 
to plot the rate of change in CO~2~ concentration versus the difference between 
degassing and weathering:

```{r co2-vs-weathering, fig.cap = "The rate of change in atmospheric CO2 versus the difference between the degassing rate and the weathering rate", warning = FALSE}
geocarb_data %>% 
   mutate(rate_co2 = (co2_atmos - lag(co2_atmos)) / (year - lag(year)),
          diff = degassing_rate - silicate_weathering) %>%
   ggplot(aes(x = diff, y = rate_co2)) +
   geom_line(size = 1) +
   labs(x = "Degassing - weathering", y = "Rate of change of CO2")
```

In this graph, we can really see the thermostat in action: When there is a big
difference between degassing and weathering, the CO~2~ concentration in the
atmosphere rises, which causes the temperature to rise, which increases the
rate of weathering. As the rate of weathering gets closer to the rate of 
degassing, the difference $(\text{degassing} - \text{weathering}) gets closer
to zero, and the rate of change of CO~2~ becomes smaller. 
Eventually, the atmosphere stabilizes when degassing becomes very close to
weathering, so the difference is very close to zero, and the rate of change of 
CO~2~ becomes so close to zero that for all practical purposes, the amount of
CO~2~ in the atmosphere stops changing.

That is how the silicate weathering thermostat works.

### The effect of changing degassing rates

Finally, I explored how the final, stable CO~2~ concentration and atmospheric
temperature depend on the degassing rate.
Here, I am only interested in the final quasi-stabilized value of CO~2~ and
atmospheric temperature for each value of degassing, so I can see how the 
stable conditions depend on the degassing rate.

```{r vary-degassing, warning=FALSE}
multi_degas_data = tibble()
for (degas_rate in c(7.5, 10, 12.5, 15, 17.5, 20)) {
   geocarb_data = run_geocarb(co2_spike = 0, degas_spinup = 7.5, 
                              degas_sim = degas_rate)
   last_row = tail(geocarb_data, 1)
   multi_degas_data = bind_rows(multi_degas_data, last_row)
}
```

Now I can plot the stable value of CO~2~ versus the degassing rate:

```{r co2_vs_degassing, warning=FALSE}
ggplot(multi_degas_data, aes(x = degassing_rate, y = co2_atmos)) +
   geom_line(size = 1) +
   labs(x = "Degassing (trillion moles per year)", y = "Stabilized CO2 (ppm)")
```

Next, I plot the difference between weathering and degassing at the end of 
each GEOCARB run:

```{r weathering_vs_degassing}
ggplot(multi_degas_data, aes(x = degassing_rate, 
                             y = degassing_rate - silicate_weathering)) +
   geom_line(size = 1) +
   labs(x = "Degassing (trillion moles per year)", y = "Degassing - Weathering")
```

We see here that weathering doesn''t exactly match degassing at the end of 
1.95 million years, but it''s very close. The differences are less than 1% of
the degassing rate (e.g., a difference of 0.04 when degassing is 16, which 
works out to `r label_percent(accuracy = 0.01)(0.04/16)` of the degassing rate)

Next, I plot the stabilized silicate weathering rate versus CO~2~ concentration

```{r weathering-vs-co2}
ggplot(multi_degas_data, aes(x = co2_atmos, y = silicate_weathering)) +
   geom_line(size = 1) + 
   labs(x = "Stabilized CO2 (ppm)", y = "Silicate weathering (trillion moles/year)")
```

So we see that silicate weathering rises as CO~2~ does. The mechanism for this
is largely the rise in temperature, which we can also plot:

```{r weathering-vs-stable-temp}
ggplot(multi_degas_data, aes(x = temp_atmos, y = silicate_weathering)) +
   geom_line(size = 1) +
   labs(x = "Atmospheric temperature (K)", y = "Silicate weathering (trillion moles/year)")
```

We see that rising temperature strongly affects weathering. This is how the 
silicate weathering thermostat works.


## Exercise 2: The Long-Term Fate of Fossil Fuel CO~2~

In the previous exercise, I looked at how the earth responds to a sustained
increase in CO~2~ emissions over millions of years. Here, I will look at 
what happens when there is a one-time release of a very large quantity of 
CO~2~. From a geological perspective, where people think in terms of millions
of years, this is a good approximation of the release of fossil fuels. In the
end, we expect that people will have burned a lot of fossil fuels in the span
of 200 years or so and then will stop.

Here I am going to investigate what happens after we stop burrning fossil fuels.

I start with a very simple experiment: What would have happened to the 
atmosphere if people didn''t burn any fossil fuels. To simulate this, I set
the CO~2~ spike to 0 and also set the volcanic degassing rate during the 
simulation to the same value I used in the spinup (7.5 trillion moles per year).

```{r null-run}
geocarb_null = run_geocarb(co2_spike = 0, degas_spinup = 7.5, degas_sim = 7.5)
```

Now, I plot the change in CO~2~, silicate weathering, carbonate weathering, and
total weathering, when the transition occurs at year 0:

```{r null-run-table}
geocarb_null %>% filter(year >= -200, year <= 200) %>%
   select(year, co2_atmos, silicate_weathering, carbonate_weathering,
          total_weathering) %>%
   kable(digits = 2, 
         col.names = c("Year", "CO~2~", "Silicate Weathering", 
                       "Carbonate Weathering", "Total Weathering"))
```



This is completely unsurprising: If we don''t put any extra CO~2~ in the 
atmosphere, the amount of CO~2~ in the atmosphere does not change.

Now I start looking at what happens when we do put CO~2~ in the atmosphere.
I ran GEOCARB with a spike of 2000 billion tons of CO~2~ released into the 
atmosphere at year 0. Near year 0, each time step in the simulation represents 
50 years, so this is a slight simplification, but from the perspective of 
thousands or millions of years, it is pretty close to what we see happening in
the real world.

```{r co2-spike-2000}
geocarb_2k_spike = run_geocarb(co2_spike = 2000, degas_spinup = 7.5, 
                               degas_sim = 7.5)
```

Now I am going to plot what happens to the silicate weathering right after
the spike (i.e., right after year 0), and then I will plot the three kinds of
weathering before and after year zero, when the spike is released.

In the code below, I use the `str_replace_all` function to change
`silicate_weathering` to `silicate` and so forth. I also use the `ordered`
function to arrange the order in which `silicate`, `carbonate`, and `total` 
appear in the legend, from top to bottom, to match the order the three lines 
appear in the graph. That''s a level of fussiness I don''t expect from students'' 
lab reports, but I put it in so you can see how it''s done.

```{r plot_co2_spike-fast, fig.cap = "Silicate weathering right after a spike of CO~2~ containing 2000 BT carbon is released"}
weathering_history = geocarb_2k_spike %>% 
   select(year, silicate_weathering, carbonate_weathering, total_weathering) %>%
   pivot_longer(cols = -year, names_to = "Weathering", values_to = "rate") %>%
   mutate(Weathering = str_replace_all(Weathering, "_weathering", "") %>%
             ordered(levels = c("total", "silicate", "carbonate")))

ggplot(weathering_history, aes(x = year, y = rate, color = Weathering)) + 
   geom_line(size = 1, na.rm = TRUE) +
   scale_color_brewer(palette = "Dark2") +
   xlim(-500, 1000) +
   labs(x = "Year", y = "Rate (trillion moles per year)")
```

Next, I look over a much longer time:

```{r plot_co2_spike-slow, fig.cap = "Silicate weathering right after a spike of CO~2~ containing 2000 BT carbon is released"}
ggplot(weathering_history, aes(x = year, y = rate, color = Weathering)) + 
   geom_line(size = 1, na.rm = TRUE) +
   scale_color_brewer(palette = "Dark2") +
   labs(x = "Year", y = "Rate (trillion moles/year)")
```

To test when the CO~2~ stops changing, I use the same criterion I did in the 
previous exercise: when the absolute value of the rate of change is less than 
1 ppm per 50,000 years. The rate of change of CO~2~ here is negative 
(CO~2~ shoots up right after the spike, and then drops over time until it 
returns to close to its original value). 
I define stabilization as when the rate of change is very close to zero, whether
it''s positive or negative, so my criterion is for the absolute value of the 
rate of change to be less than 1 ppm per 50,000 years.

The stabilization year is the first year, after year zero, where this is true.
However, because CO~2~ continues to change slowly even after the nominal 
stabilization, I estimate the stable value of CO~2~ to be the value at the very
end of the run, at 1.95 million years.

```{r spike-stabilization}
spike_stabilized = geocarb_2k_spike %>% 
   mutate(co2_rate = (co2_atmos - lag(co2_atmos)) / (year - lag(year))) %>%
   filter(year > 0, abs(co2_rate) < 2E-5)
stabilization_year = head(spike_stabilized$year, 1)
stabilization_value = tail(spike_stabilized$co2_atmos, 1)
```

CO~2~ approximately stabilizes after 
`r label_comma(accuracy = 1000)(stabilization_year)` years, and the final 
stable value is approximately 
`r format_md(stabilization_value, digits = 3)` ppm.

### Weathering and carbonate burial

Next, I looked at how the relationship between total weathering and carbonate 
burial changed over time. Total weathering measures the rate at which new 
carbonate that is released into the oceans, and carbonate burial is the rate
at which carbonate is removed from the oceans by being converted to solid 
minerals and buried on the sea floor.

```{r carbonate-burial-10k}
carbonate_history = geocarb_2k_spike %>% 
   select(year, "Carbon burial" = carbon_burial, 
          "Total weathering" = total_weathering) %>%
   pivot_longer(cols = -year, names_to = "variable", values_to = "value")
ggplot(carbonate_history, aes(x = year, y = value, color = variable)) +
   geom_line(size = 1, na.rm = TRUE) +
   scale_color_brewer(palette = "Dark2", name = NULL) +
   xlim(-1E3, 1E4) +
   labs(x = "Year", y = "Rate (trillion moles per year)")
   

```

When CO~2~ dissolves into the oceans from the atmosphere, it depletes carbonate
in the oceans. This slows down the rate of carbonate burial. Meanwhile, as
CO~2~ builds up in the atmosphere, the temperature rises and the weathering rate
goes up.

Weathering adds more carbonate to the ocean, which replaces the carbonate that
was converted to bicarbonate by reacting with CO~2~ from the atmosphere. 
As the carbonate in the oceans starts to rise, the carbonate burial also rises.

Eventually, as the amount of CO~2~ in the atmosphere stabilizes, the total 
weathering rate and the carbonate burial rate should become roughly equal.

Now, let''s look at the rates over a longer period of time:

```{r carbonate-burial-medium}
ggplot(carbonate_history, aes(x = year, y = value, color = variable)) +
   geom_line(size = 1, na.rm = TRUE) +
   scale_color_brewer(palette = "Dark2", name = NULL) +
   xlim(NA, 3E5) +
   labs(x = "Year", y = "Rate (trillion moles per year)")
```

After a few hundred thousand years, the difference between the two rates
is too small to see on a graph that shows the initial spike, so I plotted 
the rates of burial and weathering starting 1 million years after the spike:

```{r carbonate-burial-long}
carbonate_history %>% filter(year >= 1E6) %>%
ggplot(aes(x = year, y = value, color = variable)) +
   geom_line(size = 1, na.rm = TRUE) +
   scale_color_brewer(palette = "Dark2", name = NULL) +
   xlim(1E6, 2E6) +
   labs(x = "Year", y = "Rate (trillion moles per year)")
```


Notice the scale on the vertical axis: The difference between the weathering
rate and the burial rate is less than 0.01 trillion moles per year. This is
a huge difference from 10,000 years after the spike, when the difference was
about 5 trillion moles per year, a factor of 500 greater.

### Summary

In this exercise, I explored different aspects of how the geochemical carbon 
cycle changes after a large amount of CO~2~ is discharged into the air.
What I found was that silicate and carbonate weathering do eventually remove
the excess CO~2~ from the atmosphere and that things stabilize when the 
carbonate burial balances the total weathering.

One important thing this exercise revealed is that the fate of CO~2~
is ultimately controlled by the rate of geological weathering---the rate at
which rain falling on rocks wears them away. This is very slow, and that 
means that even after we stop burning fossil fuels, it can take hundreds of 
thousands of years for CO~2~ to return to its natural concentration in the
atmosphere.


## Exercise 3 (Graduate Students Only): How the Land Plants Changed the Carbon Cycle

In this exercise, I explored how the emergence of land plants altered the 
carbon cycle. To do this, I ran the GEOCARB model with no plants during its
spinup and then added plants for the simulation, so this simulates a condition
where there were no plants for millions of years, and then all of a sudden, at
year zero, lots of land plants appeared.

```{r geocarb-plants}
geocarb_plants = run_geocarb(co2_spike = 0, plants_spinup = FALSE, 
                             plants_sim = TRUE)
```

When the plants appeared, they immediately accelerated the weathering:
```{r weathering-plants}
geocarb_plants %>% filter(year <= 1000) %>% 
   select(year, carbonate_weathering, silicate_weathering, total_weathering) %>%
   pivot_longer(-year, names_to = "weathering", values_to = "rate") %>%
   mutate(weathering = str_replace_all(weathering, "_weathering", "")) %>%
   ggplot(aes(x = year, y = rate, color = weathering)) +
   geom_line(size = 1) +
   scale_color_brewer(palette = "Dark2") +
   scale_x_continuous(labels = label_comma()) +
   labs(x = "Year", y = "Weathering Rate")
```

Over time, we see that the weathering rate gradually drops back to its original 
level.

```{r  weathering-plants-long}
geocarb_plants %>% filter(year <= 1E6) %>%
   select(year, carbonate_weathering, silicate_weathering, total_weathering) %>%
   pivot_longer(-year, names_to = "weathering", values_to = "rate") %>%
   mutate(weathering = str_replace_all(weathering, "_weathering", "")) %>%
   ggplot(aes(x = year, y = rate, color = weathering)) +
   geom_line(size = 1) +
   scale_color_brewer(palette = "Dark2") +
   scale_x_continuous(labels = label_comma()) +
   labs(x = "Year", y = "Weathering Rate")
```

So what does this do to atmospheric CO~2~ concentrations?
When the weathering goes up, our theories tell us that this should remove CO~2~
from the atmosphere by moving it into the ocean as dissolved carbonate ions, 
and ultimately converting it to carbonate rocks, so atmospheric CO~2~ should 
drop.

```{r co2-plants}
geocarb_plants %>% 
   ggplot(aes(x = year, y = co2_atmos)) +
   geom_line(size = 1) +
   scale_x_continuous(labels = label_comma()) +
   labs(x = "Year", y = "Atmospheric CO2 (ppm)")
```

It''s useful to show a detail plot of what happens right at the transition where
the plants appear.

```{r co2-plants-short}
geocarb_plants %>% filter(year <= 1000) %>%
   ggplot(aes(x = year, y = co2_atmos)) +
   geom_line(size = 1) +
   scale_x_continuous(labels = label_comma()) +
   labs(x = "Year", y = "Atmospheric CO2 (ppm)")
```

So the CO~2~ starts to drop as soon as the plants appear.
'
                          );

INSERT INTO lab_solutions (
                              lab_sol_id,
                              lab_grp_key,
                              lab_sol_pub_key,
                              lab_sol_title,
                              lab_sol_author,
                              lab_sol_filename,
                              lab_sol_pdf_url,
                              lab_sol_markdown
                          )
                          VALUES (
                              601,
                              'FEEDBACK',
                              'SOL_FEEDBACK',
                              'Lab #5 Answers',
                              NULL,
                              'answers',
                              '/files/lab_solutions/lab_05/lab_05_answers.pdf',
                              '```{r setup, include=FALSE}
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, ''md'')})
knitr::opts_chunk$set(echo = TRUE)

if (knitr::is_latex_output()) {
  message("Setting PDF plot hook.")
  new_plot_hook <- function(x, options)
    paste("\n", knitr::hook_plot_tex(x, options), "\n")

  knitr::knit_hooks$set(plot = new_plot_hook)
} else {
  message("Not using PDF output.")
}


options(dplyr.summarise.inform = FALSE)

# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"

# library(pacman)
# p_load(tidyverse, jsonlite, httr, magrittr, scales)
library(tidyverse)
library(magrittr)
library(scales)
library(jsonlite)
library(xml2)
library(httr)
library(knitr)

theme_set(theme_bw(base_size = 10))

source(file.path(script_dir, "utils.R"), chdir = T)
source(file.path(script_dir, "format_md.R"), chdir = T)
source(file.path(script_dir, "modtran.R"), chdir = T)
source(file.path(script_dir, "rrtm.R"), chdir = T)
```
In the answers below, I illustrate how you can use RMarkdown to integrate 
code and data analysis with your text to produce a clear report that follows the
principles of reproducible research

# Exercise 1: Clouds and Infrared.

Clouds play an important and complex role in the climate system because they
interact with both visible and infrared light. In this exercise, I investigated
the way that the clouds interact with the flow of heat in the form of longwave
infrared light.

I began by comparing the longwave radiation going out from the atmosphere to
space under four conditions: with no clouds and with low, medium, and 
high-altitude clouds. Next, I compared the upward longwave radiation going out
to space with the radiation going downward from the atmosphere, which is 
absorbed by the surface, and compared the upward and downward radiation for 
clear skies and with low clouds. Finally, I investigated the effect of water
vapor on the downward radiation, which let me compare the impact of water vapor 
to the impact of clouds.

The earth''s temperature is determined by balancing incoming and outgoing 
radiation. Incoming radiation reaches the earth as shortwave radiation from the
sun and for this lab, I will only look at the effect clouds have on longwave
radiation, so I will ignore the way clouds affect shortwave radiation (i.e., 
I will ignore the way that clouds change the earth''s albedo).

## Clouds and Outgoing Longwave Radiation

First, I look at the effect clouds have on outgoing radiation. 
To do this, I start by running MODTRAN with the default settings, which include
a clear sky with no clouds:
```{r modtran_default, fig.cap = "Looking down from 70 km with a clear sky."}
default_outgoing = run_modtran(atmosphere = "tropical", altitude_km = 70, 
                               looking = "down")
i_out_clear = default_outgoing$i_out
plot_modtran(default_outgoing, descr = "Clear sky, looking down from 70 km")
```

Next, I do the same for three kinds of clouds: low-altitude stratus clouds,
medium altitude altostratus, and high-altitude cirrus.

```{r clouds-looking-down}
stratus_outgoing = run_modtran(atmosphere = "tropical", altitude_km = 70, 
                               looking = "down", clouds = "stratus")
altostratus_outgoing = run_modtran(atmosphere = "tropical", altitude_km = 70, 
                               looking = "down", clouds = "altostratus")
cirrus_outgoing = run_modtran(atmosphere = "tropical", altitude_km = 70, 
                               looking = "down", clouds = "standard cirrus")

i_out_stratus = stratus_outgoing$i_out
i_out_altostratus = altostratus_outgoing$i_out
i_out_cirrus = cirrus_outgoing$i_out
```
```{r stratus-down-fig, fig.cap = "Looking down on stratus clouds from 70 km"}
plot_modtran(stratus_outgoing, 
                         descr = "Stratus clouds, looking down from 70 km")
```
```{r altostratus-down-fig, fig.cap = "Looking down on altostratus clouds from 70 km"}
plot_modtran(altostratus_outgoing, 
                         descr = "Altostratus clouds, looking down from 70 km")
```
```{r cirrus-down-fig, fig.cap = "Looking down on cirrus clouds from 70 km"}
plot_modtran(cirrus_outgoing, 
                         descr = "Cirrus clouds, looking down from 70 km")
```


The following table compares the total intensity of outgoing radiation with 
different kinds of clouds and with a clear sky:
```{r i-out-table}
i_out_tbl = tibble(clouds = c("none", "stratus", "altostratus", "cirrus"),
                   altitude = c("", "low", "medium", "high"),
                   i_out = c(i_out_clear, i_out_stratus, i_out_altostratus,
                             i_out_cirrus),
                   change = i_out - i_out_clear
                   )
kable(i_out_tbl, digits = 1)
```

Adding stratus (low-altitude) clouds reduces I~out~ by 
`r format_md(i_out_clear - i_out_stratus, digits = 2)` W/m^2^,
adding cirrus (high-altitude) clouds reduces I~out~ by 
`r format_md(i_out_clear - i_out_cirrus, digits = 2) `W/m^2^, and
altostratus (medium-altitude) clouds reduces I~out~ by 
`r format_md(i_out_clear - i_out_altostratus, digits = 2) `W/m^2^.

When we compare the spectra of outgoing radiation, there is very little 
difference in the parts of the spectrum where greenhouse gases absorb 
strongly (CO~2~ near 700 cm^-1^, ozone near 1050 cm^-1^,
and water vapor in the regions below about 550 cm^-1^ and above 1200 cm^-1^),
but there are clear differences in the two atmospheric window regions
(800--1000 cm^-1^ and 1100--1200 cm^-1^), where the greenhouse gases do not 
absorb very much.
For all three cloud types, the outgoing radiation is smaller in both window 
regions. The difference is greatest for altostratus, less for cirrus, and 
least of all for stratus.


What is happening here is the radiation we see with clear skies in the window
region is coming from the very low atmosphere, near the surface. When there are
clouds, they are higher up, so they block the radiation from near the surface,
but they also emit radiation at an intensity that corresponds to the temperature
of the tops of the clouds.

The higher up you go, the colder the temperature is, so the cold tops of the 
clouds emit longwave radiation with lower intensity than the atmosphere below
them would.

The difference between stratus and altostratus has to do with the altitude of
the clouds: higher altitudes correspond to lower temperatures, so the tops of 
altostratus clouds (medium altitude) are colder than the tops of the stratus
clouds (low-altitude).

With cirrus, the situation is more complicated. Stratus and altostratus clouds
tend to cover the whole sky, but cirrus clouds are wispy and only cover a small
fraction of the sky (see the pictures from my lecture for class #8 on
Feb. 10: <https://ees3310.jgilligan.org/slides/class_08/#/cloud-feedbacks-2>
and <https://ees3310.jgilligan.org/slides/class_08/#/cloud-feedbacks-3>).
This means that the cirrus clouds will have a smaller effect on outgoing 
radiation than the altostratus clouds, even though their temperature is
lower. 
(**Note:** Students do not need to get the explanation of cirrus clouds correct 
to get full credit for this exercise.)

## Looking up from the Ground with a Clear Sky

We have spent a lot of time looking down from high in the atmosphere, but 
MODTRAN also lets us look up from the ground and see the longwave light coming
down to the surface from the atmosphere. We start by comparing the spectrum of 
longwave radiation going up to space and going down to the surface under a 
clear sky:

```{r clear-up, fig.cap = "Upward longwave radiation going out to space from a clear sky"}
clear_up = run_modtran(atmosphere = "midlatitude winter", 
                         altitude_km = 70, looking = "down",
                         h2o_scale = 1, clouds = "none")
plot_modtran(clear_up, descr = "Looking down from 70 km with clear skies")
```


```{r clear-down, fig.cap = "Downward longwave radiation coming to the surface from a clear sky"}
clear_down = run_modtran(atmosphere = "midlatitude winter", 
                         altitude_km = 0, looking = "up",
                         h2o_scale = 1, clouds = "none")
i_down_clear = clear_down$i_out
plot_modtran(clear_down, descr = "Looking up from 0 km with clear skies")
```

When we compare the two spectra, they are almost opposite. The upward radiation 
going out to space is brightest in the atmospheric window and dimmest where 
CO~2~ absorbs strongly.
The downward radiation reaching the ground is brightest where CO~2~ and water 
vapor absorb strongly and dimmest in the atmospheric window.

The reason for this is that where the atmosphere is most transparent, a lot of 
the radiation we see is coming from whatever is on the other side of the 
atmosphere. When we are on the surface looking up with our eyes, and we aren''t 
looking at the sun we see visible light from space (the moon and stars).
Outer space is very cold, so in the atmospheric window region of the longwave 
spectrum, our sensor looking up from the surface sees blackbody radiation 
corresponding to the cold temperatures of space, and our sensor looking down
from 70 km sees blackbody radiation corresponding to the warm temperature of the
surface.

Where CO~2~ absorbs strongly, when we look down from space, the CO~2~ in the 
atmosphere absorbs the bright radiation from the warm lower atmosphere before it
can get up to the sensor, so what we see is the blackbody radiation from CO~2~
molecules high up in the atmosphere where the temperature is cold, so the 
radiation is very faint. When we look up from the surface, CO~2~ molecules 
near the surface have high emissivity, so they radiate strongly and the sensor
sees intense radiation. The same applies to water vapor, and the sensor sees 
bright, intense radiation in the parts of the spectrum where water vapor absorbs
strongly (i.e., where it has a large emissivity).

## Looking up from the Ground with Clouds

Next, I investigated how the presence of clouds changes the spectrum that a 
sensor looking up from the ground will see.

```{r stratus-down, fig.cap = "Downward longwave radiation coming to the surface from stratus clouds"}
stratus_down = run_modtran(atmosphere = "midlatitude winter", 
                         altitude_km = 0, looking = "up",
                         h2o_scale = 1, clouds = "stratus")
i_down_stratus = stratus_down$i_out
plot_modtran(stratus_down, descr = "Looking up from 0 km with stratus clouds")
```

Here, the spectrum looks like a perfect black body at a temperature of 
around 270 K.
The bottom of the cloud acts like a perfect blackbody, and stratus clouds are
low in the sky, so the temperature is relatively high. This has an especially 
big effect in the atmospheric window regions of the spectrum. In the windows,
the downward spectrum was very faint with clear skies, but with stratus clouds
the windows have a lot of downward radiation.

Basically, the bottoms of the low clouds are warm, and because of this, they 
glow brightly with longwave blackbody radiation, and that sends a lot of heat to 
the surface. Adding stratus clouds to a winter sky increased the heat coming to
the surface from the atmosphere from 
`r format_md(i_down_clear, digits = 3)` Watts per square meter under clear
skies to `r format_md(i_down_stratus, digits = 3)` Watts per square meter.

This extra heat will warm the ground, so on a winter night, we expect the 
temperature to be a good deal warmer when the sky is cloudy than when it is
clear.

## The Effect of Water Vapor

Next, I investigated the way water vapor affects outgoing longwave radiation and
compare that to the effects of clouds. To do this, I compare the intensity of
downward longwave radiation at the surface with the normal amount of water vapor
in the atmosphere to the intensity when there is no water vapor.

The previous clear-sky run had a normal amount of water vapor, so I only need to
run MODTRAN with `h2o_scale = 0` and compare that to the previous `clear_down`
run, which had the default value `h2o_scale = 1`

```{r dry-down, fig.cap = "Downward longwave radiation coming to the surface with a clear sky and no water vapor"}
dry_down = run_modtran(atmosphere = "midlatitude winter", 
                         altitude_km = 0, looking = "up",
                         h2o_scale = 0, clouds = "none")
i_down_dry = dry_down$i_out
plot_modtran(dry_down, 
             descr = "Looking up from 0 km with a clear sky and no water vapor")
```

This spectrum contrasts dramatically with the spectrum of downward radiation
for clear skies with a normal amount of water vapor. In the regions below
about 550 cm^-1^ and above 1200 cm^-1^, the longwave radiation is much less 
intense---indeed, there is basically none, except for the region around 1300 
cm^-1^ where methane absorbs and emits.

The three big features of longwave emission correspond to the CO~2~ absorption
near 700 cm^-1^, ozone absorption near 1050 cm^-1^, and methane absorption near
1300 cm^-1^. Other than those three features, there is essentially no downward
radiation. This is because without any water vapor, the atmosphere is mostly
transparent to longwave radiation, and because good absorbers are also good 
emitters, this means that the amosphere emits almost no radiation in most
of the spectrum. What the sensor sees from the ground in most of the spectrum
is just the cold temperature of space, and the correspondingly low intensity of
longwave radiation.

The total downward radiation with clear skies and no water vapor is
`r format_md(i_down_dry, digits = 2)` W/m^2^, which is 
`r format_md(i_down_clear - i_down_dry, digits = 3)` W/m^2^ less than for clear
skies with water vapor. This difference is a way to measure the greenhouse effect
of water vapor: adding water vapor to the atmosphere increases the amount of
heat absorbed by the surface by 
`r format_md(i_down_clear - i_down_dry, digits = 3)` W/m^2^. 
This heat is longwave radiation emitted by the water vapor in the atmosphere, 
and it heats up the earth''s surface 
(the ground and the water at the surface of the oceans).

Water vapor has a much larger effect than adding clouds. 
Adding stratus clouds to a clear sky increased I~out~ by 
`r format_md(i_down_stratus - i_down_clear, digits = 2)` W/m^2^
and adding water vapor to a dry atmosphere increased I~out~ by
`r format_md(i_down_clear - i_down_dry, digits = 3)` W/m^2^.

# Exercise 2: Water Vapor Feedback

In the previous exercise I found that water vapor affects longwave radiation
very powerfully. The amount of water vapor in the atmosphere depends on the
air temperature. The warmer the air is, the more water vapor it can hold, so
as temperatures rise, the amount of water vapor also rises, and as temperatures
fall, the amount of water vapor falls. This effect creates a powerful 
positive feedback involving water vapor.

Here I will estimate the effect of the water-vapor feedback using the RRTM
climate model, which includes the effects of both radiation and convection.
To measure the water vapor feedback, I will measure the climate sensitivity
under normal conditions and when there is no water vapor in the atmosphere.

## Finding the Climate Sensitivity

The climate sensitivity is defined as the change in surface temperature that
occurs when the amount of CO~2~ is doubled. To calculate the climate sensitivity
with the RRRTM model, I first ran the model with CO~2~ at its current value of 
440 ppm, and make sure that the heat flow into and out of the earth is balanced.
Then I ran the model with CO~2~ doubled to 800 ppm and adjusted the surface 
temperature until the model reported that the heat flow was balanced.

First, I ran the RRTM model with its default parameters.

```{r rrtm-default}
rrtm_default = run_rrtm(co2_ppm = 400, relative_humidity = 80)
q_default = rrtm_default$Q
```

The results from RRTM model runs include the variable _Q_, which is the 
imbalance of I~in~ - I~out~, so if _Q_ > 0, there is more heat coming in and
the earth will warm up, and if _Q_ < 0, there is more heat going out and the
earth will cool off.

Here, I can verify that the RRTM model in its default configuration has 
_Q_ = `r format_md(q_default, digits = 1)` W/m^2^.

Next, I ran RRTM with CO~2~ doubled:

```{r rrtm-doubled}
rrtm_doubled = run_rrtm(co2_ppm = 800, relative_humidity = 80)
q_doubled = rrtm_doubled$Q
```

With CO~2~ doubled, _Q_ becomes `r format_md(q_doubled, digits = 1)` W/m^2^.
Using trial and error with the interactive web version of RRTM, I found a 
temperature where _Q_ = 0.
Initially, _Q_ was `r format_md(q_doubled, digits = 1)`, which is 
`r ifelse(q_doubled > 0, "greater", "less")` than 0, so I knew that I had to 
`r ifelse(q_doubled > 0, "increase", "decrease")` the surface temperature.
I first raised the surface temperature from 
`r format_md(rrtm_doubled$T_surface, digits = 3)` K to 290 K.

```{r rrtm-test-1}
test_T_1 = 290
rrtm_test_1 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_1)
q_test_1 = rrtm_test_1$Q
```

Now, _Q_ = `r format_md(q_test_1, digits = 1)`, which is less than zero, so 
I needed to reduce T~surface~. I chose a value roughly halfway between the 
original temperature (`r format_md(rrtm_doubled$T_surface, digits = 3)` K) and
290 K: my new guess was 287 K.

```{r rrtm-test-2}
test_T_2 = 287
rrtm_test_2 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_2)
q_test_2 = rrtm_test_2$Q
```

Now, _Q_ = `r format_md(q_test_2, digits = 1)`, which is still slightly less 
than zero, so I needed to reduce T~surface~ a bit more. 
I chose a value roughly halfway between the original temperature 
(`r format_md(rrtm_doubled$T_surface, digits = 3)` K) and `r test_T_2` K: 
my new guess was 286 K

```{r rrtm-test-3}
test_T_3 = 286
rrtm_test_3 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_3)
q_test_3 = rrtm_test_3$Q
```

Now, _Q_ = `r format_md(q_test_3, digits = 1)`, so I guess a new temperature
halfway between `r test_T_3` and `r test_T_2`

```{r rrtm-test-4}
test_T_4 = 286.5
rrtm_test_4 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_4)
q_test_4 = rrtm_test_4$Q
```

Now, _Q_ = `r format_md(q_test_4, digits = 1)`, so I guess a new temperature
halfway between `r test_T_4` and `r test_T_2`

```{r rrtm-test-5}
test_T_5 = 286.75
rrtm_test_5 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_5)
q_test_5 = rrtm_test_5$Q
```

Now, _Q_ = `r format_md(q_test_5, digits = 1)`, so I guess a new temperature
halfway between `r test_T_5` and `r test_T_2`

```{r rrtm-test-6}
test_T_6 = 286.87
rrtm_test_6 = run_rrtm(co2_ppm = 800, relative_humidity = 80, 
                       T_surface = test_T_6)
q_test_6 = rrtm_test_6$Q
```


Now, _Q_ = `r format_md(q_test_6, digits = 1)`, so I am done and the new
equilibrium surface temperature is `r test_T_6`.
The climate sensitivity for an atmosphere with 80% average humidity is the 
change in surface temperature that was necessary to bring _Q_ to zero.

```{r t-2xco2}
climate_sensitivity_humid = test_T_6 - rrtm_doubled$T_surface
```

The climate sensitivity is 
`r format_md(climate_sensitivity_humid, digits = 2)` K

## Climate Sensitivity without Water Vapor

Next, I do the same exercise, but with `relative_humidity = 0` so there will be
no water-vapor feedback.

First, I run RRTM with no water vapor and 400 ppm CO~2~:

```{r rrtm-dry}
rrtm_dry = run_rrtm(co2_ppm = 400, relative_humidity = 0)
q_dry = rrtm_dry$Q
```

_Q_~dry~ = `r format_md(q_dry, digits = 1)`, so before I can do anything else, 
I need to adjust T~surface~ to bring _Q_ to zero.

```{r rrtm-dry-equilibrium}
new_T_surface = 261.55
rrtm_dry_eq = run_rrtm(co2_ppm = 400, relative_humidity = 0, 
                       T_surface = new_T_surface)
q_dry_eq = rrtm_dry_eq$Q
```

Repeating the same trial-and-error process illustrated above, I tried
T~surface~ = 270 K, then 260 K, then 265 K, then 262.5 K, then 261 K, then
261.5 K, then 261.6 K, then 261.55 K, which finally gave
_Q_ = `r round(q_dry_eq, 1)`.

Next, I doubled CO~2~

```{r rrtm-doubled-dry}
rrtm_doubled_dry = run_rrtm(co2_ppm = 800, relative_humidity = 0, 
                            T_surface = new_T_surface)
q_doubled_dry = rrtm_doubled_dry$Q
```


_Q_~doubled,dry~ = `r format_md(q_dry, digits = 1)`, so before I can do 
anything else, I need to adjust T~surface~ to bring _Q_ to zero.

```{r rrtm-doubled-dry-eq, eval = TRUE, include = FALSE}
climate_sensitivity_dry = 1.1
T_doubled_dry = new_T_surface + climate_sensitivity_dry
rrtm_doubled_dry_eq = run_rrtm(co2_ppm = 800, relative_humidity = 0, 
                            T_surface = T_doubled_dry)
q_doubled_dry_eq = rrtm_doubled_dry_eq$Q
```

After some trial and error, similar to what I showed above, I found that
raising the surface temperature by `r round(climate_sensitivity_dry, 1)` K 
would bring _Q_ to `r round(q_doubled_dry_eq, 2)`

```{r rrtm-doubled-dry-eq, echo = TRUE, eval = FALSE}
```

## Assessing the Water-Vapor Feedback

Without any water vapor in the atmosphere, the climate sensitivity is
`r format_md(climate_sensitivity_dry, digits = 2)` K 
and with water vapor in the atmosphere and the water-vapor feedback operating,
the climate sensitivity rises to 
`r format_md(climate_sensitivity_humid, digits = 2)` K, so the 
water vapor feedback amplifies the climate sensitivity by a factor of 
`r format_md(climate_sensitivity_humid / climate_sensitivity_dry, digits = 1)`.

This means that when the amount of CO~2~ in the atmosphere rises, 
the water-vapor feedback more than doubles the amount of warming.
'
                          );


-- Table: link_cal_class
CREATE TABLE link_cal_class (
    cal_id    INTEGER,
    class_id  INTEGER,
    class_num INTEGER,
    week_num  INTEGER
);

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1001,
                               1,
                               1,
                               1
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1002,
                               2,
                               2,
                               1
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1003,
                               3,
                               3,
                               1
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1004,
                               4,
                               4,
                               2
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1005,
                               5,
                               5,
                               2
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1006,
                               6,
                               6,
                               2
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1007,
                               7,
                               7,
                               3
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1008,
                               8,
                               8,
                               3
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1009,
                               9,
                               9,
                               3
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1010,
                               10,
                               10,
                               4
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1011,
                               11,
                               11,
                               4
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1012,
                               12,
                               12,
                               4
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1013,
                               13,
                               13,
                               5
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1014,
                               14,
                               14,
                               5
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1015,
                               15,
                               15,
                               5
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1016,
                               16,
                               16,
                               6
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1017,
                               17,
                               17,
                               6
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1018,
                               18,
                               18,
                               6
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1019,
                               19,
                               19,
                               7
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1020,
                               20,
                               20,
                               7
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1021,
                               21,
                               21,
                               7
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1022,
                               22,
                               22,
                               8
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1023,
                               23,
                               23,
                               8
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1024,
                               24,
                               24,
                               8
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1025,
                               25,
                               25,
                               9
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1026,
                               26,
                               26,
                               9
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1027,
                               27,
                               27,
                               9
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1028,
                               28,
                               28,
                               10
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1029,
                               29,
                               29,
                               10
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1030,
                               30,
                               30,
                               10
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1031,
                               31,
                               31,
                               11
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1032,
                               32,
                               32,
                               11
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1033,
                               33,
                               33,
                               11
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1034,
                               34,
                               34,
                               12
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1035,
                               35,
                               35,
                               12
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1036,
                               36,
                               36,
                               12
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1037,
                               37,
                               37,
                               13
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1038,
                               38,
                               38,
                               13
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1039,
                               39,
                               39,
                               13
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1040,
                               40,
                               40,
                               14
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1041,
                               41,
                               41,
                               14
                           );

INSERT INTO link_cal_class (
                               cal_id,
                               class_id,
                               class_num,
                               week_num
                           )
                           VALUES (
                               1042,
                               42,
                               42,
                               14
                           );


-- Table: link_cal_due
CREATE TABLE link_cal_due (
    cal_id INTEGER,
    due_id INTEGER
);

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4001,
                             1
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4003,
                             3
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4004,
                             4
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4005,
                             5
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4006,
                             6
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4007,
                             7
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4008,
                             8
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4002,
                             2
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4101,
                             101
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4102,
                             102
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4103,
                             103
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4104,
                             104
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             NULL,
                             51
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             NULL,
                             151
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4105,
                             105
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4011,
                             11
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4010,
                             10
                         );

INSERT INTO link_cal_due (
                             cal_id,
                             due_id
                         )
                         VALUES (
                             4106,
                             106
                         );


-- Table: link_cal_event
CREATE TABLE link_cal_event (
    cal_id   INTEGER,
    event_id INTEGER
);

INSERT INTO link_cal_event (
                               cal_id,
                               event_id
                           )
                           VALUES (
                               7001,
                               1
                           );

INSERT INTO link_cal_event (
                               cal_id,
                               event_id
                           )
                           VALUES (
                               7002,
                               3
                           );

INSERT INTO link_cal_event (
                               cal_id,
                               event_id
                           )
                           VALUES (
                               7003,
                               3
                           );

INSERT INTO link_cal_event (
                               cal_id,
                               event_id
                           )
                           VALUES (
                               7004,
                               2
                           );

INSERT INTO link_cal_event (
                               cal_id,
                               event_id
                           )
                           VALUES (
                               7008,
                               4
                           );


-- Table: link_cal_exam
CREATE TABLE link_cal_exam (
    cal_id  INTEGER,
    exam_id INTEGER
);

INSERT INTO link_cal_exam (
                              cal_id,
                              exam_id
                          )
                          VALUES (
                              5001,
                              1
                          );

INSERT INTO link_cal_exam (
                              cal_id,
                              exam_id
                          )
                          VALUES (
                              5002,
                              2
                          );

INSERT INTO link_cal_exam (
                              cal_id,
                              exam_id
                          )
                          VALUES (
                              5003,
                              3
                          );


-- Table: link_cal_holiday
CREATE TABLE link_cal_holiday (
    cal_id     INTEGER,
    holiday_id INTEGER
);

INSERT INTO link_cal_holiday (
                                 cal_id,
                                 holiday_id
                             )
                             VALUES (
                                 6001,
                                 1
                             );

INSERT INTO link_cal_holiday (
                                 cal_id,
                                 holiday_id
                             )
                             VALUES (
                                 6002,
                                 2
                             );

INSERT INTO link_cal_holiday (
                                 cal_id,
                                 holiday_id
                             )
                             VALUES (
                                 6003,
                                 2
                             );

INSERT INTO link_cal_holiday (
                                 cal_id,
                                 holiday_id
                             )
                             VALUES (
                                 6004,
                                 2
                             );


-- Table: link_cal_hw
CREATE TABLE link_cal_hw (
    cal_id    INTEGER,
    hw_grp_id INTEGER
);

INSERT INTO link_cal_hw (
                            cal_id,
                            hw_grp_id
                        )
                        VALUES (
                            NULL,
                            1
                        );


-- Table: link_cal_lab
CREATE TABLE link_cal_lab (
    cal_id     INTEGER,
    lab_grp_id INTEGER
);

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3001,
                             1
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3002,
                             2
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3003,
                             3
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3004,
                             4
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3005,
                             5
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3006,
                             6
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3007,
                             7
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3008,
                             8
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3009,
                             9
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3010,
                             10
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3011,
                             11
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3012,
                             12
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3013,
                             13
                         );

INSERT INTO link_cal_lab (
                             cal_id,
                             lab_grp_id
                         )
                         VALUES (
                             3014,
                             14
                         );


-- Table: link_cal_notice
CREATE TABLE link_cal_notice (
    cal_id    INTEGER,
    notice_id INTEGER
);


-- Table: link_cls_rd
CREATE TABLE link_cls_rd (
    class_key  TEXT,
    rd_grp_key TEXT
);

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'INTRO',
                            'INTRO'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'INTRO_CLIMATE_CHANGE',
                            'INTRO_CLIMATE_CHANGE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'ENERGY_BALANCE',
                            'ENERGY_BALANCE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'LAYER_GREENHOUSE',
                            'LAYER_GREENHOUSE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'SPECTRAL_GREENHOUSE',
                            'SPECTRAL_GREENHOUSE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'VERTICAL_STRUCTURE',
                            'VERTICAL_STRUCTURE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'GREENHOUSE_REVIEW',
                            'GREENHOUSE_REVIEW'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'FEEDBACKS',
                            'FEEDBACKS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'OCEAN_BIOSPHERE_FEEDBACKS',
                            'OCEAN_BIOSPHERE_FEEDBACKS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'OCEAN_BREATHES',
                            'OCEAN_BREATHES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'ROCKS_BREATHE',
                            'ROCKS_BREATHE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'PERTURBED_CARBON',
                            'PERTURBED_CARBON'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'PALEO_PROXIES',
                            'PALEO_PROXIES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'PLEISTOCENE',
                            'PLEISTOCENE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CLIMATE_REVIEW',
                            'CLIMATE_REVIEW'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CLIMATE_MODELS',
                            'CLIMATE_MODELS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'FUTURE_CLIMATES',
                            'FUTURE_CLIMATES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'REVIEW_FOR_MIDTERM',
                            'REVIEW_FOR_MIDTERM'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'MIDTERM_EXAM',
                            'MIDTERM_EXAM'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'UNCERTAINTY',
                            'UNCERTAINTY'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CLIMATE_IMPACTS_1',
                            'CLIMATE_IMPACTS_1'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CLIMATE_IMPACTS_2',
                            'CLIMATE_IMPACTS_2'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'POLICY_MYTHS',
                            'POLICY_MYTHS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'KAYA_IDENTITY',
                            'KAYA_IDENTITY'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'BOTTOM_UP_DECARBONIZATION',
                            'BOTTOM_UP_DECARBONIZATION'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'TOP_DOWN_DECARBONIZATION',
                            'TOP_DOWN_DECARBONIZATION'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'COST_OF_MITIGATION',
                            'COST_OF_MITIGATION'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'POLICY_GOALS',
                            'POLICY_GOALS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'COSTS_AND_BENEFITS',
                            'COSTS_AND_BENEFITS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'SOCIAL_COST_OF_CARBON',
                            'SOCIAL_COST_OF_CARBON'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CARBON_PRICING_INSTRUMENTS',
                            'CARBON_PRICING_INSTRUMENTS'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'DISCOUNTING',
                            'DISCOUNTING'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'LIMITS_OF_ECON',
                            'LIMITS_OF_ECON'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'RENEWABLE_ENERGY',
                            'RENEWABLE_ENERGY'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'NUCLEAR_ENERGY',
                            'NUCLEAR_ENERGY'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'GEOENGINEERING_SOLAR_RADIATION',
                            'GEOENGINEERING_SOLAR_RADIATION'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'GEOENGINEERING_CARBON_CAPTURE',
                            'GEOENGINEERING_CARBON_CAPTURE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'PRAGMATIC_POLICIES',
                            'PRAGMATIC_POLICIES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'GLOBAL_WARMING_GRIDLOCK',
                            'GLOBAL_WARMING_GRIDLOCK'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'BEYOND_GRIDLOCK',
                            'ALT_PRIVATE_GOVERNANCE'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'OBSTACLES_PERSPECTIVES',
                            'OBSTACLES_PERSPECTIVES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'SEMESTER_REVIEW',
                            'SEMESTER_REVIEW'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CLIMATE_FALLACIES',
                            'CLIMATE_FALLACIES'
                        );

INSERT INTO link_cls_rd (
                            class_key,
                            rd_grp_key
                        )
                        VALUES (
                            'CRANKY_UNCLE_GAME',
                            'CRANKY_UNCLE'
                        );


-- Table: master_cal
CREATE TABLE master_cal (
    cal_id      INTEGER,
    class       INTEGER,
    week        INTEGER,
    date        TEXT,
    cal_type    TEXT,
    cancelled   INTEGER,
    make_up     INTEGER,
    class_key   TEXT,
    lab_key     TEXT,
    event_key   TEXT,
    holiday_key TEXT,
    exam_key    TEXT
);

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1001,
                           1,
                           1,
                           '2020-01-06',
                           'class',
                           0,
                           0,
                           'INTRO',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2001,
                           NULL,
                           NULL,
                           '2020-01-06',
                           'lab',
                           0,
                           0,
                           NULL,
                           'INTRO',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1002,
                           2,
                           1,
                           '2020-01-08',
                           'class',
                           0,
                           0,
                           'INTRO_CLIMATE_CHANGE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1003,
                           3,
                           1,
                           '2020-01-10',
                           'class',
                           0,
                           0,
                           'ENERGY_BALANCE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1004,
                           4,
                           2,
                           '2020-01-13',
                           'class',
                           0,
                           0,
                           'LAYER_GREENHOUSE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2002,
                           NULL,
                           NULL,
                           '2020-01-13',
                           'lab',
                           0,
                           0,
                           NULL,
                           'DATA',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1005,
                           5,
                           2,
                           '2020-01-15',
                           'class',
                           0,
                           0,
                           'SPECTRAL_GREENHOUSE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1006,
                           6,
                           2,
                           '2020-01-17',
                           'class',
                           0,
                           0,
                           'VERTICAL_STRUCTURE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           4001,
                           NULL,
                           NULL,
                           '2020-01-20',
                           'holiday',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           'MLK_DAY',
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1007,
                           7,
                           3,
                           '2020-01-22',
                           'class',
                           0,
                           0,
                           'GREENHOUSE_REVIEW',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1008,
                           8,
                           3,
                           '2020-01-24',
                           'class',
                           0,
                           0,
                           'FEEDBACKS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1009,
                           9,
                           3,
                           '2020-01-27',
                           'class',
                           0,
                           0,
                           'OCEAN_BIOSPHERE_FEEDBACKS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2003,
                           NULL,
                           NULL,
                           '2020-01-27',
                           'lab',
                           0,
                           0,
                           NULL,
                           'MODTRAN',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1010,
                           10,
                           4,
                           '2020-01-29',
                           'class',
                           0,
                           0,
                           'OCEAN_BREATHES',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1011,
                           11,
                           4,
                           '2020-01-31',
                           'class',
                           0,
                           0,
                           'ROCKS_BREATHE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1012,
                           12,
                           4,
                           '2020-02-03',
                           'class',
                           0,
                           0,
                           'PERTURBED_CARBON',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2004,
                           NULL,
                           NULL,
                           '2020-02-03',
                           'lab',
                           0,
                           0,
                           NULL,
                           'CLOUD_LAPSE',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1013,
                           13,
                           5,
                           '2020-02-05',
                           'class',
                           0,
                           0,
                           'PALEO_PROXIES',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1014,
                           14,
                           5,
                           '2020-02-07',
                           'class',
                           0,
                           0,
                           'PLEISTOCENE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1015,
                           15,
                           5,
                           '2020-02-10',
                           'class',
                           0,
                           0,
                           'CLIMATE_REVIEW',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2005,
                           NULL,
                           NULL,
                           '2020-02-10',
                           'lab',
                           0,
                           0,
                           NULL,
                           'GEOCARB',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1016,
                           16,
                           6,
                           '2020-02-12',
                           'class',
                           0,
                           0,
                           'CLIMATE_MODELS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1017,
                           17,
                           6,
                           '2020-02-14',
                           'class',
                           0,
                           0,
                           'FUTURE_CLIMATES',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1018,
                           18,
                           6,
                           '2020-02-17',
                           'class',
                           0,
                           0,
                           'REVIEW_FOR_MIDTERM',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2006,
                           NULL,
                           NULL,
                           '2020-02-17',
                           'lab',
                           0,
                           0,
                           NULL,
                           'START_PROJECT',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1019,
                           19,
                           7,
                           '2020-02-19',
                           'class',
                           0,
                           0,
                           'MIDTERM_EXAM',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           3001,
                           NULL,
                           NULL,
                           '2020-02-19',
                           'exam',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           NULL,
                           'MIDTERM_EXAM'
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1020,
                           20,
                           7,
                           '2020-02-21',
                           'class',
                           0,
                           0,
                           'UNCERTAINTY',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1021,
                           21,
                           7,
                           '2020-02-24',
                           'class',
                           0,
                           0,
                           'CLIMATE_IMAPACTS_1',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2007,
                           NULL,
                           NULL,
                           '2020-02-24',
                           'lab',
                           0,
                           0,
                           NULL,
                           'RMARKDOWN_FOR_REPORTS',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1022,
                           22,
                           8,
                           '2020-02-26',
                           'class',
                           0,
                           0,
                           'CLIMATE_IMAPACTS_2',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1023,
                           23,
                           8,
                           '2020-02-28',
                           'class',
                           0,
                           0,
                           'POLICY_MYTHS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           4002,
                           NULL,
                           NULL,
                           '2020-03-02',
                           'holiday',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           'SPRING_BREAK',
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           4003,
                           NULL,
                           NULL,
                           '2020-03-04',
                           'holiday',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           'SPRING_BREAK',
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           7001,
                           NULL,
                           NULL,
                           '2020-03-04',
                           'event',
                           0,
                           0,
                           NULL,
                           NULL,
                           'MIDTERM_DEFICIENCIES',
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           4004,
                           NULL,
                           NULL,
                           '2020-03-06',
                           'holiday',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           'SPRING_BREAK',
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1024,
                           24,
                           8,
                           '2020-03-09',
                           'class',
                           0,
                           0,
                           'KAYA_IDENTITY',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2008,
                           NULL,
                           NULL,
                           '2020-03-09',
                           'lab',
                           0,
                           0,
                           NULL,
                           'ENERGY_GAME',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1025,
                           25,
                           9,
                           '2020-03-11',
                           'class',
                           0,
                           0,
                           'BOTTOM_UP_DECARBONIZATION',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1026,
                           26,
                           9,
                           '2020-03-13',
                           'class',
                           0,
                           0,
                           'TOP_DOWN_DECARBONIZATION',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1027,
                           27,
                           9,
                           '2020-03-16',
                           'class',
                           0,
                           0,
                           'COST_OF_MITIGATION',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2009,
                           NULL,
                           NULL,
                           '2020-03-16',
                           'lab',
                           0,
                           0,
                           NULL,
                           'PROJECT_PRESENTATIONS',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1028,
                           28,
                           10,
                           '2020-03-18',
                           'class',
                           0,
                           0,
                           'POLICY_GOALS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1029,
                           29,
                           10,
                           '2020-03-20',
                           'class',
                           0,
                           0,
                           'COSTS_AND_BENEFITS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1030,
                           30,
                           10,
                           '2020-03-23',
                           'class',
                           0,
                           0,
                           'SOCIAL_COST_OF_CARBON',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2010,
                           NULL,
                           NULL,
                           '2020-03-23',
                           'lab',
                           0,
                           0,
                           NULL,
                           'DECARB_BOTTOM_UP',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1031,
                           31,
                           11,
                           '2020-03-25',
                           'class',
                           0,
                           0,
                           'CARBON_PRICING_INSTRUMENTS',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1032,
                           32,
                           11,
                           '2020-03-27',
                           'class',
                           0,
                           0,
                           'DISCOUNTING',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1033,
                           33,
                           11,
                           '2020-03-30',
                           'class',
                           0,
                           0,
                           'LIMITS_OF_ECON',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2011,
                           NULL,
                           NULL,
                           '2020-03-30',
                           'lab',
                           0,
                           0,
                           NULL,
                           'ROLE_PLAY',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1034,
                           34,
                           12,
                           '2020-04-01',
                           'class',
                           0,
                           0,
                           'RENEWABLE_ENERGY',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1035,
                           35,
                           12,
                           '2020-04-03',
                           'class',
                           0,
                           0,
                           'NUCLEAR_ENERGY',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1036,
                           36,
                           12,
                           '2020-04-06',
                           'class',
                           0,
                           0,
                           'GEOENGINEERING_SOLAR_RADIATION',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2012,
                           NULL,
                           NULL,
                           '2020-04-06',
                           'lab',
                           0,
                           0,
                           NULL,
                           'DECARB_PROJECT',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1037,
                           37,
                           13,
                           '2020-04-08',
                           'class',
                           0,
                           0,
                           'GEOENGINEERING_CARBON_CAPTURE',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1038,
                           38,
                           13,
                           '2020-04-10',
                           'class',
                           0,
                           0,
                           'PRAGMATIC_POLICIES',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1039,
                           39,
                           13,
                           '2020-04-13',
                           'class',
                           0,
                           0,
                           'GLOBAL_WARMING_GRIDLOCK',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2013,
                           NULL,
                           NULL,
                           '2020-04-13',
                           'lab',
                           0,
                           0,
                           NULL,
                           'DECARB_PROJECT_CONT',
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1040,
                           40,
                           14,
                           '2020-04-15',
                           'class',
                           0,
                           0,
                           'BEYOND_GRIDLOCK',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1041,
                           41,
                           14,
                           '2020-04-17',
                           'class',
                           0,
                           0,
                           'OBSTACLES_PERSPECTIVES',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           1042,
                           42,
                           14,
                           '2020-04-20',
                           'class',
                           0,
                           0,
                           'SEMESTER_REVIEW',
                           NULL,
                           NULL,
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           7002,
                           NULL,
                           NULL,
                           '2020-04-20',
                           'event',
                           0,
                           0,
                           NULL,
                           NULL,
                           'LAST_DAY_OF_CLASS',
                           NULL,
                           NULL
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           3002,
                           NULL,
                           NULL,
                           '2020-04-24',
                           'exam',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           NULL,
                           'FINAL_EXAM'
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           3003,
                           NULL,
                           NULL,
                           '2020-04-29',
                           'exam',
                           0,
                           0,
                           NULL,
                           NULL,
                           NULL,
                           NULL,
                           'ALT_FINAL_EXAM'
                       );

INSERT INTO master_cal (
                           cal_id,
                           class,
                           week,
                           date,
                           cal_type,
                           cancelled,
                           make_up,
                           class_key,
                           lab_key,
                           event_key,
                           holiday_key,
                           exam_key
                       )
                       VALUES (
                           2014,
                           NULL,
                           NULL,
                           '2020-04-20',
                           'lab',
                           0,
                           0,
                           NULL,
                           'DECARB_PRESENTATION',
                           NULL,
                           NULL,
                           NULL
                       );


-- Table: metadata
CREATE TABLE metadata (
    type   TEXT    PRIMARY KEY,
    idx    TEXT,
    col    TEXT,
    prefix TEXT,
    base   INTEGER
);

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'class',
                         'class',
                         'class',
                         'CLS',
                         1000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'homework',
                         'homework',
                         'hw',
                         'HW',
                         2000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'lab',
                         'lab',
                         'lab',
                         'LAB',
                         3000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'due date',
                         'due_date',
                         'due',
                         'DUE',
                         4000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'exam',
                         'exam',
                         'exam',
                         'EXAM',
                         5000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'holiday',
                         'holiday',
                         'holiday',
                         'VAC',
                         6000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'event',
                         'event',
                         'event',
                         'EVT',
                         7000
                     );

INSERT INTO metadata (
                         type,
                         idx,
                         col,
                         prefix,
                         base
                     )
                     VALUES (
                         'notice',
                         'notice',
                         'notice',
                         'NOT',
                         8000
                     );


-- Table: notices
CREATE TABLE notices (
    notice_id INTEGER PRIMARY KEY,
    topic_id  TEXT,
    topic     TEXT,
    notice    TEXT
);

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        1,
                        'INTRO',
                        'Introduction',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        2,
                        'INTRO_CLIMATE_CHANGE',
                        'What is Climate Change?',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        3,
                        'ENERGY_BALANCE',
                        'Energy Balance and Climate',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        4,
                        'LAYER_GREENHOUSE',
                        'Greenhouse Effect',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        5,
                        'SPECTRAL_GREENHOUSE',
                        'Greenhouse Gases',
                        'If you have a laptop or tablet that you can bring to class and connect to the internet, I recommend you do so today so you can work along with me in using the \MODTRAN\ model.
'
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        6,
                        'VERTICAL_STRUCTURE',
                        'Vertical Structure of the Atmosphere',
                        'If you have a laptop or tablet that you can bring to class and connect to the internet, I recommend you do so today so you can work along with me in using the online  models.
'
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        7,
                        'GREENHOUSE_REVIEW',
                        'Review of Greenhouse Effect',
                        'If you have a laptop or tablet that you can bring to class and connect to the internet, I recommend you do so today so you can work along with me in using the online models.'
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        8,
                        'FEEDBACKS',
                        'Feedbacks',
                        'If you have a laptop or tablet that you can bring to class and connect to the internet, I recommend you do so today so you can work along with me in using the online models to examine climate feedbacks.'
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        9,
                        'OCEAN_BIOSPHERE_FEEDBACKS',
                        'Feedbacks (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        10,
                        'OCEAN_BREATHES',
                        'The Carbon Cycle',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        11,
                        'ROCKS_BREATHE',
                        'The Carbon Cycle (part 2)',
                        'If you have a laptop or tablet that you can bring to class and connect to the internet, I recommend you do so today so you can work along with me in using the \GEOCARB\ model.'
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        12,
                        'PERTURBED_CARBON',
                        'The Perturbed Carbon Cycle',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        13,
                        'PALEO_PROXIES',
                        'Climates of the Past',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        14,
                        'PLEISTOCENE',
                        'Climates of the Past (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        15,
                        'CLIMATE_REVIEW',
                        'Review',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        16,
                        'CLIMATE_MODELS',
                        'Climate Models',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        17,
                        'FUTURE_CLIMATES',
                        'Future Climate Change',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        18,
                        'REVIEW_FOR_MIDTERM',
                        'Catching up and Review',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        19,
                        'MIDTERM_TEST',
                        'TEST #1',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        20,
                        'ABRUPT_CLIMATE_CHANGE',
                        'Future Climate Change (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        21,
                        'CLIMATE_IMAPACTS_1',
                        'Impacts of Climate Change',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        22,
                        'CLIMATE_IMAPACTS_2',
                        'Impacts of Climate Change (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        24,
                        'POLICY_MYTHS',
                        'Policy Myths',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        25,
                        'KAYA_IDENTITY',
                        'Energy Use and Conservation',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        26,
                        'TOP_DOWN_DECARBONIZATION',
                        'Global Decarbonization Policies',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        27,
                        'BOTTOM_UP_DECARBONIZATION',
                        'Global Decarbonization Policies (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        28,
                        'RENEWABLE_ENERGY',
                        'The Case for Renewables',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        29,
                        'GEOENGINEERING_SOLAR_RADIATION',
                        'Geoengineering',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        30,
                        'GEOENGINEERING_CARBON_CAPTURE',
                        'Geoengineering (part 2)',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        31,
                        'COST_OF_MITIGATION',
                        'The cost of slowing Climate Change',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        32,
                        'DISCOUNTING',
                        'Discounting and the Value of Time',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        33,
                        'POLICY_GOALS',
                        'Goals of Climate Policy',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        34,
                        'COSTS_AND_BENEFITS',
                        'Costs and Benefits',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        35,
                        'SOCIAL_COST_OF_CARBON',
                        'Pricing Carbon',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        36,
                        'CARBON_PRICING_INSTRUMENTS',
                        'Carbon Pricing Instruments',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        37,
                        'CARBON_TRADING_GAME',
                        'Class Exercise',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        38,
                        'CARBON_TRADING_REVIEW',
                        'Reprise of economics and carbon trading',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        42,
                        'POLICY_DIRECTIONS',
                        'Another direction for climate policy',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        43,
                        'GLOBAL_WARMING_GRIDLOCK',
                        'A global viewpoint',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        44,
                        'BEYOND_GRIDLOCK',
                        'Second-Best policies',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        45,
                        'PRAGMATIC_POLICIES',
                        'A pragmatic future for climate policy',
                        NULL
                    );

INSERT INTO notices (
                        notice_id,
                        topic_id,
                        topic,
                        notice
                    )
                    VALUES (
                        46,
                        'SEMESTER_REVIEW',
                        'Review',
                        NULL
                    );


-- Table: reading_groups
CREATE TABLE reading_groups (
    rd_grp_id    INTEGER,
    rd_grp_key   TEXT    PRIMARY KEY,
    rd_grp_order INTEGER
);

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               1,
                               'INTRO',
                               1
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               2,
                               'INTRO_CLIMATE_CHANGE',
                               2
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               3,
                               'ENERGY_BALANCE',
                               3
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               4,
                               'LAYER_GREENHOUSE',
                               4
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               5,
                               'SPECTRAL_GREENHOUSE',
                               5
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               6,
                               'VERTICAL_STRUCTURE',
                               6
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               7,
                               'GREENHOUSE_REVIEW',
                               7
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               8,
                               'FEEDBACKS',
                               8
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               9,
                               'OCEAN_BIOSPHERE_FEEDBACKS',
                               9
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               10,
                               'OCEAN_BREATHES',
                               10
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               11,
                               'ROCKS_BREATHE',
                               11
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               12,
                               'PERTURBED_CARBON',
                               12
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               13,
                               'PALEO_PROXIES',
                               13
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               14,
                               'PLEISTOCENE',
                               14
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               15,
                               'CLIMATE_REVIEW',
                               15
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               16,
                               'CLIMATE_MODELS',
                               16
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               17,
                               'FUTURE_CLIMATES',
                               17
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               50,
                               'REVIEW_FOR_MIDTERM',
                               NULL
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               51,
                               'MIDTERM_EXAM',
                               NULL
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               20,
                               'UNCERTAINTY',
                               20
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               21,
                               'CLIMATE_IMPACTS_1',
                               21
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               22,
                               'CLIMATE_IMPACTS_2',
                               22
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               23,
                               'POLICY_MYTHS',
                               23
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               24,
                               'KAYA_IDENTITY',
                               24
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               25,
                               'BOTTOM_UP_DECARBONIZATION',
                               25
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               26,
                               'TOP_DOWN_DECARBONIZATION',
                               26
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               27,
                               'COST_OF_MITIGATION',
                               27
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               28,
                               'POLICY_GOALS',
                               28
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               29,
                               'COSTS_AND_BENEFITS',
                               29
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               30,
                               'SOCIAL_COST_OF_CARBON',
                               30
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               31,
                               'CARBON_PRICING_INSTRUMENTS',
                               31
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               32,
                               'DISCOUNTING',
                               32
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               33,
                               'LIMITS_OF_ECON',
                               33
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               34,
                               'RENEWABLE_ENERGY',
                               34
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               35,
                               'NUCLEAR_ENERGY',
                               35
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               36,
                               'GEOENGINEERING_SOLAR_RADIATION',
                               36
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               37,
                               'GEOENGINEERING_CARBON_CAPTURE',
                               37
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               38,
                               'PRAGMATIC_POLICIES',
                               38
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               39,
                               'GLOBAL_WARMING_GRIDLOCK',
                               39
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               40,
                               'ALT_PRIVATE_GOVERNANCE',
                               40
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               41,
                               'OBSTACLES_PERSPECTIVES',
                               41
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               42,
                               'SEMESTER_REVIEW',
                               42
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               18,
                               'CLIMATE_FALLACIES',
                               18
                           );

INSERT INTO reading_groups (
                               rd_grp_id,
                               rd_grp_key,
                               rd_grp_order
                           )
                           VALUES (
                               19,
                               'CRANKY_UNCLE',
                               19
                           );


-- Table: reading_items
CREATE TABLE reading_items (
    rd_item_id         INTEGER PRIMARY KEY,
    rd_grp_key         TEXT,
    src_key            TEXT,
    chapter            TEXT,
    pages              TEXT,
    item_extra         TEXT,
    reading_notes      TEXT,
    undergraduate_only INTEGER,
    graduate_only      INTEGER,
    optional           INTEGER,
    rd_prologue        INTEGER,
    rd_epilogue        INTEGER,
    rd_break_before    INTEGER
);

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              200,
                              'INTRO_CLIMATE_CHANGE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Read these chapters lightly. Do not try to memorize all the facts or numbers, but try to get a feel for the way the authors write about climate and what they think is important.

For <%wday(this_class_date, label=T, abbr=F)%>, come to class prepared to discuss the questions I list for each book.
(you don''t need to write up answers to hand, but I want you to be ready to discuss them):
',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              201,
                              'INTRO_CLIMATE_CHANGE',
                              'ARCHER',
                              'Ch. 1',
                              NULL,
                              NULL,
                              '_<%MEDIUM_ARCHER%>_ is written by David Archer, a prominent climate scientist. As you read it, try to get a sense for four aspects in particular:

1. What kinds of things (both human and natural) cause the earth''s climate to change?
1. Why are carbon and energy so important?
1. Very roughly, how much has the earth''s temperature changed in the past and how much do we expect it to change in the next few centuries?
1. Should we worry about climate change and human activities that cause it?


### Questions to think about:

1. What is climate, and how is it different from weather?
1. What determines the temperature of the earth, and what are some things that can cause the temperature to change?
1. What is global warming? What kinds of risks do we worry about in connection with it?
1. What are several reasons why we emphasize carbon dioxide (<%COO%>) when we talk about global warming?
1. About how much has earth''s temperature varied in the past thousand years? In the last 25,000 years? How much do we expect it to change in the next hundred years?
1. What are some extreme climatic or weather events that we''ve seen recently around the world (think of things in the assigned readings, but also other things you''ve experienced or heard about in the news).
1. What kinds of trends do we see in natural disasters?
1. How would you know whether or not the kinds of events and trends in your answers
  to the two previous questions are caused by human interference with climate?
1. What possible responses can we (the population of the earth) take to respond to global warming?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              203,
                              'INTRO_CLIMATE_CHANGE',
                              'NORDHAUS',
                              'Ch. 1--2',
                              NULL,
                              NULL,
                              '_<%MEDIUM_NORDHAUS%>_ is written by William Nordhaus, a prominent economist. He has a different emphasis than Archer does. Read Chapter 1 more carefully, and mostly skim Chapter 2 lightly, but do pay attention to the section on p. 15 where he asks, "why read a book about climate change by an economist?"  Chapter 1 presents an outline of the book. As you read it, pay attention to the way Nordhaus connects the science and economics of climate change.  The figure on p. 10 illustrates these connections and it is important to understand what he is saying with it.

At the end of the chapter, Nordhaus presents three things he thinks people around the planet **must** do about climate change. Later in the semester we will read a book that disagrees vehemently with most of Nordhaus''s analysis and recommendations. For now, ask yourself whether you agree with Nordhaus''s three points, why you agree or disagree, and whether he has made a strong case for these points in this chapter.


### Questions to think about

1. Why does Nordhaus emphasize the difference between **managed**, **unmanaged**, and **unmanageable** human and natural systems?
1. What does Nordhaus mean by **tipping points** in the earth''s climate system? Why are they important?
1. What does Nordhaus mean by **mitigation** of climate change? (p. 6)
1. Why does Nordhaus think that "the economics of climate change is straightforward?" What policy does his "straightforward" analysis recommmend?
1. What does Nordhaus mean when he calls emission of <%COO%> into the atmosphere an **externality**? (p. 6) Why is this important for policymakers and for his own preferred policy?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              299,
                              'INTRO_CLIMATE_CHANGE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Also come to class ready to ask questions about parts of the chapter that you didn''t understand as well as you''d like or that you found unconvincing, or things you just want to know. If you email me questions by <%wday(date(this_class_date) - 1, label = T, abbr = F)%> evening, I will try to address them during class <%wday(this_class_date, label = T, abbr = F)%>.',
                              0,
                              0,
                              0,
                              0,
                              1,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              301,
                              'ENERGY_BALANCE',
                              'ARCHER',
                              'Ch. 2--3',
                              'pp. 9--23',
                              NULL,
                              'Focus on pp. 13--23 in _<%MEDIUM_ARCHER%>_. You need to understand the calculations of the "bare-rock" model on pp. 19--23. The intermediate steps are not as important as two equations:
\[
  F_{\text{out}} = F_{\text{in}}\quad\text{at equilibrium,}
\]
and equation (3.1), which describes the bare-rock model:
\[
  T_{\text{earth}} =
  \sqrt[4]{\frac{(1-\alpha)I_{\text{in}}}{4\epsilon\sigma}}
\]
(Helpful hint: to take a fourth root easily with your calculator, just press the square root key twice.)

Questions to think about (**not** to write up and turn in):

* What is blackbody radiation? What is a "blackbody" anyway?
* Why is it that the sun gives off visible light, but the earth does not?
* When the earth absorbs energy from sunlight, where does the energy go initially?
  Where is the final destination of that energy?
* What is the Stefan-Boltzmann equation, and why is it important?
* What does the Stefan-Boltzmann equation tell us would happen if the sun got hotter?
  What would happen if the Earth got hotter?
* Study table 3.1 on p. 23 of _<%MEDIUM_ARCHER%>_
  (ignore the column "$T_{\text{1 layer}}$" because we don''t get
  to that until later in the chapter.):

    * Why is the sunlight brighter on Venus than on Earth, and dimmer on Mars?
    * Why is the "bare-rock" temperature of Venus lower than Earth,
      even though it gets more sunlight?
    * Why do you suppose the actual observed temperature at the surface of Venus
      is so much hotter than the "bare rock" temperature?

* At the top of p. 20, why does Archer write,
  \(F_{\text{out}} = F_{\text{in}}\)?
  What would happen if
  \(F_{\text{out}} \ne F_{\text{in}}\)
* Without getting bogged down in the details of the numbers,
  why are the areas used to calculate the incoming and outgoing energy
  fluxes different? (Figures 3.1 and 3.2 explain this)
* If the sun got 5% brighter, approximately how many degrees warmer would
  the earth become?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              400,
                              'LAYER_GREENHOUSE',
                              'ARCHER',
                              'Ch. 3',
                              'pp. 23--26',
                              NULL,
                              'Study the one-layer model. We will work through it in detail during class.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              1
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              500,
                              'SPECTRAL_GREENHOUSE',
                              'ARCHER',
                              'Ch. 4',
                              NULL,
                              NULL,
                              'Undergraduates need only understand band saturation qualitatively
(i.e., you don''t need to worry about equations 4.1--4.3).
Graduate students do need to know and be able to apply these equations.

You should understand why molecules with many atoms are
more powerful greenhouse gases than molecules with fewer atoms. Can a single
atom (e.g., noble gases such as helium) act as greenhouse gases? What about
nitrogen (<%NTWO%>) and oxygen (<%OTWO%>) molecules, which make up almost 99% of
the atmosphere?

What is the "atmospheric window," that spans the range of about
800--1250 <%WAVENUMBER%> (wavelengths of 8--12 <%MICRON%>)?

### Understanding emissions spectra seen by satellites

**This is important:** The key to this section is understanding diagrams,
such as Fig. 4.3 and 4.5. These diagrams show the brightness of
infrared light emitted at different frequencies. The smooth lines correspond
to the radiation a perfect blackbody would give off at different temperatures.
Hotter bodies give off more energy and cooler bodies give off less.

The jagged line is the actual radiation given off by the atmosphere, as seen by
a satellite in space. Because the atmosphere is cooler higher up, emissions that follow a cooler
blackbody curve for some part of the spectrum mean the infrared at
those wavenumbers is emitted by greenhouse gases higher in the atmosphere.
Brighter emissions that follow a hotter blackbody curve for some part of
the spectrum means hotter temperatures, and hence emission at those wavenumbers
comes from gases closer to the ground.

As you add more of a gas, it absorbs more infrared light, so the emissions from
the ground or from lower in the atmosphere can''t get through---they''re absorbed
by higher layers of the atmosphere---and thus, the only emissions that get out to
space come from higher (and thus colder) layers. This is why you see lower
emissions (colder temperatures) for the wavenumbers at which powerful greenhouse
gases, such as <%COO%> and ozone, absorb.

Here are some review questions to check whether you understand this material
well:

* Water vapor is a powerful greenhouse gas. Why do you suppose we don''t
  see extremely cold temperatures for the part of the spectrum (100--600 <%WAVENUMBER%>)
  where _it_ absorbs?
* If greenhouse gases make earth warmer, why does adding <%COO%> in
  make the emissions temperatures become smaller in Fig. 4-5?


### Band saturation

**This is important for understanding why some greenhouse gases are more
powerful than others** What is band saturation? Why does increasing <%COO%>
from 10 to 100 parts per million or from 100 to 1000 parts per million have much
less effect than increasing it from 0 to 10 parts per million? Think by analogy.
Suppose you smear a tablespoon of black ink all over a white piece of
paper. How much will that affect its brightness? Now suppose you smear four
more tablespoons of ink on the stained paper. Which has the bigger effect on
the whiteness of the paper: the first spill of ink, or the second (much bigger)
one?

Now, looking at the atmosphere with the current amount of greenhouse gases,
can you speculate why adding a million molecules of methane to the atmosphere
will produce 20 times more warming than adding a million molecules of <%COO%>?',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              600,
                              'VERTICAL_STRUCTURE',
                              'ARCHER',
                              'Ch. 5',
                              NULL,
                              NULL,
                              'The key thing in this chapter is understanding why the troposphere gets colder as
  you go higher, and how this phenomenon (described by the term **lapse rate**),
  contributes to the greenhouse effect.

  First, the chapter starts by defining a **skin layer**, which is an
  important concept, and connects it to the greenhouse effect.

  Next, it moves on to describe how air pressure varies with altitude. I
  find the discussion on pp. 46--49 more confusing than it needs to be.
  Don''t get bogged down in the details of _why_ the equation at
  the bottom of p. 48 is true. Just understand _what_ that equation
  tells you:
\[
  P(z) = 1~\text{atm}\cdot e^{-z/8~\text{km}}
\]
You might find it easier and more intuitive to work with another way to write
the same equation:
\[
  P(z) = 1~\text{atm}\cdot 2^{-z/5.5~\text{km}}
\]
If we think of it this way, it''s intuitive that every 5.5 km you go up in the
atmosphere, the pressure drops by half: at 5.5 km, it''s 50% what it is at sea
level. At 11.0 km it''s 25%; at 16.5 km it''s 12.5%, and so on.

Third, we learn why air cools off as it rises through the atmosphere. It''s
because it expands as the pressure surrounding it drops. Similarly, as air descends to lower
altitudes, it compresses and gets hotter.

Fourth, we learn about latent heat from water evaporating and condensing. Latent
heat is responsible for a large fraction of the heat transport around the atmosphere. Latent heat
is also very important because it affects lapse rate. How does the lapse rate in
**saturated** air (i.e., air with 100% relative humidity) differ from the lapse rate
in **unsaturated** air (with relative humidity $<100%$)? Why? (Hint: the relavant
material appears in the section on **moist convection**, not the section on latent heat.)

Fifth, we learn about convection: as you heat air it tends to rise and this
moves heat around the atmosphere. The key concept regarding convection is **stability** vs.
**instability**. Unstable air undergoes convection (as the troposphere does), whereas
stable air does not, and instead remains **stratified**, as the stratosphere does.

Sixth (and finally), we put everything together to see the connection between
lapse rates and the greenhouse effect. The key result is that adding greenhouse gases raises the height
of the "skin" and this added height, together with the lapse rate, tells us how much the
surface temperature will warm up. The book summarizes these five points
concisely on p. 55.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              700,
                              'GREENHOUSE_REVIEW',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'As you prepare for class, think about:

* What makes some greenhouse gases more powerful than others?
* What are the important differences between the layer-model approach to calculating temperature and the skin-model on pp. 45--46?
* How does band saturation work? How can you recognize saturation in <%MODTRAN%>?
* How do you use <%MODTRAN%> to calculate the effect of doubling <%COO%>?
* How do you use the full-spectrum model to calculate the effect of doubling <%COO%>?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              800,
                              'FEEDBACKS',
                              'ARCHER',
                              'Ch. 7',
                              'pp. 73--81',
                              NULL,
                              '
* Understand the concept of positive and negative feedbacks.
* Understand how the following feedbacks work and whether each is positive or negative:

    * Stefan-Boltzmann feedback
    * Ice-albedo feedback
    * Water vapor feedback

* What is a **runaway greenhouse effect**? What prevents Earth from having a runaway greenhouse?
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              901,
                              'OCEAN_BIOSPHERE_FEEDBACKS',
                              'ARCHER',
                              'Ch. 7',
                              'pp. 81--84',
                              NULL,
                              '
* Why are cloud feedbacks more complicated and uncertain than other feedbacks?
* What is El Ni&ntilde;o and how do feedbacks in the ocean-atmosphere system create the El Ni&ntilde;o/La Ni&ntilde;a cycle? How does this cycle affect the global climate?
* How do feedbacks between climate and the biosphere work?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              902,
                              'OCEAN_BIOSPHERE_FEEDBACKS',
                              'FEEDBACK_HANDOUT',
                              NULL,
                              NULL,
                              NULL,
                              '
* In the handout, pay close attenton to two different ways of talking about feedbacks:
    If we **force** the climate by changing the brightness of the sun, the bare-rock temperature of the earth adjusts until the average flux of outgoing radiation equals the average flux of incoming radiation. Sometimes we count this adjustment as a negative feedback (called the **Stefan-Boltzmann feedback**) that maintains radiative balance. Other times we consider it to be a simple response to the changing amount of radiation.

    The handout calls this adjustment the Stefan-Boltzmann feedback ($f_0$) and calculates the other feedbacks (water-vapor, lapse-rate, ice-albedo, etc.) as additional feedbacks. This lets us write a straightforward equation for the effect of all the different feedbacks on the earth''s temperature, but it is important to be clear that when most people (including most scientists) talk about feedbacks in the climate system, they do not include the Stefan-Boltzmann feedback.

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1000,
                              'OCEAN_BREATHES',
                              'ARCHER',
                              'Ch. 8',
                              'pp. 89--97',
                              NULL,
                              '
* Know the different forms carbon takes in the earth system: <%COO%> and organic gases in the atmosphere; dissolved inorganic carbon in the hydrosphere (carbonic acid and related ions: <%CARBONIC_ACID%>, <%BICARBONATE%>, <%CARBONATE%>); solid organic and inorganic matter in the lithosphere (what''s the difference between organic and inorganic? What are dominant forms that each takes in the lithosphere?); and living organic carbon in the biosphere.
* What are **oxidation** and **reduction** and how do they affect organic and inorganic carbon?
* Focus intently on Fig. 8.1: get a feel for the size of each reservoir and the magnitude of flux between the different reservoirs. Don''t feel that you have to memorize the numbers, but you should have a good feel for which are larger, which are smaller, and a general sense of the range of sizes.
* What are the dominant mechanisms by which carbon moves from one reservoir to another? Which processes are fast and which are slow?
* In Fig. 8-2, why are the annual wiggles in the atmospheric carbon concentration so much bigger in Hawaii than in New Zealand?
* How might feedbacks in the carbon cycle destabilize the global climate?
* Try to get a rough feel for the orbital forcing of climate, but don''t stress about the details. We''ll dig into this in much more depth when we look at climates of the past, on <%format_date_range_by_key(calendar, c(''PALEO_PROXIES'',''PLEISTOCENE''), "class")%>. The key here is to understand that small variations in the earth''s orbit lead to small forcings on the climate, which are dramatically amplified by a positive feedback in the carbon cycle to produce the cycle of ice ages that the earth experienced over the past 2 million years or so.

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              1
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1100,
                              'ROCKS_BREATHE',
                              'ARCHER',
                              'Ch. 8',
                              'pp. 95--101',
                              NULL,
                              '* Try to get a rough feel for the orbital forcing of climate, but don''t stress about the details. We''ll dig into this in much more depth when we look at climates of the past, on <%format_date_range_by_key(calendar, c(''PALEO_PROXIES'',''PLEISTOCENE''), "class")%>. The key here is to understand that small variations in the earth''s orbit lead to small forcings on the climate, which are dramatically amplified by a positive feedback in the carbon cycle to produce the cycle of ice ages that the earth experienced over the past 2 million years or so.
* Understand the feedback in the sedimentary rock cycle. This is very important, but very slow. It acts as a thermostat for the earth, but takes millions of years to act, so although it will ultimately fix any global warming that people cause, it will do so much too slowly to protect our civilization from the effects of climate change.

  The key to the sedimentary rock part of the carbon cycle is the transformation of **silicate minerals** to **carbonate minerals** through weathering. You should understand how this cycle works, how it changes in response to changing climate in order to act as a thermostat (negative feedback), and why this cycle works well on Earth but not on Mars or Venus. One clue is the graph in Fig. 7.2 on p. 76.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1200,
                              'PERTURBED_CARBON',
                              'ARCHER',
                              'Ch. 10',
                              NULL,
                              NULL,
                              'Some key points to be sure you understand:

* How is the steady-state concentration of methane in the atmosphere related to the rate of methane emissions?
* What are the largest natural and anthropogenic sources of methane? How does anthropogenic methane emission compare to natural emission?
* What are the dominant anthropogenic sources of <%COO%> emissions?
* What do we know about the land as a sink for carbon?
* What is <%COO%> fertilization and how might it affect the role of the land as a carbon sink? What are the potential benefits to plants of higher <%COO%> concentrations and what constraints are there on the extent to which these benefits might be realized in practice?
* Understand the ocean carbon sink. Where, specifically, does the ocean work effectively to remove <%COO%> from the atmosphere and how might this sink be affected by rising <%COO%> levels?
* What is **ocean ventilation**? Why is it important and how fast does it work?
* What is the **thermocline** and why is it important to the ocean carbon sink?
* Why would increasing carbon dioxide in the atmosphere make the oceans become more acidic? How confident can we be of predictions about ocean acidification?
* What is **buffering** and how would it affect ocean acidification?
* What is the biological pump in the oceans? Are there things people might do to speed up the biological pump
* In the big picture, consider how these pieces fit together: how might rising temperatures and increasing drought around the world (two things scientists are very confident will happen as a result of rising greenhouse gas concentrations) affect the various carbon sources and sinks? How might ocean acidification affect the biological pump?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1300,
                              'PALEO_PROXIES',
                              'ARCHER',
                              'Ch. 11',
                              'pp. 135--145',
                              NULL,
                              '* The last hundred years: Focus on two things in particular:

    1. What is the evidence that the planet has warmed significantly in the last century?
    1. What is the evidence that human emissions of greenhouse gases are responsible?

* The last thousand years: This gets into some very tricky and controversial material that was central to the infamous "climategate" scandal in 2009. I will not spend a huge amount of time on this, but I will attempt to explain in class what the controversy was about and why it isn''t nearly as big a deal as the media have made it out to be.

    Some things to understand about the past millennium are:

    * What is a **proxy** for ancient temperatures? What are examples of commonly used proxies?
    * What problems do scientists face trying to get past temperatures from proxies?
    * What were the **Medieval Warm Period** and the **Little Ice Age**? Roughly when did they happen? What are the big questions scientists have about them?
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1400,
                              'PLEISTOCENE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Focus on the Pleistocene Ice Ages, which extended from roughly 2.75 million years ago (different scientists attribute different dates to the exact beginning of the Pleistocene) to about 10,000 years ago when our current warm period, the Holocene, began when the glaciers retreated for the last time.

We have two principal questions about the Pleistocene: How do we know what climate was like then? And how do we know what caused the cycle of ice ages?

* Pay particular attention to the way oxygen isotopes in samples of ice can be used to tell the temperature hundreds of thousands of years ago and the way oxygen isotopes in sediments at the bottom of the ocean can tell us about the amount of ice in the glaciers around the world, but both are useful.
* Recall the discussion of carbon dioxide feedbacks on p. 84. This is crucial.
* What kinds of instabilities did we see in the climates of the Pleistocene? Are those instabilities relevant to questions of how the climate will change as we increase the atmospheric greenhouse gas levels over the coming century?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1401,
                              'PLEISTOCENE',
                              'ARCHER',
                              'Ch. 7',
                              'p. 84',
                              '(You already read this, but please review it again)',
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1402,
                              'PLEISTOCENE',
                              'ARCHER',
                              'Ch. 8',
                              'pp. 93--97',
                              '(You already read this, but please review it again)',
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1403,
                              'PLEISTOCENE',
                              'ARCHER',
                              'Ch. 11',
                              'pp. 147--149',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1404,
                              'PALEO_PROXIES',
                              'ISOTOPE_HANDOUT',
                              NULL,
                              NULL,
                              '(concentrate on the sections about temperature and sea-level)',
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1500,
                              'CLIMATE_REVIEW',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Take time to review the reading from the last week (Chapters 10 and 11 and the handout on isotopes). Come to class with questions about the carbon cycle and past climates.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1600,
                              'CLIMATE_MODELS',
                              'NORDHAUS',
                              'Ch. 3--4',
                              NULL,
                              NULL,
                              'Chapter 3 treats global warming as a scientific consequence of an economic problem. As you read, consider the following questions. Some have clear answers
while others are beyond the knowledge of experts and I ask them to challenge you to think about hard problems.
On p. 30, Nordhaus describes three components that drive <%COO%> emissions: population, per-capita GDP, and the carbon intensity of the economy. A mathematical expression for this relationship is known as the **Kaya identity**, and we will study this in great depth on <%format_date_range_by_key(calendar, c("KAYA_IDENTITY",
"BOTTOM_UP_DECARBONIZATION", "TOP_DOWN_DECARBONIZATION"), "class", TRUE)%> and in the lab project on decarbonizing the energy supply.

* Why don''t free markets manage greenhouse gas emissions well?
* Are <%COO%> emissions going up or down? Why?
* What is carbon intensity? Is it going up or down in the US? Why?
* When Nordhaus writes about models for predicting future climate change, he distinguishes between **predictions** and
    **projections**. What is the difference and why is it important?
* Table 1 on p. 31 shows two projections of future <%COO%> emissions. Why are they different? How can we tell which is a better prediction?
* What is an **integrated assessment model** (**IAM**)?
* What are the biggest sources of uncertainty in predicting future <%COO%> emissions?
* How much can we trust models of future climate change? What should we consider when deciding how much to trust a model?


Chapter 4 looks at what we do and don''t know about future climate change.

* Pages 37--42 are largely a review of material we studied in much greater depth
in the first few weeks of the term. You can read through it quickly.
* What is the difference between **transient** and **equilibrium** response to <%COO%> emissions? What would we expect to happen
    to the global temperature if everyone around the world completely stopped burning fossil fuels this afternoon?
* Figure 9 shows several different projections for how temperature might change over the rest of this century. What is the biggest reason the
    projections don''t all agree with each other?
* Pay close attention to the bullet points on pp. 47--48.
* How does Nordhaus recommend that we think about the uncertainties in predictions about the climate?
* Given these uncertainties, can we trust climate models and can they be useful?

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1701,
                              'FUTURE_CLIMATES',
                              'NORDHAUS',
                              'Ch. 5',
                              NULL,
                              NULL,
                              'One of the big worries with future climate change has to do with tipping points. As you read Ch. 5 of _<%NORDHAUS%>_, you should focus on understanding what tipping points are and what some of the specific tipping points are worry climate experts. Fig. 12 and the accompanying discussion about melting ice sheets is a key example and you should understand it. If we raise the temperature and a large fraction of the Greenland ice sheet melts, will reducing the temperature cause it to eventually grow back to its original size? Why or why not?',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1702,
                              'FUTURE_CLIMATES',
                              'ARCHER',
                              'Ch. 12',
                              'pp. 153--164',
                              NULL,
                              'Chapter 12 of _<%MEDIUM_ARCHER%>_ presents a lot more detail about **abrupt climate change** (tipping points), melting ice sheets, and sea-level rise. The earlier part of the chapter also discusses the phenomenon of **global weirding**, in which the weather becomes less and less predictable as the global temperature rises. Indeed, recent scientific studies confirm predictions made years ago that global warming would lead to both increased drought and increased flooding. How is this possible?
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1800,
                              'CLIMATE_FALLACIES',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'We will learn about rhetorical tricks that are frequently exploited by people who want to cast doubt on climate science and how to tell the difference between legitimate questioning or debating the science and arguing in bad faith.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1801,
                              'CLIMATE_FALLACIES',
                              'COOK_WAYS_TO_MISLEAD',
                              NULL,
                              NULL,
                              NULL,
                              'Watch this video by John Cook, an expert on climate communication, about the rhetorical tricks employed to mislead people about climate change.',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1900,
                              'CRANKY_UNCLE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'We will play a game in class in which we try to spot the fallacies in common talking points by people who try to discredit climate science.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1901,
                              'CRANKY_UNCLE',
                              'COOK_FLICC',
                              NULL,
                              NULL,
                              NULL,
                              'Read this blog by John Cook about the FLICC framework for identifying types of misinformation.',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              1999,
                              'CRANKY_UNCLE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Before you come to class, either install the Cranky Uncle game on your phone or tablet, or connect to it on your browser when you come to class.

* iPhone: <https://sks.to/crankyiphone>
* Android: <https://sks.to/crankyandroid>
* Browser: <https://app.crankyuncle.info>

Sign in using the group code for our class, which I have posted on Brightspace.',
                              0,
                              0,
                              0,
                              0,
                              1,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2000,
                              'UNCERTAINTY',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'This is a good place for us to reflect on what we do and don''t know about the science of climate change. As we review the science we have studied so far, think about the contrasting views Nordhaus and Pielke present in _<%MEDIUM_NORDHAUS%>_ and _<%MEDIUM_PIELKE%>_ about what we do and don''t know and whether people should be skeptical of scientists about global warming. In particular, focus on:

* What is **scientific consensus**, is there consensus on global warming, and should we trust it? Where do Nordhaus and Pielke agree and where do they disagree about this?
* How should we think about contrarians or skeptics who disagree with the consensus?
* How should we think about scientific uncertainty? Where do Nordhaus and Pielke agree and where do they disagree about this?
* Can we make policy when there is still disagreement and uncertainty about climate science? How do Nordhaus and Pielke feel about this?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2001,
                              'UNCERTAINTY',
                              'ARCHER',
                              'Ch. 12',
                              'pp. 164--166',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2002,
                              'UNCERTAINTY',
                              'NORDHAUS',
                              'Ch. 24',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2003,
                              'UNCERTAINTY',
                              'PIELKE',
                              'Ch. 1',
                              'pp. 1--24',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2100,
                              'CLIMATE_IMPACTS_1',
                              'NORDHAUS',
                              '6--9',
                              NULL,
                              NULL,
                              'This reading assignment covers many pages, but the material is descriptive, not mathematical.
What I am looking for you to get out of this is a sense of the different kinds of impacts that climate change might have on our lives and the lives of people around the planet.

* Pay particular attention to the distinction Nordhaus draws between **managed**, **unmanaged**, and **unmanageable** systems.
* Also pay attention to the discussions of **adaptation** and **mitigation**.

    * **Mitigating factors** mean aspects of climate change that may be 
      beneficial and mitigate the damage caused by the harmful aspects. 
      This can be confusing because in the context of climate policy 
      **mitigation** usually means reducing the amount of climate change 
      (e.g., by reducing greenhouse gas emissions), whereas **mitigating factors** 
      are things that reduce the impact that a given amount of climate change 
      will have on people''s lives.
      
    * **Adaptation** means changes people make in the way they live and the 
      kinds of economic activities they pursue in order to adapt to living in a 
      different climate.

      Adaptation and mitigating factors are important because they show us that 
      there can be more to climate change policy than just reducing greenhouse 
      gas emissions.
      Again, to point out how confusing this terminology can be, 
      _mitigating factors_ (things that reduce the impact of climate change on 
      people''s lives) show that there is more to climate policy than 
      _mitigation_ (reducing greenhouse gas emissions).

* In the three chapters on details (7--9), try to get a feel for the following questions:

    1. How severe are the threats likely to be to human well-being?
    1. Are certain groups of people especially vulnerable?
    1. What kinds of mitigating factors might reduce the impact of climate change?
    1. What kinds of adaptations might make it easier to live with climate change?

* In the chapter on farming, pay attention to the discussion of productivity growth in the worlds'' economies (basically this is the growth of $g$, the per-capita GDP, in the Kaya identity, which we read about on p. 30 of Ch. 3, and which we''ll study in greater detail when we look at decarbonizing the world''s energy supply on Oct. 15--22.). How does growing productivity affect the way we look at climate change?
* In the chapter on farming, why is figure 15 important to the discussion of adaptation and mitigation?
* In the chapter on health impacts, don''t try to get every detail but do try to get a sense of what the biggest climate related threats to health are likely to be and what kinds of adaptive things people could do to fight them as temperatures rise.
* In the chapter on the oceans, there are two distinct threats: sea-level rise and ocean acidification. Get a feel for how each affects people''s lives and what adaptations might be possible.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              1
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2200,
                              'CLIMATE_IMPACTS_2',
                              'NORDHAUS',
                              '10--12',
                              NULL,
                              NULL,
                              'Mostly, skim chapters 10--11 and focus on reading chapter 12 carefully.

* What sectors of the economy are most vulnerable to climate change?
* What parts of the world are most vulnerable?
* Think about Nordhaus''s distinction between managed and unmanaged systems: Does management affect vulnerability to climate change?
* How has the world''s economy changed in the last 60 years or so? Which sectors have become more important and which have become less important? What does that imply as we look ahead to the impacts of climate change 100 years from now?
* How do economists estimate the damage climate change might cause to the world economy? How certain are they about these estimates? What are the biggest sources of uncertainty?
* The section on "A Risk Premium" is especialy important. Understand what a risk premium is and how this figures into Nordhaus''s thoughts about policy.

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2301,
                              'POLICY_MYTHS',
                              'PIELKE',
                              'Ch. 2',
                              NULL,
                              NULL,
                              'In _<%MEDIUM_PIELKE%>_, Pielke addresses three what he calls three myths of climate policy:

1. We lack political will to do anything about climate change
1. We must trade off the economy for the environment
1. We have all the technology we need to solve the problem

With respect to myth #2, consider this quotation, from a story on National Public Radio on October 2, 2010:

>  Republican pollster Frank Luntz says it''s clear why the politics of climate change are so different [in 2010] than they were in 2008. 
> "_What has changed is that the American economy went to hell. And when you ask voters are they more concerned about destroying 
> their environment over the next 100 years or rehabilitating their economy over the next 100 weeks, they''ll choose the economy over 
> the environment any day_," Luntz says.

As you read Chapter 2 of _<%MEDIUM_PIELKE%>_, critically assess Luntz''s arguments. Pay special attention to the "**Iron Law**," described on pp. 46--50. This will be a crucial piece of Pielke''s analysis throughout the book.

On pp. 51--58 of _<%MEDIUM_PIELKE%>_, Pielke writes about the idea of "**stabilization wedges**," introduced by Robert Socolow and Stephen Pacala, in the context of dismissing myth #3. The stabilization wedge concept is very important in climate policy and we will discuss them further later in the semester, so read these pages reasonably carefully and keep in mind that Pielke''s dismissal is just one opinion. A number of scholars and policy experts agree with Pielke, but many disagree as well. This is a topic on which it''s important to think for yourself.

After dismissing many myths, Pielke offers his own ideas for how to approach climate policy.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2302,
                              'POLICY_MYTHS',
                              'NORDHAUS',
                              'Ch. 25',
                              NULL,
                              NULL,
                              'In Chapter 25 of _<%MEDIUM_NORDHAUS%>_, Nordhaus discusses what we know about public opinion on climate change. Nordhaus shows that in the past decade, we have seen an increasing divide between what scientists think about the facts of climate change and what the public thinks, that this widening gap has proceeded together with a growing ideological divide between liberals and Democrats on one side and conservatives and Republicans on the other. He observes on p. 311 that "Climate change is an area where the political leaders have led public opinion."

Nordhaus then proposes a way for small-government political conservatives, such as himself, to close the divide between the parties and between scientists and the public.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2399,
                              'POLICY_MYTHS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'As you read both Nordhaus''s and Pielke''s analyses and recommendations, ask yourself what you find it persuasive, what you agree with, and what you disagree with. This is a time to start thinking both about what kinds of climate policies you would want to pursue and how you would critically analyze them for their strengths and weaknesses.
',
                              0,
                              0,
                              0,
                              0,
                              1,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2400,
                              'KAYA_IDENTITY',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'In both chapters, the focus is on what it would take to reduce <%COO%> emissions around the world.

Key concepts that you should understand are:

* We will be discussing national and global energy consumption in terms of **quads** (see p. 63 in Climate Fix). You should have a good feeling for how much a quad is and how many quads the US consumes.
* The **Kaya Identity** and the factors that go into it (p. 71 of _<%MEDIUM_PIELKE%>_; you might also go back and quickly review pp. 19--23 of _<%MEDIUM_NORDHAUS%>_, which we read for Aug. 28).:

    * Total <%COO%> emissions ($F$)
    * Population ($P$)
    * Per-capita GDP ($g$)
    * Energy intensity of the economy ($e$)
    * Carbon intensity of the energy supply ($f$)

* How would you make sense of the fact that the U.S. has a much greater $F$ than India and a slightly smaller $F$ than China, but a much smaller $e$ and $f$ than either India or China?
* What trends have we seen over the past several decades in the energy intensity of the economy and the carbon intensity of the energy supply? (pp. 74--79 of _<%MEDIUM_PIELKE%>_ and Fig. 3 on p. 22 of _<%MEDIUM_NORDHAUS%>_)
* What is **primary energy consumption** and how does it differ from other kinds of energy consumption?
* Why does Pielke argue that **energy dependence** leads to **energy insecurity**?
* In _<%MEDIUM_NORDHAUS%>_, look at Figure 23 and the table of carbon emissions on p. 159. How do different fuels compare in terms of carbon emissions?
* In _<%MEDIUM_NORDHAUS%>_, look at Table 6 and get a sense of what activities cause the most <%COO%> emissions.
* What does the Kaya Identity and the material from _<%MEDIUM_NORDHAUS%>_ suggest for where we should focus in our economy to reduce <%COO%> emissions?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2401,
                              'KAYA_IDENTITY',
                              'PIELKE',
                              'Ch. 3',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2402,
                              'KAYA_IDENTITY',
                              'NORDHAUS',
                              'Ch. 14',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2501,
                              'BOTTOM_UP_DECARBONIZATION',
                              'PIELKE',
                              'Ch. 4',
                              NULL,
                              NULL,
                              'We will spend two days on this chapter. It is very involved and the technical analysis both of this chapter and of Jacobson''s proposal for converting the US to 100% wind, water, and solar power will be the focus of a project in the lab. You will follow Pielke''s methods to analyze the prospects for the US, China, and a third country to convert a large part of their economies to clean energy by 2050.
',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2502,
                              'BOTTOM_UP_DECARBONIZATION',
                              'PIELKE_UK',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2503,
                              'BOTTOM_UP_DECARBONIZATION',
                              'PIELKE_JAPAN',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2504,
                              'BOTTOM_UP_DECARBONIZATION',
                              'PIELKE_AUSTRALIA',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2599,
                              'BOTTOM_UP_DECARBONIZATION',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'The optional extra reading comprises three articles by Roger Pielke, in which he applies the methods he describes in this chapter to analyze proposed decarbonization policies in the U.K., Japan, and Australia.',
                              0,
                              0,
                              0,
                              0,
                              1,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2601,
                              'TOP_DOWN_DECARBONIZATION',
                              'PIELKE',
                              'Ch. 4',
                              NULL,
                              NULL,
                              'We will continue discussing this chapter and work examples in class of Pielke''s calculations.',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2602,
                              'TOP_DOWN_DECARBONIZATION',
                              'PIELKE_UK',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2603,
                              'TOP_DOWN_DECARBONIZATION',
                              'PIELKE_JAPAN',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2604,
                              'TOP_DOWN_DECARBONIZATION',
                              'PIELKE_AUSTRALIA',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2699,
                              'TOP_DOWN_DECARBONIZATION',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'The optional extra reading comprises three articles by Roger Pielke, in which he applies the methods he describes in this chapter to analyze proposed decarbonization policies in the U.K., Japan, and Australia.',
                              0,
                              0,
                              0,
                              0,
                              1,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2700,
                              'RENEWABLE_ENERGY',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Pielke has argued that we don''t have the technology necessary to abandon fossil fuels. Jacobson and Delucchi disagree and present a proposal here.

* "A path to sustainable energy" presents Jacobson and Delucchi''s proposal to the general public. "Low-cost solution to the grid reliabilty problem" (optional for undergrads) provides up-to-date technical details for implementing this plan in the US.
* "Evaluation of a proposal" (optional for undergraduates) is a fierce critique by a group of scientists and engineers. Jacobson _et al._ reply to this critique in "The United States can keep the grid stable." This exchange spawned a huge fight in the clean energy research community with accusations of dishonesty on all sides. The news stories "Fisticuffs" and "A bitter scientific debate" describe this fight.
* As you read Jacobson and Delucchi''s proposal and its critics, think about both the technical and political aspects:

    * Are Jacobson and his co-authors persuasive when they argue that we have the technology that we need to quickly transition from fossil fuels to renewable energy?
    * If we do have the technology, what political obstacles would you see to implementing this proposal?


',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2701,
                              'RENEWABLE_ENERGY',
                              'JACOBSON_SCIAM',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2702,
                              'RENEWABLE_ENERGY',
                              'PORTER_FISTICUFFS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2703,
                              'RENEWABLE_ENERGY',
                              'MOONEY_JACOBSON',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2704,
                              'RENEWABLE_ENERGY',
                              'JACOBSON_PNAS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2705,
                              'RENEWABLE_ENERGY',
                              'CLACK_PNAS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2706,
                              'RENEWABLE_ENERGY',
                              'JACOBSON_RESPONSE_TO_CLACK',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2800,
                              'GEOENGINEERING_SOLAR_RADIATION',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'We will discuss geoengineering as an alternative to rapidly cutting greenhouse gas emissions. For today, we will focus on **solar radiation management**: Techniques for cancelling out the enhanced greenhouse effect by blocking sunlight from reaching the earth.

* As you read Pielke, pay attention to his discussion of the big picture. What does he mean by a **technological fix**, and what does he think about technological fixes for environmental problems?
* What are Daniel Sarewitz''s criteria for successful technological fixes?
* In the context of technological fixes, Pielke describes climate change as a "wicked problem." This is a phrase with a specific meaning in public policy analysis. It comes from a 1973 paper,^[H.W.J. Rittel and M.M. Weber, "[Dilemmas in a General Theory of Planning](https://doi.org/10.1007/BF01405730)," Policy Sciences **4**, 155 (1973).] which defines "wicked problems" as possessing ten different properties, all of which make it very difficult, even impossible, to find satisfactory solutions. A few of these properties include: Wicked problems have high stakes, so it is unacceptable to choose a solution that proves ineffective. They are plagued by uncertainty, so no one can tell in advance whether a solution will work well. They invoilve important tradeoffs, so anything that makes a solution attractive to one constituency will make it unattractive to another. They are irreversible, so trial and error is not an effective approach for finding good solutions.

    As you read this chapter, think about how the problem of geoengineering the climate fits the criteria of a wicked problem.
* What does Pielke think about solar radiation management in terms of Sarewitz''s criteria?
* Pielke begins this chapter by discussing geoengineering as a "**Plan B**" for climate policy. What does he mean by this?
* Where Pielke talks about "Plan B," Nordhaus describes geoengineering as "**salvage therapy**" for the planet. How does his account of solar radiation management compare to Pielke''s? Where do the two agree and where do they disagree?
* Nordhaus, as an economist, focuses a lot on costs, comparing the costs and the benefits of any policy. How does he asses the costs and benefits of geoengineering?
* The short paper by Hegerl and Solomon presents solar radiation management geoengineering from the perspective of two top climate scientists. As you read their thoughts, which focus almost entirely on the scientific aspects, how do you think of this in comparison to the policy focus in Nordhaus''s and Pielke''s discussions?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2801,
                              'GEOENGINEERING_SOLAR_RADIATION',
                              'PIELKE',
                              'Ch. 5',
                              'pp. 117--132',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2802,
                              'GEOENGINEERING_SOLAR_RADIATION',
                              'NORDHAUS',
                              'Ch. 13',
                              'Read the whole chapter, but focus especially on pp. 152--156',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2803,
                              'GEOENGINEERING_SOLAR_RADIATION',
                              'HEGERL_RISKS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2900,
                              'GEOENGINEERING_CARBON_CAPTURE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'For today we will focus on a second class of geoengineering, called "**air capture**," (Pielke calls this "**carbon remediation**") meaning reducing the atmospheric concentration of <%COO%> by filtering it out of the atmosphere and storing it permanently somewhere.

* How do Pielke and Dyson feel about the prospect of air-capture geoengineering? (You know about Pielke; Dyson is a very famous physicist who is often discussed as a top prospect for a future Nobel Prize).
* How does Pielke think air-capture fits Sarewitz''s criteria for a technological fix?
* At the end, when Pielke discusses the "**moral hazard**" argument against geoengineering, what does he mean by "moral hazard?" What do you think about the moral hazard argument?
* What are the implications of geoengineering technology for climate policy in general? How does the prospect of geoengineering shape Dyson''s, Nordhaus''s, and Pielke''s support or opposition to more conventional climate policy that focuses on cutting greenhouse gas emissions?
* What do _you_ think about geoengineering and how does the prospect of geoengineering shape your views of climate policy?

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2901,
                              'GEOENGINEERING_CARBON_CAPTURE',
                              'PIELKE',
                              'Ch. 5',
                              'pp. 132--142',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2902,
                              'GEOENGINEERING_CARBON_CAPTURE',
                              'NORDHAUS',
                              'Ch. 14',
                              'pp. 165--168',
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              2903,
                              'GEOENGINEERING_CARBON_CAPTURE',
                              'DYSON_QUESTION',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3001,
                              'COST_OF_MITIGATION',
                              'NORDHAUS',
                              'Ch. 14',
                              'pp. 157--165',
                              NULL,
                              'Here, we focus on the cost of reducing emissions. You should skim the material from Ch. 14 lightly and focus on reading Ch. 15 carefully.
Remember how, in the reading notes for <%format_date_by_key(calendar, ''CLIMATE_IMPACTS_1'', "class")%>, I warned you about the potential confusion between "mitigating factors," (the benefits of global warming, such as reduced heating costs for people who live in cold climates and longer growing seasons for farmers, which can offset some of the harms) and "mitigation," which means cutting greenhouse gas emissions. Here, we are talking about the latter.

* Nordhaus distinguishes two kinds of economic analysis of the cost of mitigation: Top-down and bottom-up (pp. 174--76 and Fig. 25). What is the difference? Do you think one is more reliable than the other? Why or why not?
* Nordhaus discusses two aspects of mitigating greenhouse gas emissions: the technical aspects that determine what a perfect policy that is efficiently implemented could do; and the human aspects, which cause policies to be imperfectly designed and inefficently implemented in the real world. Compare the two curves in Fig. 26.

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3002,
                              'COST_OF_MITIGATION',
                              'NORDHAUS',
                              'Ch. 15',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3100,
                              'DISCOUNTING',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Time-discounting is one of the most contentious and controversial aspects of the economics and ethics of climate change. Entire books have been written about this, and one class will not do justice to the topic.

* As you read this chapter in Nordhaus, try to follow the distinctions Nordhaus draws between several aspects of discounting:

    * **Pure time preference:** If I offer you a choice of getting a free dinner at a nice restaurant sometime this month or getting the same dinner five years from now, you would almost certainly prefer to get the nice dinner this month. Given the choice of getting something nice now, or in the near future, versus having to wait a long time, most people don''t want to wait.
    * **Opportunity cost:** If I offered you the choice of \$100 now versus in five years, as opposed to the fancy meal, something else comes into the picture: If you got the money now, but chose not to spend it right away, you could invest it so that in five years, you would have more than \$100. Spending money today rather than investing it for the future produces an opportunity cost (missing out on the compounding interest), which contributes another piece to the problem of discounting and the value of time.
    * **Fairness and economic growth:** Economic growth has dramatically reduced poverty around the world over the past centuries. The decline of poverty has been especially rapid in the past half-century. If this trend continues, people living a few centuries in the future will have average per-capita incomes much more than 10 times what the average person earns today. Thus, spending money today to reduce the costs of climate change for future generations might be like taking from the poor (today''s generation) to benefit the rich (future generations).

* Graduate students should read the two articles in Science (and undergrads are welcome to read them if you''re interested). Each is a bit less than two pages and they are very clear. These articles are a nice distillation of the kinds of economic/ethical arguments about what it means to be fair and just that are very common in environmental policy, and especially in climate policy.

    There are no easy answers, and the challenge has led philosopher Stephen Gardiner to call the problem of climate change "a perfect moral storm."
* The optional article by the economist, John Quiggin, is a much more technical discussion of the ethical and economic conundrums that arise from reducing the value of life and suffering to a mathematical equation about time. It''s very good, but it''s purely optional and you should not feel obliged to read it if you are not really excited to nerd out about these things.

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3101,
                              'DISCOUNTING',
                              'NORDHAUS',
                              'Ch. 16',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3102,
                              'DISCOUNTING',
                              'NORDHAUS_ON_STERN',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3103,
                              'DISCOUNTING',
                              'STERN_ETHICS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3104,
                              'DISCOUNTING',
                              'QUIGGIN_DISCOUNTING',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3200,
                              'POLICY_GOALS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              '
* In these chapters, Pielke and Nordhaus offer different accounts of the history of international treaties and policies to manage climate change.
* Much of the focus is on the United Nations Framework Convention on Climate Change (UNFCCC), signed in 1992 and ratified by all 193 member states of the United Nations.
* The UNFCCC is legally binding on its signatories, and requires them to " stabiliz[e] greenhouse gases concentrations in the atmosphere at a level that would avoid dangerous anthropogenic interference with the climate system." A problem is that the Framework did not define what constituted "dangerous anthropogenic interference," or spell out any specific actions that the signatories would have to take under the treaty.
* In subsequent years, much of the world''s scientific and climate policy elites arrived at a rough consensus that raising the average temperature of the earth by more than 2<%DEGREE_CELSIUS%> relative to preindustrial temperatures would constitute dangerous interference. Both Nordhaus and Pielke present critical examinations of this judgment.
* The details of implementing the pledge under UNFCCC (both defining ''dangerous interference" and deciding on specific actions) was left to subsequent negotiations, and the signatory nations have met every year at "conferences of parties" (COPs) to hammer out details. The most important implementation agreement was a treaty signed in Kyoto in 1998, but never ratified by the United States. Both Nordhaus and Pielke discuss the Kyoto treaty and its pros and cons.
* As you read this history and the discussion of the goal of limiting warming to no more than 2<%DEGREE_CELSIUS%> above pre-industrial temperatures, try to become familiar with the history and think critically about the kinds of policies that were pursued and those that were not given serious consideration.

',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3201,
                              'POLICY_GOALS',
                              'NORDHAUS',
                              'Ch. 17',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3202,
                              'POLICY_GOALS',
                              'PIELKE',
                              'Ch. 6',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3300,
                              'COSTS_AND_BENEFITS',
                              'NORDHAUS',
                              'Ch. 18',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3400,
                              'SOCIAL_COST_OF_CARBON',
                              'NORDHAUS',
                              'Ch. 19',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3500,
                              'CARBON_PRICING_INSTRUMENTS',
                              'ECONOMICS_OF_REGULATION',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3601,
                              'PRAGMATIC_POLICIES',
                              'NORDHAUS',
                              'Ch. 23',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3602,
                              'PRAGMATIC_POLICIES',
                              'PIELKE',
                              'Ch. 9',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3700,
                              'GLOBAL_WARMING_GRIDLOCK',
                              'VICTOR_GRIDLOCK',
                              'Ch. 1',
                              NULL,
                              NULL,
                              'I have posted Chapter 1 online. The entire book is [available as an e-book](https://catalog.library.vanderbilt.edu/discovery/fulldisplay?docid=cambookslvl10.1017/CBO9780511975714&context=PC&vid=01VAN_INST:vanui&search_scope=MyInst_and_CI&tab=Everything&lang=en) online through the Vanderbilt Library.',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3800,
                              'BEYOND_GRIDLOCK',
                              'BEYOND_POLITICS',
                              'Ch. 1',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3850,
                              'ALT_PRIVATE_GOVERNANCE',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'These readings address two important aspects that are neglected in most analyses of climate policy:

1. Gilligan & Vandenbergh write about the obstacles that partisan polarization and political gridlock pose for 
   effective action on climate change and offer ideas for how private-sector initiatives can contribute to making 
   progress even when government remains paralyzed by gridlock. They also introduce a framework for analyzing 
   the effectiveness of private-sector initiatives as well as government regulatory policy.
2. Nielsen _et al._ dig more deeply into the policy-analysis framework from Gilligan & Vandenbergh and suggest
   ways that integrated assessment models of climate, energy, and the economy could incorporate more realistic
   treatments of human behavior and of the political systems and how these more pragmatic approaches to policy
   analysis could improve reports on potential policy responses to climate change.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3851,
                              'ALT_PRIVATE_GOVERNANCE',
                              'GILLIGAN_ERSS',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3852,
                              'ALT_PRIVATE_GOVERNANCE',
                              'NIELSEN_ONE_EARTH',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3901,
                              'OBSTACLES_PERSPECTIVES',
                              'NORDHAUS',
                              'Ch. 26',
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              3902,
                              'OBSTACLES_PERSPECTIVES',
                              'KRUGMAN_GAMBLING',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4000,
                              'SEMESTER_REVIEW',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4100,
                              'NUCLEAR_ENERGY',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'Nuclear power has the potential to provide abundant clean energy with no greenhouse gas emissions. However, there are two separate problems that nuclear power must contend with: First, it is very expensive. Several years ago, the CEO of Excelon, the largest operator of nuclear power plants in the U.S., said that nuclear power was more expensive than any other source of energy except solar photovoltaic. Second, nuclear power is politically controversial because of public fears about safety, especially after the 2011 nuclear accident in Fukushima, Japan.

In these readings, "Nuclear power as we know it is finished" and "A roadmap for U.S. nuclear energy innovation" discuss the economics and the prospects for whether nuclear power can become economically competitive. "Clean energy mind games" is written by an expert on risk and discusses the safety issues and public fears.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4101,
                              'NUCLEAR_ENERGY',
                              'LESTER_ROADMAP',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4102,
                              'NUCLEAR_ENERGY',
                              'ROPEIK_MIND_GAMES',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4103,
                              'NUCLEAR_ENERGY',
                              'TOMLINSON_FINISHED',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4200,
                              'SEMESTER_REVIEW',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'No reading for today. We will review the semester and discuss climate change and climate policy in the big picture.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4201,
                              'LIMITS_OF_ECON',
                              'BARKER_ECON',
                              NULL,
                              NULL,
                              NULL,
                              'The article by Barker, "The Economics of Avoiding Dangerous Climate Change," is long. Read the following portions:

* Section 1 (Introduction)
* Section 2 (Traditional and New Economics): pp. 176--178 (through the paragraph in the middle of the page that ends "... but any implications for policy are heavily qualified and extensive lists are given of the dangers that are not or cannot be monetised,'' and the single paragraph that starts at the bottom of p. 179 ("Contrast also the pre-Stern traditional conclusion ... assumptions about human welfare and behaviour needed to make the mathematics tractable.")
* Section 3 (Uncertainty): pp. 181--183, through the first complete paragraph on p. 183 ("There are serious problems ... fundamental differences between them.")
* Section 4 (Economic Ethics): Skip the first few pages, which summarize arguments about discounting that we already covered in previous classes. Read pp. 185--187, starting at the bottom of p. 185 with "Justice as a theory of ethics" and reading through the end of the section.
* Section 5 (Engineering and History). Skip this section.
* Section 6  (Social Choice): read pp. 189--190. Read through the first complete paragraph on p. 190 ("In theory ... adaptation investments.")
* Section 7 (Toward a New Economics): Read this whole section.

',
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4202,
                              'LIMITS_OF_ECON',
                              'ADAMS_FALLACY',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4300,
                              'CARBON_TRADING_GAME',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'It is very important that you are in class today unless there is an important and valid excuse for your absence. We will do a role-playing exercise to understand how market-based regulation of greenhouse gas emissions work.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              1
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              4400,
                              'CARBON_TRADING_REVIEW',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'We will review the carbon-trading game and discuss the implications for efficiently managing greenhouse gas emissions.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              101800,
                              'REVIEW_FOR_MIDTERM',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'We will use today to catch up and review for the midterm exam. Bring your questions.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );

INSERT INTO reading_items (
                              rd_item_id,
                              rd_grp_key,
                              src_key,
                              chapter,
                              pages,
                              item_extra,
                              reading_notes,
                              undergraduate_only,
                              graduate_only,
                              optional,
                              rd_prologue,
                              rd_epilogue,
                              rd_break_before
                          )
                          VALUES (
                              101900,
                              'MIDTERM_EXAM',
                              NULL,
                              NULL,
                              NULL,
                              NULL,
                              'The midterm exam will be a mixture of about 40% multiple-choice questions and 60% free-response short-answer questions.
It will cover all the reading through <%format_day_date_by_class_num(calendar, this_class_num - 3, TRUE, FALSE)%>.

I will provide a sheet with the important numbers (such as the Stefan-Boltzmann constant, the lapse rate of the atmosphere, 
the solar constant, and so forth), and the important equations (such as the Stefan-Boltzmann law, the barometric law, 
and the chemical reactions that control carbon-dioxide buffering in the oceans).

Remember to bring a calculator, \#2 pencils, and an eraser.',
                              0,
                              0,
                              0,
                              1,
                              0,
                              0
                          );


-- Table: reading_sources
CREATE TABLE reading_sources (
    src_key              TEXT    PRIMARY KEY,
    title                TEXT,
    short_title          TEXT,
    markdown_title       TEXT,
    short_markdown_title TEXT,
    latex_title          TEXT,
    short_latex_title    TEXT,
    citation             TEXT,
    textbook             INTEGER,
    handout              INTEGER,
    web_page             INTEGER,
    youtube              INTEGER,
    url                  TEXT,
    youtube_id           TEXT
);

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'ARCHER',
                                'Global Warming: Understanding the Forecast',
                                'Understanding the Forecast',
                                '<%MEDIUM_ARCHER%>',
                                '<%SHORT_ARCHER%>',
                                '\MedArcher',
                                '\ShortArcher',
                                'David Archer, _Global Warming: Understanding the Forecast_, 2nd edition (Wiley, 2011), ISBN 978-0-470-94341-0',
                                1,
                                0,
                                0,
                                0,
                                NULL,
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'NORDHAUS',
                                'The Climate Casino: Risk, Uncertainty, and Economics',
                                'Climate Casino',
                                '<%MEDIUM_NORDHAUS%>',
                                '<%SHORT_NORDHAUS%>',
                                '\MedNordhaus',
                                '\ShortNordhaus',
                                'William Nordhaus, _The Climate Casino: Risk, Uncertainty, and Economics_ (Yale University Press, 2015), ISBN 978-0-300-21264-8',
                                1,
                                0,
                                0,
                                0,
                                NULL,
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'PIELKE',
                                'The Climate Fix: What Scientists and Politicians Won''t Tell You about Global Warming',
                                'Climate Fix',
                                '<%MEDIUM_PIELKE%>',
                                '<%SHORT_PIELKE%>',
                                '\MedPielke',
                                '\ShortPielke',
                                'Roger A. Pielke, Jr., _The Climate Fix: What Scientists and Politicians Won''t Tell You about Global Warming_ (Basic Books, 2011) ISBN 978-0-465-02519-0',
                                1,
                                0,
                                0,
                                0,
                                NULL,
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'FEEDBACK_HANDOUT',
                                'Handout on feedbacks',
                                'Handout on feedbacks',
                                'Handout on feedbacks',
                                'Handout on feedbacks',
                                'Handout on feedbacks',
                                'Handout on feedbacks',
                                'Jonathan Gilligan, "Handout on Feedbacks"',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Feedback_Handout.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'ISOTOPE_HANDOUT',
                                'Handout on Isotopes',
                                'Handout on isotopes',
                                'Handout on isotopes',
                                'Handout on isotopes',
                                'Handout on isotopes',
                                'Handout on isotopes',
                                'Jonathan Gilligan, "Handout on Isotopes,"',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Isotope_Handout.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'JACOBSON_SCIAM',
                                'A path to sustainable energy by 2030
',
                                'Handout on renewable energy',
                                'M.Z. Jacobson & M.A. Delucchi, "A Path to Sustainable Energy by 2030"',
                                '"Sustainable Energy by 2030"',
                                'M.Z. Jacobson \& M.A. Delucchi, ``A Path to Sustainable Energy by 2030''''
',
                                '``A Path to Sustainable Energy by 2030''''',
                                'M.Z. Jacobson and M.A. Delucchi, "A Path to Sustainable Energy by 2030," Scientific American, Nov. 2009, pp. 58--65',
                                0,
                                1,
                                0,
                                0,
                                'https://web.stanford.edu/group/efmh/jacobson/Articles/I/sad1109Jaco5p.indd.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'PORTER_FISTICUFFS',
                                'Fisticuffs over the Route to a Clean-Energy Future

',
                                'Handout on renewable energy',
                                'E. Porter, "Fisticuffs over the Route to a Clean-Energy Future"
',
                                '"Fisticuffs"',
                                'E. Porter, ``Fisticuffs over the Route to a Clean-Energy Future''''
',
                                '``Fisticuffs''''
',
                                'E. Porter, "Fisticuffs over the Route to a Clean-Energy Future," New York Times June 20, 2017, p. B1
',
                                0,
                                1,
                                0,
                                0,
                                'https://www.nytimes.com/2017/06/20/business/energy-environment/renewable-energy-national-academy-matt-jacobson.html',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'MOONEY_JACOBSON',
                                'A bitter scientific debate just erupted over the future of America''s power grid
',
                                'Handout on renewable energy',
                                'C. Mooney, "A Bitter Scientific Debate just Erupted over the Future of America''s Power Grid"',
                                'A Bitter Scientific Debate',
                                'C. Mooney, ``A Bitter Scientific Debate just Erupted over the Future of America''s Power Grid''''',
                                'A Bitter Scientific Debate',
                                'C. Mooney, "A Bitter Scientific Debate just Erupted over the Future of America''s Power Grid," Washington Post June 19, 2017
',
                                0,
                                1,
                                0,
                                0,
                                'https://www.washingtonpost.com/news/energy-environment/wp/2017/06/19/a-bitter-scientific-debate-just-erupted-over-the-future-of-the-u-s-electric-grid/',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'DYSON_QUESTION',
                                'The Question of Global Warming',
                                'Handout',
                                'F. Dyson, "The Question of Global Warming"',
                                '"The Question of Global Warming"',
                                'F. Dyson, ``The Question of Global Warming''''
',
                                '``The Question of Global Warming''''',
                                'F. Dyson, "The Question of Global Warming," New York Review of Books, June 2008',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Dyson-GlobalWarming-2008.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'NORDHAUS_ON_STERN',
                                'Critical Assumptions in the Stern Review on Climate Change
',
                                'Handout on discounting',
                                'W. Nordhaus, "Critical Assumptions in the Stern Review on Climate Change"',
                                '"Critical Assumptions"',
                                'W. Nordhaus, ``Critical Assumptions in the Stern Review on Climate Change''''',
                                '``Critical Assumptions''''',
                                'W. Nordhaus, "Critical Assumptions in the Stern Review on Climate Change," Science **317**, 201--202 (2007)
',
                                0,
                                1,
                                0,
                                0,
                                'http://www.econ.yale.edu/~nordhaus/homepage/homepage/nordhaus_stern_science.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'STERN_ETHICS',
                                'Climate Change: Risk, Ethics, and the Stern Review',
                                'Handout on discounting',
                                'N. Stern & C. Taylor, "Climate Change: Risk, Ethics, and the Stern Review"',
                                '"Risk, Ethics, and the Stern Review"',
                                'N. Stern & C. Taylor, ``Climate Change: Risk, Ethics, and the Stern Review''''',
                                '``Risk, Ethics, and the Stern Review''''',
                                'N. Stern & C. Taylor, "Climate Change: Risk, Ethics, and the Stern Review," Science **317**, 203--204 (2007)',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Stern-Risk_Ethics-2007.pdf
',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'ECONOMICS_OF_REGULATION',
                                'The Economics of Regulating Greenhouse Gases: Command & Control, Emissions Trading, and Emissions Taxes',
                                'Handout on economics of regulation',
                                'Handout: "The Economics of Regulating Greenhouse Gases: Command & Control, Emissions Trading, and Emissions Taxes"',
                                '"Economics of Regulating Greenhouse Gases"',
                                'Handout: ``The Economics of Regulating Greenhouse Gases: Command & Control, Emissions Trading, and Emissions Taxes''''',
                                '``Economics of Regulating Greenhouse Gases''''',
                                'J.M. Gilligan, "The Economics of Regulating Greenhouse Gases: Command & Control, Emissions Trading, and Emissions Taxes," handout',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Economics_of_Regulating_Greenhouse_Gases.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'KRUGMAN_GAMBLING',
                                'Gambling with Civilization',
                                'Handout',
                                'P. Krugman, "Gambling with Civilization"',
                                '"Gambling with Civilization"',
                                'P. Krugman, ``Gambling with Civilization''''',
                                '``Gambling with Civilization''''',
                                'P.  Krugman, "Gambling with Civilization," New York Review of Books, Nov. 7 2013',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Krugman-GamblingWithCivilization-2013.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'VICTOR_GRIDLOCK',
                                'Global Warming Gridlock',
                                'Handout on global climate policy',
                                'D.G. Victor, _Global Warming Gridlock_',
                                '_Global Warming Gridlock_',
                                'D.G. Victor, \emph{Global Warming Gridlock}',
                                '\emph{Global Warming Gridlock}',
                                'David Victor, _Global Warming Gridlock_, (Cambridge University Press, 2011)',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Victor_GlobalWarmingGridlock_Chapter01.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'BEYOND_POLITICS',
                                'Beyond Politics',
                                'Handout on private environmental governance',
                                'M.P. Vandenbergh & J.M. Gilligan, _Beyond Politics_, Ch.~1 (posted online)',
                                '_Beyond Politics_',
                                'M.P. Vandenbergh and J.M. Gilligan, \emph{Beyond Politics}, Ch.~1 (posted online).',
                                '\emph{Beyond Politics}',
                                'M.P. Vandenbergh and J.M. Gilligan, _Beyond Politics_ (Cambridge, 2017)',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Beyond_Politics_Chapter_1.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'BARKER_ECON',
                                'The Economics of Avoiding Dangerous Climate Change',
                                'Handout on economics of climate change',
                                'T. Barker, "The Economics of Avoiding Dangerous Climate Change"',
                                '"Economics of Climate Change"',
                                'T. Barker, ``The Economics of Avoiding Dangerous Climate Change''''',
                                '``Economics of Climate Change''''',
                                'T. Barker, "The Economics of Avoiding Dangerous Climate Change," Climatic Change **89**, 173--194 (2008)',
                                0,
                                1,
                                0,
                                0,
                                'https://link-springer-com.proxy.library.vanderbilt.edu/article/10.1007/s10584-008-9433-x',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'ROPEIK_MIND_GAMES',
                                'Clean energy mind games',
                                'Handout on nuclear energy',
                                'D. Ropeik, "Clean Energy Mind Games"',
                                '"Mind Games"',
                                'D. Ropeik, ``Clean Energy Mind Games''''',
                                '``Mind Games''''',
                                'D. Ropeik, "Clean Energy Mind Games," Issues in Science and Technology **33** (4) (Summer, 2017)',
                                0,
                                1,
                                0,
                                0,
                                'http://issues.org/33-4/clean-energy-mind-games/',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'QUIGGIN_DISCOUNTING',
                                'Stern and his Critics on Discounting and Climate Change',
                                'Handout on discounting',
                                'J. Quiggin, "Stern and His Critics on Discounting and Climate Change: An Editorial Essay"',
                                '"Stern and his Critics"',
                                'J. Quiggin, ``Stern and His Critics on Discounting and Climate Change: An Editorial Essay''''',
                                '``Stern and his Critics''''',
                                'J. Quiggin, "Stern and His Critics on Discounting and Climate Change: An Editorial Essay," Climatic Change **89**, 195 (2008)',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/Quiggin-Discounting-2008.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'PIELKE_UK',
                                'The British Climate Change Act: a critical evaluation and proposed alternative approach',
                                'Handout on decarbonization policy',
                                'R.A. Pielke, Jr., "The British Climate Change Act: a Critical Evaluation and Proposed Alternative Approach"',
                                '"The British Climate Change Act"',
                                'R.A. Pielke, Jr., ``The British Climate Change Act: a Critical Evaluation and Proposed Alternative Approach''''',
                                '``The British Climate Change Act''''',
                                'Roger A. Pielke, Jr., "The British Climate Change Act: a critical evaluation and proposed alternative approach," Environmental Research Letters **4**, 024010 (2009).',
                                0,
                                1,
                                0,
                                0,
                                'http://iopscience.iop.org/article/10.1088/1748-9326/4/2/024010/meta',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'PIELKE_JAPAN',
                                'Mamizu climate policy: an evaluation of Japanese carbon emission reduction targets',
                                'Handout on decarbonization policy',
                                'R.A. Pielke, Jr., "Mamizu Climate Policy: An Evaluation of Japanese Carbon Emission Reduction Targets"',
                                '"Mamizu Climate Policy"',
                                'R.A. Pielke, Jr., ``Mamizu Climate Policy: An Evaluation of Japanese Carbon Emission Reduction Targets''''',
                                '``Mamizu Climate Policy''''',
                                'Rogar A. Pielke, Jr., "Mamizu Climate Policy: An Evaluation of Japanese Carbon Emission Reduction Targets," Environmental Research Letters **4**, 044001 (2009)',
                                0,
                                1,
                                0,
                                0,
                                'http://iopscience.iop.org/article/10.1088/1748-9326/4/4/044001/meta',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'PIELKE_AUSTRALIA',
                                'An evaluation of the targets and timetables of proposed Australian emissions reduction policies',
                                'Handout on decarbonization policy',
                                'R.A. Pielke, Jr., "An Evaluation of the Targets and Timetables of Proposed Australian Emissions Reduction Policies"',
                                '"Australian Emissions Reduction Policies"',
                                'R.A. Pielke, Jr., ``An Evaluation of the Targets and Timetables of Proposed Australian Emissions Reduction Policies''''',
                                '``Australian Emissions Reduction Policies''''',
                                'Roger A. Pielke, Jr., "An Evaluation of the Targets and Timetables of Proposed Australian Emissions Reduction Policies," Environmental Science & Policy **14**, 20 (2011).',
                                0,
                                1,
                                0,
                                0,
                                'https://www-sciencedirect-com.proxy.library.vanderbilt.edu/science/article/pii/S1462901110001383',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'ADAMS_FALLACY',
                                'Stern''s Review and Adam''s Fallacy',
                                'Adam''s Fallacy',
                                'C. Jaeger, H.-J. Schellnhuber, & V. Brovkin, "Stern''s Review and Adam''s Fallacy"',
                                '"Adam''s Fallacy"',
                                'C. Jaeger, H.-J. Schellnhuber, \& V. Brovkin, ``Stern''s Review and Adam''s Fallacy''''',
                                '``Adam''s Fallacy''''',
                                'C. Jaeger, H.-J. Schellnhuber, and V. Brovkin, "Stern''s Review and Adam''s Fallacy," Climatic Change **89**, 207--218',
                                0,
                                1,
                                0,
                                0,
                                'https://link-springer-com.proxy.library.vanderbilt.edu/content/pdf/10.1007%2Fs10584-008-9436-7.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'TOMLINSON_FINISHED',
                                'Nuclear power as we know it is finished',
                                'Handout on nuclear power',
                                'C. Tomlinson, "Nuclear Power as We Know it Is Finished"',
                                '"Nuclear power as We Know it Is Finished"',
                                'C. Tomlinson, ``Nuclear Power as We Know it Is Finished''''',
                                '``Nuclear power as We Know it Is Finished''''',
                                'C. Tomlinson, "Nuclear Power as We Know it Is Finished," Houston Chronicle Aug. 3, 2017',
                                0,
                                1,
                                0,
                                0,
                                'https://www.houstonchronicle.com/business/columnists/tomlinson/article/Nuclear-power-as-we-know-it-is-finished-11727465.php',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'LESTER_ROADMAP',
                                'A roadmap for U.S. nuclear energy innovation',
                                'Roadmap for nuclear energy',
                                'R. K. Lester, "A Roadmap for U.S. Nuclear Energy Innovation"',
                                '"Nuclear Energy Innovation"',
                                'R.K. Lester, ``A Roadmap for U.S. Nuclear Energy Innovation''''',
                                '``Nuclear Energy Innovation''''',
                                'R.K. Lester, "A Roadmap for U.S. Nuclear Energy Innovation," Issues in Science and Technology **32** (2) (Winter, 2016)
',
                                0,
                                1,
                                0,
                                0,
                                'http://issues.org/32-2/a-roadmap-for-u-s-nuclear-energy-innovation/',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'JACOBSON_PNAS',
                                'Low-cost solution to the grid reliability problem with 100% penetration of intermittent wind, water, and solar for all purposes',
                                'Handout on renewable energy',
                                'M.Z. Jacobson _et al_., "Low-cost solution to the grid reliability problem with 100% penetration of intermittent wind, water, and solar for all purposes"',
                                '"Low-cost solution"',
                                'M.Z. Jacobson \emph{et al}., ``Low-cost solution to the grid reliability problem with 100\% penetration of intermittent wind, water, and solar for all purposes''''',
                                '``Low-cost solution''''',
                                'M.Z. Jacobson _et al_., "Low-cost solution to the grid reliability problem with 100% penetration of intermittent wind, water, and solar for all purposes," PNAS **112**, 15060 (2015)',
                                0,
                                1,
                                0,
                                0,
                                'http://www.pnas.org/content/112/49/15060',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'CLACK_PNAS',
                                'Evaluation of a proposal for reliable low-cost grid power with 100% wind, water, and solar',
                                'Handout on renewable energy',
                                'C.T.M. Clack _et al_., "Evaluation of a Proposal for Reliable Low-Cost Grid Power with 100% Wind, Water, and Solar"',
                                '"Evaluation of a Proposal"',
                                'C.T.M. Clack \emph{et al}., ``Evaluation of a Proposal for Reliable Low-Cost Grid Power with 100% Wind, Water, and Solar''''',
                                '``Evaluation of a Proposal''''',
                                'C.T.M. Clack _et al_., "Evaluation of a Proposal for Reliable Low-Cost Grid Power with 100% Wind, Water, and Solar," PNAS **114**, 6722 (2017)',
                                0,
                                1,
                                0,
                                0,
                                'http://www.pnas.org/content/114/26/6722',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'JACOBSON_RESPONSE_TO_CLACK',
                                'The United States can keep the grid stable at low cost with 100% clean, renewable energy in all sectors, despite inaccurate claims',
                                'Handout on renewable energy',
                                'M.Z. Jacobson _et al_., "The United States Can Keep the Grid Stable at Low Cost with 100% Clean, Renewable Energy in All Sectors, Despite Inaccurate Claims"',
                                '"Inaccurate Claims"',
                                'M.Z. Jacobson \emph{et al}., ``The United States Can Keep the Grid Stable at Low Cost with 100% Clean, Renewable Energy in All Sectors, Despite Inaccurate Claims''''',
                                '``Inaccurate Claims''''',
                                'M.Z. Jacobson _et al_., "The United States Can Keep the Grid Stable at Low Cost with 100% Clean, Renewable Energy in All Sectors, Despite Inaccurate Claims," PNAS **114*, E5021 (2017)',
                                0,
                                1,
                                0,
                                0,
                                'http://www.pnas.org/content/114/26/E5021',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'HEGERL_RISKS',
                                'Risks of Climate Engineering',
                                'Handout on risks of geoengineering',
                                'G.C. Hegerl & S. Solomon, "Risks of Climate Engineering"',
                                '"Risks of Climate Engineering"',
                                'G.C. Hegerl \& S. Solomon, ``Risks of Climate Engineering''''',
                                '``Risks of Climate Engineering''''',
                                'G.C. Hegerl and S. Solomon, "Risks of Climate Engineering," Science **325**, 955 (2009)',
                                0,
                                1,
                                0,
                                0,
                                'http://science.sciencemag.org.proxy.library.vanderbilt.edu/content/325/5943/955',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'TBA',
                                'Reading to be announced',
                                'TBA',
                                'Reading to be announced',
                                'TBA',
                                'Reading to be announced',
                                'TBA',
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL,
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'COOK_WAYS_TO_MISLEAD',
                                'Critical Thinking about Climate: 23 Ways to Mislead',
                                '23 Ways to Mislead',
                                'John  Cook, "Critical Thinking about Climate: 23 Ways to Mislead"',
                                '23 Ways to Mislead',
                                'John Cook, ``Critical Thinking about Climate: 23 Ways to Mislead''''',
                                '``23 Ways to Mislead''''',
                                'John Cook, "Critical Thinking about Climate: 23 Ways to Mislead," YouTube (2020)',
                                0,
                                0,
                                0,
                                1,
                                'https://youtu.be/gecDy9wDuCs',
                                'gecDy9wDuCs'
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'COOK_FLICC',
                                'A History of FLICC: the Five Techniques of Science Denial',
                                'A History of FLICC',
                                'John Cook, "A History of FLICC: The Five Techniques of Science Denial"',
                                '"A History of FLICC"',
                                'John Cook, ``A History of FLICC: The Five Techniques of Science Denial''''',
                                '``A History of FLICC''''',
                                'John Cook, "A History of FLICC: The Five Techniques of Science Denial" (2020)',
                                0,
                                0,
                                1,
                                0,
                                'https://crankyuncle.com/a-history-of-flicc-the-5-techniques-of-science-denial/',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'GILLIGAN_ERSS',
                                'A framework for assessing the impact of private climate governance',
                                'Private climate governance',
                                'A framework for assessing the impact of private climate governance',
                                'Private climate governance',
                                'A framework for assessing the impact of private climate governance',
                                NULL,
                                'J.M. Gilligan & M.P. Vandenbergh, "A framework for assessing the impact of private climate governance," _Energy Research & Social Science,_ **60**, 101400 (2020).',
                                0,
                                1,
                                0,
                                NULL,
                                '/files/reading_handouts/gilligan_2020_framework.pdf',
                                NULL
                            );

INSERT INTO reading_sources (
                                src_key,
                                title,
                                short_title,
                                markdown_title,
                                short_markdown_title,
                                latex_title,
                                short_latex_title,
                                citation,
                                textbook,
                                handout,
                                web_page,
                                youtube,
                                url,
                                youtube_id
                            )
                            VALUES (
                                'NIELSEN_ONE_EARTH',
                                'Improving climate change mitigation analysis: A framework for examining feasibility',
                                'Improving climate change mitigation analysis',
                                'Improving climate change mitigation analysis: A framework for examining feasibility',
                                'Improving climate change mitigation analysis',
                                'Improving climate change mitigation analysis: A framework for examining feasibility',
                                'Improving climate change mitigation analysis',
                                'K.S. Nielsen _et al.,_ "Improving climate change mitigation analysis: A framework for examining feasibility," _One Earth,_ **3**, 325--336 (2020).',
                                0,
                                1,
                                0,
                                0,
                                '/files/reading_handouts/nielsen_2020_improving_climate_change.pdf',
                                NULL
                            );


-- Table: text_codes
CREATE TABLE text_codes (
    code_name   TEXT    PRIMARY KEY ON CONFLICT IGNORE,
    code_value  TEXT,
    latex_value TEXT,
    print_value INTEGER
);

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'ARCHER',
                           'Global Warming: Understanding the Forecast',
                           'Global Warming: Understanding the Forecast',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'MEDIUM_ARCHER',
                           'Understanding the Forecast',
                           'Understanding the Forecast',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'SHORT_ARCHER',
                           'Forecast',
                           'Forecast',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'PIELKE',
                           'The Climate Fix',
                           'The Climate Fix',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'MEDIUM_PIELKE',
                           'The Climate Fix',
                           'The Climate Fix',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'SHORT_PIELKE',
                           'Climate Fix',
                           'Climate Fix',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'NORDHAUS',
                           'The Climate Casino',
                           'The Climate Casino',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'MEDIUM_NORDHAUS',
                           'Climate Casino',
                           'Climate Casino',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'SHORT_NORDHAUS',
                           'Casino',
                           'Casino',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'RSTUDIO',
                           'RStudio',
                           'RStudio',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'COO',
                           'CO~2~',
                           '\COO',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'CARBONIC_ACID',
                           'H~2~CO~3~',
                           '\carbonicacid',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'HPLUS',
                           'H^+^',
                           '\hplus',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'BICARBONATE',
                           'HCO~3~^-^',
                           '\bicarbonate',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'CARBONATE',
                           'CO~3~^-2^',
                           '\carbonate',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'METHANE',
                           'CH~4~',
                           '\methane',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'SLUGULATOR',
                           'SLUGULATOR',
                           '\SLUGULATOR',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'GEOCARB',
                           'GEOCARB',
                           '\GEOCARB',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'MODTRAN',
                           'MODTRAN',
                           '\MODTRAN',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'HTWO',
                           'H~2~',
                           '\Htwo',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'OTWO',
                           'O~2~',
                           '\Otwo',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'NTWO',
                           'N~2~',
                           '\Ntwo',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'OEIGHTEEN',
                           '^18^O',
                           '\Oeighteen',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'OSIXTEEN',
                           '^16^O',
                           '\Osixeen',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'CTWELVE',
                           '^12^C',
                           '\Ctwelve',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'CTHIRTEEN',
                           '^13^C',
                           '\Cthirteen',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'CFOURTEEN',
                           '^14^C',
                           '\Cfourteen',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'HONE',
                           '^1^H',
                           '\Hone',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'DEUTERIUM',
                           '^2^H',
                           '\deuterium',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'MICRON',
                           '&mu;m',
                           '$\mu$m',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'WAVENUMBER',
                           'cycles/cm',
                           '$\text{cycles}/\text{cm}$',
                           NULL
                       );

INSERT INTO text_codes (
                           code_name,
                           code_value,
                           latex_value,
                           print_value
                       )
                       VALUES (
                           'DEGREE_CELSIUS',
                           '&deg;C',
                           '$\SI{2}{\celsius}',
                           NULL
                       );


-- Index: events_event_id
CREATE INDEX events_event_id ON events (
    event_id
);


-- Index: exams_exam_id
CREATE INDEX exams_exam_id ON exams (
    exam_id
);


-- Index: holidays_holiday_id
CREATE INDEX holidays_holiday_id ON holidays (
    holiday_id
);


-- Index: homework_assignments_hw_id
CREATE INDEX homework_assignments_hw_id ON homework_assignments (
    hw_id
);


-- Index: homework_solutions_hw_sol_id
CREATE INDEX homework_solutions_hw_sol_id ON homework_solutions (
    sol_id
);


-- Index: lab_assignments_lab_asg_id
CREATE INDEX lab_assignments_lab_asg_id ON lab_assignments (
    "lab_id"
);


-- Index: lab_items_lab_item_id
CREATE INDEX lab_items_lab_item_id ON lab_items (
    lab_item_id
);


-- Index: lab_solutions_lab_sol_id
CREATE INDEX lab_solutions_lab_sol_id ON lab_solutions (
    lab_sol_id
);


-- Index: link_cal_event_cal_id
CREATE INDEX link_cal_event_cal_id ON link_cal_event (
    cal_id
);


-- Index: link_cal_exam_cal_id
CREATE INDEX link_cal_exam_cal_id ON link_cal_exam (
    cal_id
);


-- Index: link_cal_holiday_cal_id
CREATE INDEX link_cal_holiday_cal_id ON link_cal_holiday (
    cal_id
);


-- Index: master_cal_cal_id
CREATE UNIQUE INDEX master_cal_cal_id ON master_cal (
    cal_id
);


-- Index: master_cal_class_key
CREATE INDEX master_cal_class_key ON master_cal (
    class_key
);


-- Index: master_cal_date
CREATE INDEX master_cal_date ON master_cal (
    date
);


-- Index: master_cal_event_key
CREATE INDEX master_cal_event_key ON master_cal (
    event_key
);


-- Index: master_cal_exam_key
CREATE INDEX master_cal_exam_key ON master_cal (
    exam_key
);


-- Index: master_cal_holiday_key
CREATE INDEX master_cal_holiday_key ON master_cal (
    holiday_key
);


-- Index: master_cal_lab_key
CREATE INDEX master_cal_lab_key ON master_cal (
    lab_key
);


-- Index: notices_notice_id
CREATE INDEX notices_notice_id ON notices (
    notice_id
);


-- Index: reading_items_rd_item_id
CREATE INDEX reading_items_rd_item_id ON reading_items (
    rd_item_id
);


-- Index: reading_sources_source_id
CREATE INDEX reading_sources_source_id ON reading_sources (
    src_key
);


-- Index: text_codes_code_name
CREATE INDEX text_codes_code_name ON text_codes (
    code_name
);


COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
